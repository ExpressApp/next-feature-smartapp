{"version":3,"sources":["redux/selectors/ui.ts","components/main-loader/MainLoader.tsx","redux/selectors/bot.ts","types/index.ts","constants.ts","helpers/index.ts","redux/actions/bot.ts","assets/plus.svg","assets/clear-input.svg","assets/file.svg","assets/copy.svg","components/json-editor/JsonViewer.tsx","redux/actions/client.ts","redux/selectors/client.ts","assets/arrow-left.svg","components/feature-page-header/FeaturePageHeader.tsx","components/feature-page/FeaturePage.tsx","assets/botx-icon.svg","components/top-loader/TopLoader.tsx","components/express-notifications/ExpressNotifications.tsx","redux/actions/ui.ts","components/meta-page/MetaPage.tsx","redux/router.ts","components/feature-smartapp/FeatureSmartapp.tsx","components/notifier/Notifier.tsx","components/Main.tsx","redux/reducers/ui.ts","redux/reducers/bot.ts","redux/reducers/client.ts","redux/reducers/index.ts","redux/sagas/ui.ts","redux/sagas/bot.ts","redux/sagas/client.ts","redux/sagas/index.ts","index.tsx","redux/configureStore.ts"],"names":["getTopLoader","createSelector","state","ui","topLoader","getMainLoader","mainLoader","getRedirectPath","redirectPath","MainLoader","useSelector","className","getFeaturesMenu","bot","features","getFeatureBotResponse","response","EventType","BotFeatureMethod","ExpressFeatureMethod","ExpressFeatureName","ClientEventMethod","InputId","InputLabel","InputType","EXPRESS_NOTIFICATION_FEATURE","OPEN_SMART_APP_META_FEATURE","MENU_EVENT","method","params","text","INPUT_TYPE","INPUT_TEXT","INPUT_NUMBER","FILE_PICKER","ARRAY_UUID","UUID","EXPRESS_FEATURES","ADD_CONTACT","name","uiElements","id","PHONE","label","type","NAME","CREATE_PERSONAL_CHAT","HUID","GET_CONTACT","OPEN_SMARTAPP","SMARTAPP_ID","getFormInitialValues","reduce","acc","item","undefined","LOAD_FEATURES","LOAD_FEATURES_SUCCESS","RESET_RESPONSE","SEND_FEATURE_BOT_EVENT","SEND_FEATURE_BOT_EVENT_SUCCESS","loadFeatures","createAction","loadFeaturesSuccess","resetFeatures","sendFeatureBotEvent","botEvent","sendFeatureBotEventSuccess","_path","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgPlus","_ref","svgRef","title","titleId","props","xmlns","viewBox","fill","ref","fillRule","d","ForwardRef","SvgClearInput","transform","_g","SvgFile","width","height","x","y","rx","fontSize","fontWeight","SvgCopy","JsonViewer","container","useRef","useEffect","editor","JSONEditor","current","mode","enableTransform","json","set","button","document","createElement","innerHTML","ReactDOMServer","renderToStaticMarkup","addEventListener","obj","JSON","stringify","body","appendChild","select","execCommand","removeChild","copyToClipboardJson","setAttribute","menu","querySelector","search","insertBefore","destroy","UPLOAD_FILE","UPLOAD_FILE_SUCCESS","UPLOAD_FILES","UPLOAD_FILES_SUCCESS","REMOVE_FILE_SUCCESS","RESET_ATTACHMENTS","SEND_EXPRESS_EVENT","SEND_EXPRESS_EVENT_SUCCESS","SET_EXPRESS_NOTIFICATION_SUCCESS","RESET_EXPRESS_NOTIFICATION_SUCCESS","RESET_EXPRESS_RESPONSE","SEND_EXPRESS_READY_EVENT","SET_META","uploadFile","uploadFileSuccess","file","uploadFiles","uploadFilesSuccess","files","removeFileSuccess","resetAttachments","sendExpressEvent","expressEvent","sendExpressEventSuccess","setExpressNotificationSuccess","notification","resetExpressNotificationSuccess","setMeta","meta","resetExpressResponse","sendReadyEvent","getAttachments","client","attachments","getExpressResponse","getMeta","getExpressNotifications","notifications","notificaions","SvgArrowLeft","FeaturePageHeader","to","FeaturePage","dispatch","useDispatch","botResponse","expressResponse","inputs","setInputs","useState","inputError","setInputError","isJSONViewer","setIsJSONViewer","isAllowNewInputs","SEARCH_USERS","isFilesMethod","ECHO_FILE","ECHO_FILES","includes","isUsersMethod","isExpressMethod","toggleIsJSONViewer","formik","useFormik","initialValues","onSubmit","formValues","values","filter","value","getIsSubmitButtonDisabled","map","input","index","HUIDS","FILE","FILES","onClick","attachment","fileName","handleRemoveFile","fileId","classnames","disabled","handleSubmit","inputType","isShowLabel","isNotEmpty","uuid","test","phone","getIsInputError","onChange","handleChange","multiple","min","setFieldValue","last","next","payload","result","replaceAll","checked","TopLoader","start","setStart","stop","setStop","finish","setFinish","stopTimeout","finishTimeout","setTimeout","clearTimeout","SvgBotxIcon","ExpressNotifications","expressNotifications","data","SET_TOP_LOADER","SET_REDIRECT_PATH","setTopLoader","setMainLoader","setRedirectPath","MetaPage","history","createBrowserHistory","FeatureSmartapp","push","path","Notifier","status","Main","load","setLoad","notifier","setNotifier","bridge","onReceive","SMARTAPP_RPC","NOTIFICATION","reducers","handleActions","rootReducer","combineReducers","router","connectRouter","loadFeaturesSaga","put","sendBotEvent","e","console","error","sendFeatureBotEventSaga","action","uploadFileSaga","sendClientEvent","record","uploadFilesSaga","records","sendExpressEventSaga","sendExpressReadyEventSaga","READY","timeout","log","rootSaga","all","takeEvery","ReactDOM","render","StrictMode","store","sagaMiddleware","createSagaMiddleware","routerMiddleware","createRouterMiddleware","createStore","composeWithDevTools","applyMiddleware","run","toPromise","catch","configureStore","getElementById"],"mappings":"0aAGO,MAAMA,EAAeC,YAC1B,CAAEC,GAAoBA,EAAMC,GAAGC,YAC/BA,GAAaA,IAGFC,EAAgBJ,YAC3B,CAAEC,GAAoBA,EAAMC,GAAGG,aAC/BA,GAAcA,IAGHC,EAAkBN,YAC7B,CAAEC,GAAoBA,EAAMC,GAAGK,eAC/BA,GAAgBA,I,WCVH,SAASC,IAGtB,OAFmBC,YAAYL,GAK7B,qBAAKM,UAAU,cAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,wBACA,wBACA,wBACA,6BARkB,K,OCLnB,MAAMC,EAAkBX,YAC7B,CAAEC,GAAoBA,EAAMW,IAAIC,WAChCA,GAAYA,IAGDC,EAAwBd,YACnC,CAAEC,GAAoBA,EAAMW,IAAIG,WAChCA,GAAYA,I,mBCRP,IAAKC,EAMAC,EASAC,EAOAC,EAOAC,EAsBAC,EAaAC,EAaAC,G,SA7EAP,K,4BAAAA,E,4BAAAA,E,0CAAAA,M,cAMAC,K,YAAAA,E,wCAAAA,E,sCAAAA,E,sBAAAA,E,wBAAAA,E,6BAAAA,M,cASAC,K,0BAAAA,E,4CAAAA,E,0BAAAA,E,gCAAAA,M,cAOAC,K,0BAAAA,E,4CAAAA,E,0BAAAA,E,+BAAAA,M,cAOAC,K,cAAAA,E,0BAAAA,E,6BAAAA,M,cAsBAC,K,YAAAA,E,cAAAA,E,cAAAA,E,YAAAA,E,cAAAA,E,cAAAA,E,cAAAA,E,YAAAA,E,YAAAA,E,qBAAAA,M,cAaAC,K,YAAAA,E,cAAAA,E,cAAAA,E,YAAAA,E,cAAAA,E,cAAAA,E,cAAAA,E,YAAAA,E,YAAAA,E,2BAAAA,M,cAaAC,K,wBAAAA,E,4BAAAA,E,0BAAAA,E,wBAAAA,E,aAAAA,M,YCtEL,MAAMC,EACH,eADGA,EAEL,uBAGKC,EACL,sBADKA,EAEH,sBAGGC,EAAkB,CAC7BC,OAAQ,OACRC,OAAQ,CACNC,KAAM,SAIGC,EAAwC,CACnDC,WAAY,OACZC,aAAc,SACdC,YAAa,OACbC,WAAY,OACZC,KAAM,QAGKC,EAAqC,CAChD,CACET,OAAQT,EAAqBmB,YAC7BC,KAAMnB,EAAmBkB,YACzBE,WAAY,CACV,CACEC,GAAInB,EAAQoB,MACZC,MAAOpB,EAAWmB,MAClBE,KAAMpB,EAAUQ,YAElB,CACES,GAAInB,EAAQuB,KACZF,MAAOpB,EAAWsB,KAClBD,KAAMpB,EAAUQ,cAItB,CACEJ,OAAQT,EAAqB2B,qBAC7BP,KAAMnB,EAAmB0B,qBACzBN,WAAY,CAAC,CACXC,GAAInB,EAAQyB,KACZJ,MAAOpB,EAAWwB,KAClBH,KAAMpB,EAAUY,QAGpB,CACER,OAAQT,EAAqB6B,YAC7BT,KAAMnB,EAAmB4B,YACzBR,WAAY,CAAC,CACXC,GAAInB,EAAQoB,MACZC,MAAOpB,EAAWmB,MAClBE,KAAMpB,EAAUQ,cAGpB,CACEJ,OAAQT,EAAqB8B,cAC7BV,KAAMnB,EAAmB6B,cACzBT,WAAY,CAAC,CACXC,GAAInB,EAAQ4B,YACZP,MAAOpB,EAAW2B,YAClBN,KAAMpB,EAAUQ,e,YCrEf,MAAMmB,EAA4DX,GACvE,OAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAYY,QAAO,CAACC,EAAiBC,KAC1CD,EAAIC,EAAKb,SAAMc,EACRF,IACN,I,aCPE,MAAMG,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAiB,iBACjBC,EAAyB,yBACzBC,EAAiC,iCAEjCC,EAAeC,YAAaN,GAAe,SAE3CO,EAAsBD,YAAaL,GAAwB3C,GAA0BA,IACrFkD,EAAgBF,YAAaJ,GAAgB,SAE7CO,EAAsBH,YAAaH,GAAyBO,GAAuBA,IACnFC,EAA6BL,YACxCF,GACC5C,GAA+DA,ICjBlE,IAAIoD,EAEJ,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,GAAkBH,EAASY,MAAMC,KAAMR,WAIhT,SAASS,EAAQC,EAAMC,GACrB,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAOf,EAAS,CACtDoB,MAAO,6BACPC,QAAS,YACTC,KAAM,eACNC,IAAKP,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3D7C,GAAI8C,GACHD,GAAS,KAAMlB,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EyB,SAAU,UACVC,EAAG,0CAIP,MAAMC,EAA0B,aAAiBZ,GAClC,IC3BX,ED2BW,ICzBf,SAAS,IAA2Q,OAA9P,EAAWb,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,GAAkB,EAASS,MAAMC,KAAMR,WAIhT,SAASsB,GAAcZ,EAAMC,GAC3B,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAO,EAAS,CACtDK,MAAO,6BACPC,QAAS,YACTC,KAAM,eACNC,IAAKP,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3D7C,GAAI8C,GACHD,GAAS,KAAM,IAAU,EAAqB,gBAAoB,OAAQ,CAC3EK,KAAM,eACNG,EAAG,sCACHG,UAAW,uBAIf,MAAM,GAA0B,aAAiBD,IAClC,IC5BXE,GD4BW,IC1Bf,SAAS,KAA2Q,OAA9P,GAAW5B,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,GAAkB,GAASS,MAAMC,KAAMR,WAIhT,SAASyB,GAAQf,EAAMC,GACrB,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAO,GAAS,CACtDK,MAAO,6BACPC,QAAS,YACTE,IAAKP,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3D7C,GAAI8C,GACHD,GAAS,KAAMY,KAAOA,GAAkB,gBAAoB,IAAK,CAClEP,KAAM,OACNE,SAAU,UACVI,UAAW,iBACG,gBAAoB,OAAQ,CAC1CN,KAAM,UACNG,EAAG,0QACY,gBAAoB,OAAQ,CAC3CM,MAAO,KACPC,OAAQ,MACRC,EAAG,EACHC,EAAG,OACHZ,KAAM,UACNa,GAAI,IACW,gBAAoB,OAAQ,CAC3Cb,KAAM,OACNc,SAAU,IACVC,WAAY,KACE,gBAAoB,QAAS,CAC3CJ,EAAG,MACHC,EAAG,IACF,8BAGL,MAAM,GAA0B,aAAiBJ,IAClC,QC5CX,G,oBAEJ,SAAS,KAA2Q,OAA9P,GAAW7B,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,GAAkB,GAASS,MAAMC,KAAMR,WAIhT,SAASiC,GAAQvB,EAAMC,GACrB,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAO,GAAS,CACtDK,MAAO,6BACPC,QAAS,YACTC,KAAM,eACNC,IAAKP,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3D7C,GAAI8C,GACHD,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EK,KAAM,eACNG,EAAG,iPAIP,MAAM,GAA0B,aAAiBa,IAClC,Q,kCCpBA,SAASC,GAAWpB,GACjC,MAAMqB,EAAYC,iBAAO,MAgCzB,OAnBAC,qBAAU,KACR,MAAMC,EAAS,IAAIC,KAAWJ,EAAUK,QAAS,CAAEC,KAAM,OAAQC,iBAAiB,IAE9E5B,EAAM6B,MAAML,EAAOM,IAAI9B,EAAM6B,MAEjC,MAAME,EAASC,SAASC,cAAc,UACtCF,EAAO5G,UAAY,oBACnB4G,EAAOG,UAAYC,KAAeC,qBAAqB,cAAC,GAAD,CAAUvB,OAAO,KAAKD,MAAM,QACnFmB,EAAOM,iBAAiB,SAAS,IAnBPC,KAC1B,MAAMjB,EAAYW,SAASC,cAAc,YAEzCZ,EAAUa,UAAYK,KAAKC,UAAUF,EAAK,KAAM,MAChDN,SAASS,KAAKC,YAAYrB,GAE1BA,EAAUsB,SACVX,SAASY,YAAY,QACrBZ,SAASS,KAAKI,YAAYxB,IAWayB,CAAoB9C,EAAM6B,QACjEE,EAAOgB,aAAa,QAAS,qBAE7B,MAAMC,EAAOhB,SAASiB,cAAc,oBAC9BC,EAASlB,SAASiB,cAAc,uCAItC,OAFAD,EAAKG,aAAapB,EAAQmB,GAEnB,IAAM1B,EAAO4B,YACnB,CAACpD,EAAM6B,OAEH,qBAAK1G,UAAU,cAAciF,IAAKiB,I,wBCrCpC,MAAMgC,GAAc,cACdC,GAAsB,sBACtBC,GAAe,eACfC,GAAuB,uBAEvBC,GAAsB,sBACtBC,GAAoB,oBACpBC,GAAqB,qBACrBC,GAA6B,6BAC7BC,GAAmC,2BACnCC,GAAqC,qCACrCC,GAAyB,yBACzBC,GAA2B,2BAC3BC,GAAW,WAEXC,GAAa5F,YAAa+E,IAAa,eAACjG,EAAD,uDAAgB,GAAhB,MAAwB,CAAEA,WACjE+G,GAAoB7F,YAAagF,IAAsBc,GAAgBA,IACvEC,GAAc/F,YAAaiF,IAAc,eAACnG,EAAD,uDAAgB,GAAhB,MAAwB,CAAEA,WACnEkH,GAAqBhG,YAAakF,IAAuBe,GAAmBA,IAE5EC,IADalG,YAfC,eAe0BrB,GAAeA,IACnCqB,YAAamF,IAAsBxG,GAAeA,KACtEwH,GAAmBnG,YAAaoF,IAAmB,SACnDgB,GAAmBpG,YAAaqF,IAAqBgB,GAA+BA,IACpFC,GAA0BtG,YACrCsF,IACCpI,GAA2CA,IAEjCqJ,GAAgCvG,YAC3CuF,IACCiB,GAA6CA,IAEnCC,GAAkCzG,YAC7CwF,IACA,SAGWkB,GAAU1G,YACrB2F,IACCgB,GAAuCA,IAE7BC,GAAuB5G,YAAayF,IAAwB,SAC5DoB,GAAiB7G,YAAa0F,IAA0B,SCzCxDoB,GAAiB3K,YAC5B,CAAEC,GAAoBA,EAAM2K,OAAOC,cACnChK,GAAYA,IAGDiK,GAAqB9K,YAChC,CAAEC,GAAoBA,EAAM2K,OAAO7J,WACnCA,GAAYA,IAGDgK,GAAU/K,YACrB,CAAEC,GAAoBA,EAAM2K,OAAOJ,OACnCA,GAAQA,IAGGQ,GAA0BhL,YACrC,CAAEC,GAAoBA,EAAM2K,OAAOK,gBACnCC,GAAgBA,I,ICpBd,G,SAEJ,SAAS,KAA2Q,OAA9P,GAAW7G,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,GAAkB,GAASS,MAAMC,KAAMR,WAIhT,SAAS0G,GAAahG,EAAMC,GAC1B,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAO,GAAS,CACtDK,MAAO,6BACPC,QAAS,YACTC,KAAM,eACNC,IAAKP,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3D7C,GAAI8C,GACHD,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EQ,EAAG,sEAIP,MAAM,GAA0B,aAAiBsF,IAClC,I,OCtBA,SAASC,GAAT,GAAsC,IAAX,KAAE9I,GAAQ,EAClD,OACE,sBAAK5B,UAAU,uBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB2K,GAAG,IAArC,SACE,cAAC,GAAD,CAAW3K,UAAU,mBAAmB0F,OAAQ,GAAID,MAAO,OAE7D,qBAAKzF,UAAU,qBAAf,SACE,uBAAMA,UAAU,sBAAhB,UAAuC4B,EAAvC,kBCwBO,SAASgJ,GAAT,GAAsF,IAAD,UAAhE,KAAEhJ,EAAF,OAAQX,EAAR,WAAgBY,EAAa,IAAmC,EAClG,MAAMgJ,EAAWC,cAEXC,EAAchL,YAAYK,GAC1B4K,EAAkBjL,YAAYqK,IAC9BD,EAAcpK,YAAYkK,KAEzBgB,EAAQC,GAAaC,mBAAkB,KACvCC,EAAYC,GAAiBF,mBAAS,KACtCG,EAAcC,GAAmBJ,oBAAS,GAE3CK,EAAmBvK,IAAWV,EAAiBkL,aAC/CC,EAAgB,CAACnL,EAAiBoL,UAAWpL,EAAiBqL,YAAYC,SAAS5K,GACnF6K,EAAgBvL,EAAiBkL,eAAiBxK,EAClD8K,EAAkB,CACtBvL,EAAqBmB,YACrBnB,EAAqB2B,qBACrB3B,EAAqB6B,YACrB7B,EAAqB8B,eACrBuJ,SAAS5K,GA4DL+K,EAAqB,IAAMT,GAAiBD,GAE5CW,EAASC,YAAU,CACvBC,cAAe3J,EAAqByI,GACpCmB,SArCwBC,IACxB,MAAMC,EAAS3I,OAAO2I,OAAOD,GAAYE,QAAOC,GAASA,IACpDF,EAAOtI,QAGV6G,EADEkB,EACOxC,GAAiB,CACxBtI,OAAQA,EACRC,OAAQmL,IAIR/I,EAAoB,CAClBrC,OAAQA,EACRC,OAAQ4K,EAAgB,CAAE,MAASQ,GAAWD,QA2BhDI,EAA4B,IAChCf,IAAgB,OAACvB,QAAD,IAACA,KAAanG,SAAUL,OAAO2I,OAAOL,EAAOK,QAAQC,QAAOC,GAASA,IAAOxI,OAe9F,OAbAoC,qBAAU,KACR,MAAM6E,EAAkBpJ,EAAW6K,KAAI,CAACC,EAAOC,KAAR,IAClCD,EACH7K,GAAI6K,EAAM7K,GAAG+J,SAASlL,EAAQkM,OAA1B,UAAsCF,EAAM7K,IAA5C,OAAiD8K,GAAUD,EAAM7K,OAGvE,OADAoJ,EAAUD,GACH,KACLJ,EAASxH,KACTwH,EAASvB,MACTuB,EAASd,SAEV,CAAClI,EAAYgJ,IAGd,qCACE,sBAAK7K,UAAU,eAAf,UACE,cAAC,GAAD,CAAmB4B,KAAMA,IACxB8J,EACC,sBAAK1L,UAAU,qBAAf,UACE,sBAAMA,UAAU,sBAAhB,SACGiB,IAAWV,EAAiBoL,UAAY/K,EAAWkM,KAAOlM,EAAWmM,QAExE,wBAAQ/M,UAAU,cAAcgN,QA9CX,KACzB/L,IAAWV,EAAiBoL,UAC9Bd,EAAS9B,MACA9H,IAAWV,EAAiBqL,YACrCf,EAAS3B,OA0CH,SACGjI,IAAWV,EAAiBoL,UAAY,cAAgB,mBAEzD,OAACxB,QAAD,IAACA,MAAanG,SACd,qBAAKhE,UAAU,cAAf,SACGmK,EAAYuC,KAAIO,GACf,uBAAMjN,UAAU,oBAAhB,UACE,+BAAOiN,EAAWC,WAClB,cAAC,GAAD,CACEzH,MAAO,GACPC,OAAQ,GACR1F,UAAU,yBACVgN,QAAS,KAAMG,OAlDTC,EAkD0BH,EAAWG,OAjD7DvC,EAASxB,GAAkB+D,SACC,KAAb,OAAXjD,QAAW,IAAXA,OAAA,EAAAA,EAAanG,SACf6G,EAASrH,EAA2B,QAHd4J,WA4C+BH,EAAWG,YAY1D,qBAAKpN,UAAU,eAAf,SACE,wBACEA,UAAWqN,KAAW,CACpB,eAAe,EACf,uBAAwBZ,MAE1BO,QAvGY,KACxB,GAAI7C,EAAa,CAGfU,EACEvH,EAAoB,CAClBrC,OAJqBA,EAKrBC,OAAQ,GACRkI,MAAOe,OAgGDmD,SAAUb,IACVxK,KAAK,SAPP,yBAcJ,uBAAMjC,UAAU,qBAAqBoM,SAAUH,EAAOsB,aAAtD,UACGtC,EAAOyB,KAAI,CAAC,EAAqBE,KAAW,IAAhC,GAAE9K,EAAF,KAAMG,EAAN,MAAYD,GAAmB,EAC1C,MAAMwL,EAAYpM,EAAWa,GAavBwL,GAAc3B,GAA0B,IAAVc,EAEpC,OACE,gCACGa,GAAe,sBAAMzN,UAAU,sBAAhB,SAAuCgC,IACvD,uBACEhC,UAAWqN,KAAW,CACpBV,OAAO,EACP,eAnBgB,MACtB,MAEMe,EAAazB,EAAOK,OAAOxK,GAEjC,OAAIgK,GAAiB7J,IAASpB,EAAUY,KAC/BiM,IALOC,EAKe1B,EAAOK,OAAOxK,IALZ,mBAAmB8L,KAAKD,IAM9C7L,IAAOnB,EAAQoB,MACjB2L,IANQG,EAMe5B,EAAOK,OAAOxK,IANX,0DAA0D8L,KAAKC,SAK3F,EALUA,MADDF,GAkBMG,KAElBC,SAAU9B,EAAO+B,aACjBxB,MAAOP,EAAOK,OAAOxK,IAAO,GAC5BG,KAAMuL,EACNS,SAAUnM,IAAOnB,EAAQoM,MACzBjL,GAAIA,EACJoM,IAAK,IAEQ,SAAdV,GAAwBvB,EAAOK,OAAOxK,IACrC,cAAC,GAAD,CACE9B,UAAU,mBACVgN,QAAS,KACPf,EAAOkC,cAAcrM,EAAI,IACzBsJ,GAAcC,EAAc,KAE9B3F,OAAQ,GACRD,MAAO,OAtBH3D,MA4Bd,sBAAK9B,UAAU,eAAf,UACE,wBACEA,UAAWqN,KAAW,CACpB,eAAe,EACf,uBAAwBZ,MAE1Ba,SAAUb,IACVxK,KAAK,SANP,oBAUCuJ,GACC,cAAC,EAAD,CACE7G,MAAM,gBACN3E,UAAU,YACVgN,QAxLQ,KACtB,MAAMoB,EAAOnD,EAAOA,EAAOjH,OAAS,IAC9B,GAAElC,GAAOsM,EACTC,EAAc,IACfD,EACHtM,GAAIA,EAAG+J,SAASlL,EAAQkM,OAApB,UAAgC/K,GAAhC,OAAqCmJ,EAAOjH,QAAWlC,GAG7DoJ,GAAUD,GAAU,IAAIA,EAAQoD,MAiLlB3I,OAAQ,GACRD,MAAO,cAOlBsF,GACC,qCACE,qBAAK/K,UAAU,oBAAf,SACE,cAAC,KAAD,iBACG+K,QADH,IACGA,GADH,UACGA,EAAauD,eADhB,iBACG,EAAsBC,cADzB,aACG,EAA8BC,WAAW,KAAM,YAGnDvN,IAAWV,EAAiBqL,YAC3B,sBAAK5L,UAAU,iBAAf,0BAEG+K,QAFH,IAEGA,GAFH,UAEGA,EAAa3B,aAFhB,aAEG,EAAoBsD,KAAI,IAAM,cAAC,GAAD,CAAU1M,UAAU,uBAAuB0F,OAAQ,GAAID,MAAO,UAI/FsF,GACE,gCACE,sBAAK/K,UAAU,yBAAf,UACE,uBACEyO,QAASnD,EACTtL,UAAU,sBACV8B,GAAG,eACHG,KAAK,WACL8L,SAAU/B,IAEZ,sBACEhM,UAAU,eACVgN,QAAShB,EAFX,iCAODV,GACC,qBAAKtL,UAAU,gBAAf,SACE,cAAC,GAAD,CAAY0F,OAAQ,GAAIgB,KAAMqE,YAQ3CC,GACC,qBAAKhL,UAAU,mBAAf,SACGoH,KAAKC,UAAL,OAAe2D,QAAf,IAAeA,OAAf,EAAeA,EAAiBsD,QAAS,KAAM,Q,ICpStD,G,OCMW,SAASI,KACtB,MAAMjP,EAAYM,YAAYV,IAEvBsP,EAAOC,GAAYzD,oBAAS,IAC5B0D,EAAMC,GAAW3D,oBAAS,IAC1B4D,EAAQC,GAAa7D,oBAAS,GAE/B8D,EAAc9I,iBAA8B,MAC5C+I,EAAgB/I,iBAA8B,MA6BpD,OA3BAC,qBAAU,KACJ3G,IAAckP,GAChBC,GAAS,IAGNnP,GAAakP,IAChBC,GAAS,GACTE,GAAQ,GAERG,EAAY1I,QAAU4I,YAAW,KAC/BH,GAAU,GAEVE,EAAc3I,QAAU4I,YAAW,KACjCL,GAAQ,GACRE,GAAU,KACT,OACF,QAEJ,CAACvP,EAAWkP,IAEfvI,qBAAU,IACD,KACD6I,EAAY1I,SAAS6I,aAAaH,EAAY1I,SAC9C2I,EAAc3I,SAAS6I,aAAaF,EAAc3I,WAEvD,IAGD,qBAAKvG,UAAWqN,KAAW,CAAE,cAAc,EAAM,sBAAuBsB,IAAUI,IAAlF,SACE,qBACE/O,UAAWqN,KAAW,CACpB,mBAAmB,EACnB,yBAA0BsB,EAC1B,wBAAyBE,EACzB,0BAA2BE,QDhDrC,SAAS,KAA2Q,OAA9P,GAAWpL,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,GAAkB,GAASS,MAAMC,KAAMR,WAIhT,SAASsL,GAAY5K,EAAMC,GACzB,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAO,GAAS,CACtDK,MAAO,6BACPC,QAAS,YACTE,IAAKP,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3D7C,GAAI8C,GACHD,GAAS,KAAM,KAAO,GAAkB,gBAAoB,IAAK,CAClEK,KAAM,eACNE,SAAU,WACI,gBAAoB,OAAQ,CAC1CC,EAAG,0nBAIP,MAAM,GAA0B,aAAiBkK,IAClC,I,OErBA,SAASC,KACtB,MAAMzE,EAAWC,cACXyE,EAAuBxP,YAAYuK,IAKzC,OACE,mCACE,sBAAKtK,UAAU,eAAf,UACE,cAAC,GAAD,CAAmB4B,KAAMd,IACzB,qBAAKd,UAAU,8BAAf,SACKuP,EAAqBvL,OACtB,qCACE,qBACEhE,UAAU,8BACVgN,QAbM,KAClBnC,EAASjB,OAaGjF,MAAM,sBAHR,mBAOC4K,EAAqB7C,KAAI,CAAC/J,EAAMmB,IAC/B,qBAAK9D,UAAU,sBAAf,SACGoH,KAAKC,UAAL,OAAe1E,QAAf,IAAeA,OAAf,EAAeA,EAAM6M,KAAM,KAAM,IADM1L,QAM9C,qBAAK9D,UAAU,0CAAf,0DChCL,MAAMyP,GAAiB,iBAEjBC,GAAoB,oBAEpBC,GAAexM,YAAasM,IAAiBhQ,GAAuBA,IACpEmQ,GAAgBzM,YAAasF,IAA6B9I,GAAwBA,IAClFkQ,GAAkB1M,YAAauM,IAAoB7P,GAAyBA,ICD1E,SAASiQ,KACtB,MAAMjF,EAAWC,cACXhB,EAAO/J,YAAYsK,IASzB,OAPAjE,qBAAU,IACD,KACLyE,EAASgF,GAAgB,KACzBhF,EAAShB,GAAQ,SAElB,CAACgB,IAGF,mCACE,sBAAK7K,UAAU,eAAf,UACE,cAAC,GAAD,CAAmB4B,KAAMb,IACxB+I,GACC,qBAAK9J,UAAU,mBAAf,SACGoH,KAAKC,UAAL,OAAeyC,QAAf,IAAeA,OAAf,EAAeA,EAAMwE,QAAS,KAAM,U,aCtB1C,MAAMyB,GAAUC,eCYR,SAASC,KACtB,MAAMpF,EAAWC,cACX3K,EAAWJ,YAAYE,GACvBJ,EAAeE,YAAYH,GAUjC,OARAwG,qBAAU,KACHjG,GAAU0K,EAAS3H,OACvB,CAAC2H,EAAU1K,IAEdiG,qBAAU,KACFvG,GAAckQ,GAAQG,KAAKrQ,KAChC,CAACgL,EAAUhL,IAGZ,sBAAKG,UAAU,mBAAf,UACE,qBAAKA,UAAU,SAAf,SACE,uBAAMA,UAAU,kBAAhB,UACE,cAAC,GAAD,CAAUA,UAAU,eAAe0F,OAAQ,GAAID,MAAO,KACtD,sBAAMzF,UAAU,eAAhB,mCAGJ,cAAC,GAAD,IACA,yBAASA,UAAU,yBAAnB,SACE,eAAC,IAAD,kBACGG,QADH,IACGA,OADH,EACGA,EAAUuM,KAAI/J,GACb,cAAC,IAAD,CAAoCwN,KAAI,WAAMxN,EAAK1B,QAAnD,SACE,cAAC,GAAD,IAAiB0B,KADnB,UAAeA,EAAK1B,OAApB,aAIDS,EAAiBgL,KAAI/J,GACpB,cAAC,IAAD,CAAoCwN,KAAI,WAAMxN,EAAK1B,QAAnD,SACE,cAAC,GAAD,IAAiB0B,KADnB,UAAeA,EAAK1B,OAApB,aAIF,cAAC,IAAD,CAEEkP,KAAI,WAAMpP,GAFZ,SAIE,cAAC+O,GAAD,KAJF,UACU/O,EADV,WAMA,cAAC,IAAD,CAEEoP,KAAI,WAAMrP,GAFZ,SAIE,cAAC,GAAD,KAJF,UACUA,EADV,WAMA,eAAC,IAAD,CAAOqP,KAAM,IAAb,iBACGhQ,QADH,IACGA,OADH,EACGA,EAAUuM,KAAI/J,GACb,cAAC,IAAD,CACE3C,UAAU,YAEV2K,GAAE,WAAMhI,EAAK1B,QAHf,SAKG0B,EAAKf,MALR,UAEUe,EAAK1B,OAFf,YAQDd,GAAYuB,EAAiBgL,KAAI/J,GAChC,cAAC,IAAD,CACE3C,UAAU,YAEV2K,GAAE,WAAMhI,EAAK1B,QAHf,SAKG0B,EAAKf,MALR,UAEUe,EAAK1B,OAFf,YAQDd,GACG,cAAC,IAAD,CACEH,UAAU,YAEV2K,GAAE,WAAM7J,GAHV,SAKGA,GALH,UAEUA,EAFV,qB,OC9ED,SAASsP,GAAT,GAAqE,IAAnD,OAAE7B,EAAF,OAAU8B,GAAwC,EACjF,OACE,sBAAKrQ,UAAW,WAAhB,UACE,sBAAMA,UAAW,iBAAjB,SAAoCuO,IACpC,uBAAMvO,UAAW,iBAAjB,qBAA4CqQ,QCEnC,SAASC,KACtB,MAAMzF,EAAWC,eACVyF,EAAMC,GAAWrF,oBAAS,IAC1BsF,EAAUC,GAAevF,mBAA8C,MAyB9E,OAvBA/E,qBAAU,KACJmK,IACFC,GAAQ,GACR3F,EAASb,OAGL,OAAN2G,UAAM,IAANA,SAAQC,WAAU,IAAwB,IAAvB,KAAE3O,EAAF,QAAQqM,GAAc,EACvC,GAAuB,kBAAZA,EAEX,OAAQrM,GACN,KAAK3B,EAAUuQ,aACbH,EAAYpC,GACZa,YAAW,IAAMuB,EAAY,OAAO,KACpC,MAEF,KAAKpQ,EAAUwQ,aACbjG,EAASnB,GAA8B4E,UAK5C,CAACzD,EAAU0F,IAGZ,qCACE,cAAC,EAAD,IACA,cAAC,GAAD,IACCE,GAAY,cAAC,GAAD,IAAcA,O,kDC/BjC,MAMMM,GAAW,CACf,CAACtB,IAAiB,CAChBlQ,EADgB,SACE+O,QAAS7O,GADX,QAEH,IACVF,EAAOE,cAEZ,gBAAmB,CACjBF,EADiB,SACC+O,QAAS3O,GADV,QAEJ,IACVJ,EAAOI,eAEZ,CAAC+P,IAAoB,CACnBnQ,EADmB,SACD+O,QAASzO,GADR,QAEN,IACVN,EAAOM,kBAIDL,GAAKwR,aAA4BD,GAxBhB,CAC5BtR,WAAW,EACXE,YAAY,EACZE,aAAc,KCEVkR,GAAW,CACf,CAACjO,GAAwB,CACvBvD,EADuB,SACJ+O,QAASnO,GADL,QAET,IACXZ,EACHY,aAEF,CAAC8C,GAAiC,CAChC1D,EADgC,SAE9B+O,QAASjO,GAFqB,QAGlB,IACXd,EACHc,aAEF,CAAC0C,GAAkBxD,IAAD,IACbA,EACHc,SAAU,QAIDH,GAAM8Q,aAAcD,GA1BF,CAC7B5Q,SAAU,KACVE,SAAU,KACVkK,cAAe,OCWXwG,GAAW,CACf,CAAC5I,IAAsB,CACrB5I,EADqB,SACC+O,QAASrF,GADV,QAEJ,IACd1J,EACH4K,YAAa,CAAClB,KAEhB,CAACZ,IAAuB,CACtB9I,EADsB,SAEpB+O,QAASlF,GAFW,QAGL,IACd7J,EACH4K,YAAa,IAAIf,KAEnB,CAACd,IAAsB,CACrB/I,EADqB,SACC+O,QAASxM,GADV,QAEJ,IACdvC,EACH4K,YAAa5K,EAAM4K,YAAYoC,QAAOU,GAAcA,EAAWG,SAAWtL,MAE5E,CAACyG,IACChJ,IADmB,IAGhBA,EACH4K,YAAa,OAEf,CAACzB,IAAmC,CAClCnJ,EADkC,SACd,QAAE+O,GADY,QAEjB,IACd/O,EACHgL,cAAe,CAAC+D,KAAY/O,EAAMgL,iBAEpC,CAAC5B,IACCpJ,IADoC,IAGjCA,EACHgL,cAAe,KAEjB,CAAC9B,IAA6B,CAC5BlJ,EAD4B,SACR,QAAE+O,GADM,QAEX,IACd/O,EACHc,SAAUiO,IAEZ,CAAC1F,IAA0BrJ,IAAD,IACrBA,EACHc,SAAU,OAEZ,CAACyI,IAAW,CACVvJ,EADU,SACU,QAAE+O,GADZ,QAEO,IACd/O,EACHuK,KAAMwE,KAIGpE,GAAS8G,aAAgCD,GA/DpB,CAChC5G,YAAa,KACb9J,SAAU,KACVyJ,KAAM,KACNS,cAAe,KCZJ0G,GAAcC,2BAA0B,CACnD1R,MACAU,OACAgK,UACAiH,OAAQC,YAAcrB,M,YCLjB,SAAUsB,KACf,UACQC,aAAI1B,IAAc,IAExB,MAAMvP,QAAsCsQ,IAAOY,aAAavQ,GAE5DX,UAAgBiR,aAAIlO,EAAoB/C,EAASiO,QAAQC,UAC7D,MAAOiD,GACPC,QAAQC,MAAM,yBAA0BF,GAP1C,cASQF,aAAI1B,IAAc,KCXrB,SAAU+B,GAAwBC,GACvC,UACQN,aAAI3B,IAAa,IAEvB,MAAMtP,QAA8B,OAAMsQ,UAAN,IAAMA,SAAN,EAAMA,IAAQY,aAAaK,EAAOtD,eAEhEgD,aAAI9N,EAA2BnD,IACrC,MAAOmR,GACPC,QAAQC,MAAM,gCAAiCF,GAPjD,cASQF,aAAI3B,IAAa,KCDpB,SAAUkC,GAAV,GAAuE,IAA5CvD,SAAS,KAAErM,IAAgC,EAC3E,IAAK,IAAD,EACF,MAAM5B,QAAW,OAAMsQ,UAAN,IAAMA,SAAN,EAAMA,IAAQmB,gBAAgB,CAC7C7Q,OAAQP,EAAkBwH,YAC1BhH,OAAQ,CAAEe,UAGZ,GAAI,UAAC5B,EAASiO,eAAV,QAAC,EAAkByD,OAAQ,OAE/B,MAAM9I,EAAa,IACd5I,EAASiO,QAAQyD,cAGhBT,aAAItI,GAAkBC,IAC5B,MAAOuI,GACPC,QAAQC,MAAR,gCAAuCF,KAIpC,SAAUQ,GAAV,GAAyE,IAA7C1D,SAAS,KAAErM,IAAiC,EAC7E,IACE,MAAM5B,QAAW,OAAMsQ,UAAN,IAAMA,SAAN,EAAMA,IAAQmB,gBAAgB,CAC7C7Q,OAAQP,EAAkB0H,aAC1BlH,OAAQ,CAAEe,UAGZ,IAAK5B,EAASiO,QAAQ2D,QAAQjO,OAAQ,OAEtC,MAAMoF,EAAgB/I,EAASiO,QAAQ2D,cAEjCX,aAAInI,GAAmBC,IAC7B,MAAOoI,GACPC,QAAQC,MAAR,iCAAwCF,KAIrC,SAAUU,GAAqBN,GACpC,UACQN,aAAI3B,IAAa,IAEvB,MAAMtP,QAAkC,OAAMsQ,UAAN,IAAMA,SAAN,EAAMA,IAAQmB,gBAAgB,IACjEF,EAAOtD,UAEZmD,QAAQC,MAAM,CAACrR,mBAETiR,aAAI7H,GAAwBpJ,IAClC,MAAOmR,GACPC,QAAQC,MAAM,6BAA8BF,GAV9C,cAYQF,aAAI3B,IAAa,KAIpB,SAAUwC,KACf,IAAK,IAAD,MACF,MAAMlR,EAASF,EACTV,QAAW,OAAMsQ,UAAN,IAAMA,SAAN,EAAMA,IAAQmB,gBAAgB,CAC7C7Q,OAAQP,EAAkB0R,MAC1BlR,OAAQ,GACRmR,QAAS,MAEXZ,QAAQa,IAAI,iCAAkClL,KAAKC,UAAUhH,EAAU,KAAM,KAGnE,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAU4B,QAAShB,IACX,OAARZ,QAAQ,IAARA,GAAA,UAAAA,EAAUiO,eAAV,eAAmBrM,QAAShB,IACpB,OAARZ,QAAQ,IAARA,GAAA,UAAAA,EAAUiO,eAAV,mBAAmBkB,YAAnB,eAAyBvN,QAAShB,SAE5BqQ,aAAIzB,GAAgB,IAAD,OAAK9O,WACxBuQ,aAAIzH,GAAQxJ,KAElBwP,GAAgB,KAElB,MAAO2B,GACPC,QAAQC,MAAM,4BAA6BF,ICvEhCe,OAXf,kBACQC,aAAI,CACRC,aAAU5P,EAAewO,IACzBoB,aAAUzP,EAAwB2O,IAClCc,aAAUjK,GAAoB0J,IAC9BO,aAAU5J,GAA0BsJ,IACpCM,aAAUvK,GAAa2J,IACvBY,aAAUrK,GAAc4J,O,OCL5BU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MCAP,WACL,MAAMC,EAAiBC,eACjBC,EAAmBC,aAAuBlD,IAE1C8C,EAA0BK,uBAC9BjC,QACArO,EACAuQ,+BAAoBC,2BAAgBN,EAAgBE,KAQtD,OALAF,EACGO,IAAId,IACJe,YACAC,OAAO/B,GAAaC,QAAQC,MAAM,aAAcF,KAE5CqB,EDfYW,GAAjB,SACE,cAAC,IAAD,CAAiBzD,QAASA,GAA1B,SACE,cAACO,GAAD,UAINzJ,SAAS4M,eAAe,W","file":"static/js/main.6174356d.chunk.js","sourcesContent":["import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getTopLoader = createSelector(\n  [(state: AppState) => state.ui.topLoader],\n  topLoader => topLoader\n)\n\nexport const getMainLoader = createSelector(\n  [(state: AppState) => state.ui.mainLoader],\n  mainLoader => mainLoader\n)\n\nexport const getRedirectPath = createSelector(\n  [(state: AppState) => state.ui.redirectPath],\n  redirectPath => redirectPath\n)\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport './MainLoader.scss'\nimport { getMainLoader } from '../../redux/selectors/ui'\n\nexport default function MainLoader() {\n  const mainLoader = useSelector(getMainLoader)\n\n  if (!mainLoader) return null\n\n  return (\n    <div className='main-loader'>\n      <div className='main-loader__spinner'>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  )\n}\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getFeaturesMenu = createSelector(\n  [(state: AppState) => state.bot.features],\n  features => features,\n)\n\nexport const getFeatureBotResponse = createSelector(\n  [(state: AppState) => state.bot.response],\n  response => response,\n)\n","import { RouterState } from 'connected-react-router'\n\nexport enum EventType {\n  SMARTAPP_RPC = 'smartapp_rpc',\n  NOTIFICATION = 'notification',\n  OPEN_SMARTAPP_META = 'open_smart_app_meta',\n}\n\nexport enum BotFeatureMethod {\n  ECHO = 'echo',\n  UPDATE_APP_COUNTER = 'update_app_counter',\n  SEND_NOTIFICATION = 'send_notification',\n  ECHO_FILE = 'echo_file',\n  ECHO_FILES = 'echo_files',\n  SEARCH_USERS = 'search_users',\n}\n\nexport enum ExpressFeatureMethod {\n  ADD_CONTACT = 'add_contact',\n  CREATE_PERSONAL_CHAT = 'create_personal_chat',\n  GET_CONTACT = 'get_contact',\n  OPEN_SMARTAPP = 'open_smart_app',\n}\n\nexport enum ExpressFeatureName {\n  ADD_CONTACT = 'Add contact',\n  CREATE_PERSONAL_CHAT = 'Create personal chat',\n  GET_CONTACT = 'Get contact',\n  OPEN_SMARTAPP = 'Open SmartApp',\n}\n\nexport enum ClientEventMethod {\n  READY = 'ready',\n  UPLOAD_FILE = 'upload_file',\n  UPLOAD_FILES = 'upload_files',\n}\n\nexport interface BotEvent {\n  method: BotFeatureMethod | 'menu'\n  params: {\n    [key: string]: any\n  }\n  files?: File[]\n  timeout?: number\n}\n\nexport interface ExpressEvent {\n  method: ExpressFeatureMethod\n  params: {\n    [key: string]: any\n  }\n}\n\nexport enum InputId {\n  TEXT = 'text',\n  COUNT = 'count',\n  DELAY = 'delay',\n  FILE = 'file',\n  FILES = 'files',\n  HUIDS = 'huids',\n  PHONE = 'phone',\n  NAME = 'name',\n  HUID = 'huid',\n  SMARTAPP_ID = 'appId',\n}\n\nexport enum InputLabel {\n  TEXT = 'Text',\n  COUNT = 'Count',\n  DELAY = 'Delay',\n  FILE = 'File',\n  FILES = 'Files',\n  HUIDS = 'Huids',\n  PHONE = 'Phone',\n  NAME = 'Name',\n  HUID = 'Huid',\n  SMARTAPP_ID = 'Smartapp ID',\n}\n\nexport enum InputType {\n  INPUT_TEXT = 'INPUT_TEXT',\n  INPUT_NUMBER = 'INPUT_NUMBER',\n  FILE_PICKER = 'FILE_PICKER',\n  ARRAY_UUID = 'ARRAY_UUID',\n  UUID = 'UUID',\n}\n\nexport interface Input {\n  id: InputId | string\n  label: InputLabel\n  type: InputType\n}\n\nexport interface BotFeature {\n  method: BotFeatureMethod\n  name: string\n  uiElements: Input[]\n}\n\nexport type ExpressFeature = BotFeature | {\n  method: ExpressFeatureMethod\n  name: ExpressFeatureName\n  uiElements: Input[]\n}\n\nexport type BotFeatures = BotFeature[] | null\n\nexport interface BotMethodResponse {\n  type: EventType.SMARTAPP_RPC | string,\n  files: File[]\n  payload: {\n    result: string,\n    status: 'ok' | 'error'\n  }\n}\n\nexport type BotFeaturesResponse = BotMethodResponse & {\n  payload: {\n    result: BotFeature[]\n  }\n}\n\nexport interface ExpressMethodResponse {\n  ref?: string\n  payload: any\n}\n\nexport interface ExpressNotification {\n  ref: null\n  type: 'notification'\n  data: object\n}\n\nexport interface File {\n  type?: string\n  file?: string\n  fileMimeType?: string\n  fileName?: string\n  filePreview?: string\n  filePreviewHeight?: number\n  filePreviewWidth?: number\n  fileSize: number\n  fileHash?: string\n  fileEncryptionAlgo?: string\n  chunkSize?: number\n  fileId?: any\n  key?: object\n}\n\nexport interface UIState {\n  topLoader: boolean\n  mainLoader: boolean\n  redirectPath: string\n}\n\nexport interface BotState {\n  features: BotFeatures\n  response:  BotMethodResponse | null\n  notifications: BotMethodResponse[] | null\n}\n\nexport interface ClientState {\n  attachments: File[] | null\n  response: ExpressMethodResponse | null\n  meta: ExpressMethodResponse | null\n  notifications: ExpressNotification[] | null\n}\n\nexport interface AppState {\n  ui: UIState\n  bot: BotState\n  client: ClientState\n  router: RouterState\n}\n","import {\n  ExpressFeature,\n  ExpressFeatureMethod,\n  ExpressFeatureName,\n  InputId,\n  InputLabel,\n  InputType,\n} from './types'\n\nexport const EXPRESS_NOTIFICATION_FEATURE = {\n  method: 'notification',\n  name: 'Express Notification',\n}\n\nexport const OPEN_SMART_APP_META_FEATURE = {\n  name: 'Open Smart App Meta',\n  method: 'open_smart_app_meta'\n}\n\nexport const MENU_EVENT: any = {\n  method: 'menu',\n  params: {\n    text: 'menu',\n  },\n}\n\nexport const INPUT_TYPE: Record<InputType, string> = {\n  INPUT_TEXT: 'text',\n  INPUT_NUMBER: 'number',\n  FILE_PICKER: 'file',\n  ARRAY_UUID: 'text',\n  UUID: 'text'\n}\n\nexport const EXPRESS_FEATURES: ExpressFeature[] = [\n  {\n    method: ExpressFeatureMethod.ADD_CONTACT,\n    name: ExpressFeatureName.ADD_CONTACT,\n    uiElements: [\n      {\n        id: InputId.PHONE,\n        label: InputLabel.PHONE,\n        type: InputType.INPUT_TEXT,\n      },\n      {\n        id: InputId.NAME,\n        label: InputLabel.NAME,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.CREATE_PERSONAL_CHAT,\n    name: ExpressFeatureName.CREATE_PERSONAL_CHAT,\n    uiElements: [{\n      id: InputId.HUID,\n      label: InputLabel.HUID,\n      type: InputType.UUID,\n    }],\n  },\n  {\n    method: ExpressFeatureMethod.GET_CONTACT,\n    name: ExpressFeatureName.GET_CONTACT,\n    uiElements: [{\n      id: InputId.PHONE,\n      label: InputLabel.PHONE,\n      type: InputType.INPUT_TEXT,\n    }],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_SMARTAPP,\n    name: ExpressFeatureName.OPEN_SMARTAPP,\n    uiElements: [{\n      id: InputId.SMARTAPP_ID,\n      label: InputLabel.SMARTAPP_ID,\n      type: InputType.INPUT_TEXT,\n    }],\n  },\n]\n","import { Input } from '../types'\n\nexport interface FormValues {\n  [key: string]: string | undefined\n}\n\nexport const getFormInitialValues: (uiElements: Input[]) => FormValues = uiElements => {\n  return uiElements?.reduce((acc: FormValues, item) => {\n    acc[item.id] = undefined\n    return acc\n  }, {})\n}\n","import { createAction } from 'redux-actions'\nimport { BotEvent, BotFeatures, BotMethodResponse, ExpressMethodResponse } from '../../types'\n\nexport const LOAD_FEATURES = 'LOAD_FEATURES'\nexport const LOAD_FEATURES_SUCCESS = 'LOAD_FEATURES_SUCCESS'\nexport const RESET_RESPONSE = 'RESET_RESPONSE'\nexport const SEND_FEATURE_BOT_EVENT = 'SEND_FEATURE_BOT_EVENT'\nexport const SEND_FEATURE_BOT_EVENT_SUCCESS = 'SEND_FEATURE_BOT_EVENT_SUCCESS'\n\nexport const loadFeatures = createAction(LOAD_FEATURES, () => {\n})\nexport const loadFeaturesSuccess = createAction(LOAD_FEATURES_SUCCESS, (features: BotFeatures) => features)\nexport const resetFeatures = createAction(RESET_RESPONSE, () => {\n})\nexport const sendFeatureBotEvent = createAction(SEND_FEATURE_BOT_EVENT, (botEvent: BotEvent) => botEvent)\nexport const sendFeatureBotEventSuccess = createAction(\n  SEND_FEATURE_BOT_EVENT_SUCCESS,\n  (response: BotMethodResponse | ExpressMethodResponse | null) => response,\n)\n\nexport type loadFeaturesSuccessActionType = ReturnType<typeof loadFeaturesSuccess>\nexport type sendFeatureBotEventSuccessActionType = ReturnType<typeof sendFeatureBotEventSuccess>\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgPlus(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M13 11V4h-2v7H4v2h7v7h2v-7h7v-2h-7z\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.97a40cd5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgClearInput(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M13 11V3h-2v8H3v2h8v8h2v-8h8v-2h-8z\",\n    transform: \"rotate(45 12 12)\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgClearInput);\nexport default __webpack_public_path__ + \"static/media/clear-input.6a69fb5e.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgFile(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 22 26\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    transform: \"translate(-1)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#595959\",\n    d: \"M5 0C3.73 0 2.44 1.225 2.5 2.407V22.63c-.06 1.784 1.23 3.007 2.5 2.89h15c1.71.117 3-1.106 3-2.89V6.26L16 0H5zm0 24.556c-.298-.117-1.298-.59-1.5-1.445V2.41C3.702 2.148 4.702 1.2 5 .963h10.5v3.852c.01 1.467.903 2.315 2 1.926H22v15.89c-.262.864-.76 1.81-2 1.928H5z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18.5,\n    height: 9.148,\n    x: 1,\n    y: 12.519,\n    fill: \"#5C5C5C\",\n    rx: 2\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    fill: \"#FFF\",\n    fontSize: 5.5,\n    fontWeight: 600\n  }, /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 4.302,\n    y: 19\n  }, \"\\n        FILE\\n      \")))));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFile);\nexport default __webpack_public_path__ + \"static/media/file.1a445bcf.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgCopy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M10.667.667h-8c-.734 0-1.334.6-1.334 1.333v9.333h1.334V2h8V.667zm2 2.666H5.333C4.6 3.333 4 3.933 4 4.667V14c0 .733.6 1.333 1.333 1.333h7.334c.733 0 1.333-.6 1.333-1.333V4.667c0-.734-.6-1.334-1.333-1.334zm0 10.667H5.333V4.667h7.334V14z\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.55b37fcd.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useRef } from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport { ReactComponent as CopyIcon } from '../../assets/copy.svg'\nimport JSONEditor from 'jsoneditor'\nimport '../../../node_modules/jsoneditor/dist/jsoneditor.min.css'\nimport './JsonViewer.scss'\n\nexport default function JsonViewer(props) {\n  const container = useRef(null)\n\n  const copyToClipboardJson = obj => {\n    const container = document.createElement('textarea')\n\n    container.innerHTML = JSON.stringify(obj, null, '  ')\n    document.body.appendChild(container)\n\n    container.select()\n    document.execCommand('copy')\n    document.body.removeChild(container)\n  }\n\n  useEffect(() => {\n    const editor = new JSONEditor(container.current, { mode: 'view', enableTransform: true })\n\n    if (props.json) editor.set(props.json)\n\n    const button = document.createElement('button')\n    button.className = 'copy-to-clipboard'\n    button.innerHTML = ReactDOMServer.renderToStaticMarkup(<CopyIcon height='22' width='22' />)\n    button.addEventListener('click', () => copyToClipboardJson(props.json))\n    button.setAttribute('title', 'Copy To Clipboard')\n\n    const menu = document.querySelector('.jsoneditor-menu')\n    const search = document.querySelector('.jsoneditor-menu .jsoneditor-search')\n\n    menu.insertBefore(button, search)\n\n    return () => editor.destroy()\n  }, [props.json])\n\n  return <div className='json-viewer' ref={container} />\n}\n","import { createAction } from 'redux-actions'\nimport { ExpressEvent, ExpressMethodResponse, ExpressNotification, File } from '../../types'\n\nexport const UPLOAD_FILE = 'UPLOAD_FILE'\nexport const UPLOAD_FILE_SUCCESS = 'UPLOAD_FILE_SUCCESS'\nexport const UPLOAD_FILES = 'UPLOAD_FILES'\nexport const UPLOAD_FILES_SUCCESS = 'UPLOAD_FILES_SUCCESS'\nexport const REMOVE_FILE = 'REMOVE_FILE'\nexport const REMOVE_FILE_SUCCESS = 'REMOVE_FILE_SUCCESS'\nexport const RESET_ATTACHMENTS = 'RESET_ATTACHMENTS'\nexport const SEND_EXPRESS_EVENT = 'SEND_EXPRESS_EVENT'\nexport const SEND_EXPRESS_EVENT_SUCCESS = 'SEND_EXPRESS_EVENT_SUCCESS'\nexport const SET_EXPRESS_NOTIFICATION_SUCCESS = 'SET_NOTIFICATION_SUCCESS'\nexport const RESET_EXPRESS_NOTIFICATION_SUCCESS = 'RESET_EXPRESS_NOTIFICATION_SUCCESS'\nexport const RESET_EXPRESS_RESPONSE = 'RESET_EXPRESS_RESPONSE'\nexport const SEND_EXPRESS_READY_EVENT = 'SEND_EXPRESS_READY_EVENT'\nexport const SET_META = 'SET_META'\n\nexport const uploadFile = createAction(UPLOAD_FILE, (type: string = '') => ({ type }))\nexport const uploadFileSuccess = createAction(UPLOAD_FILE_SUCCESS, (file: File) => (file))\nexport const uploadFiles = createAction(UPLOAD_FILES, (type: string = '') => ({ type }))\nexport const uploadFilesSuccess = createAction(UPLOAD_FILES_SUCCESS, (files: File[]) => (files))\nexport const removeFile = createAction(REMOVE_FILE, (id: number) => id)\nexport const removeFileSuccess = createAction(REMOVE_FILE_SUCCESS, (id: number) => id)\nexport const resetAttachments = createAction(RESET_ATTACHMENTS, () => {})\nexport const sendExpressEvent = createAction(SEND_EXPRESS_EVENT, (expressEvent: ExpressEvent) => expressEvent)\nexport const sendExpressEventSuccess = createAction(\n  SEND_EXPRESS_EVENT_SUCCESS,\n  (response: ExpressMethodResponse | null) => response,\n)\nexport const setExpressNotificationSuccess = createAction(\n  SET_EXPRESS_NOTIFICATION_SUCCESS,\n  (notification: ExpressNotification | null) => notification,\n)\nexport const resetExpressNotificationSuccess = createAction(\n  RESET_EXPRESS_NOTIFICATION_SUCCESS,\n  () => {\n  },\n)\nexport const setMeta = createAction(\n  SET_META,\n  (meta: ExpressMethodResponse | null) => meta,\n)\nexport const resetExpressResponse = createAction(RESET_EXPRESS_RESPONSE, () => {})\nexport const sendReadyEvent = createAction(SEND_EXPRESS_READY_EVENT, () => {})\n\nexport type uploadFileActionType = ReturnType<typeof uploadFile>\nexport type uploadFileSuccessActionType = ReturnType<typeof uploadFileSuccess>\nexport type uploadFilesActionType = ReturnType<typeof uploadFiles>\nexport type uploadFilesSuccessActionType = ReturnType<typeof uploadFilesSuccess>\nexport type removeFileActionType = ReturnType<typeof removeFile>\nexport type removeFileSuccessActionType = ReturnType<typeof removeFileSuccess>\nexport type sendExpressEventActionType = ReturnType<typeof sendExpressEvent>\nexport type sendExpressEventSuccessActionType = ReturnType<typeof sendExpressEventSuccess>\nexport type setExpressNotificationSuccessActionType = ReturnType<typeof setExpressNotificationSuccess>\nexport type setMetaActionType = ReturnType<typeof setMeta>\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getAttachments = createSelector(\n  [(state: AppState) => state.client.attachments],\n  features => features,\n)\n\nexport const getExpressResponse = createSelector(\n  [(state: AppState) => state.client.response],\n  response => response,\n)\n\nexport const getMeta = createSelector(\n  [(state: AppState) => state.client.meta],\n  meta => meta,\n)\n\nexport const getExpressNotifications = createSelector(\n  [(state: AppState) => state.client.notifications],\n  notificaions => notificaions,\n)\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.828 11l5.586-5.586L12 4l-8 8 8 8 1.414-1.414L7.828 13H20v-2z\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.fa74ab51.svg\";\nexport { ForwardRef as ReactComponent };","import { Link } from 'react-router-dom'\nimport { ReactComponent as ArrowLeft } from '../../../src/assets/arrow-left.svg'\nimport './FeaturePageHeader.scss'\n\nexport default function FeaturePageHeader({ name }) {\n  return (\n    <div className='feature-page__header'>\n      <Link className='btn--arrow-left' to='/'>\n        <ArrowLeft className='icon--arrow-left' height={24} width={24} />\n      </Link>\n      <div className='feature-page__info'>\n        <span className='feature-page__title'>{name} method</span>\n      </div>\n    </div>\n  )\n}\n","import {\n  BotFeature,\n  BotFeatureMethod,\n  ExpressFeature,\n  ExpressFeatureMethod,\n  Input,\n  InputId,\n  InputLabel,\n  InputType,\n} from '../../types'\nimport './FeaturePage.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { INPUT_TYPE } from '../../constants'\nimport { useFormik } from 'formik'\nimport { FormValues, getFormInitialValues } from '../../helpers'\nimport { getFeatureBotResponse } from '../../redux/selectors/bot'\nimport { resetFeatures, sendFeatureBotEvent, sendFeatureBotEventSuccess } from '../../redux/actions/bot'\nimport { useEffect, useState } from 'react'\nimport { ReactComponent as PlusIcon } from '../../assets/plus.svg'\nimport { ReactComponent as RemoveIcon } from '../../assets/clear-input.svg'\nimport { ReactComponent as FileIcon } from '../../assets/file.svg'\nimport JsonViewer from '../json-editor/JsonViewer'\nimport classnames from 'classnames'\nimport {\n  removeFileSuccess,\n  resetAttachments,\n  resetExpressResponse,\n  sendExpressEvent,\n  uploadFile,\n  uploadFiles,\n} from '../../redux/actions/client'\nimport { getAttachments, getExpressResponse } from '../../redux/selectors/client'\nimport { ReactMarkdown } from 'react-markdown/lib/react-markdown'\nimport FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\n\nexport default function FeaturePage({ name, method, uiElements = [] }: BotFeature | ExpressFeature) {\n  const dispatch = useDispatch()\n\n  const botResponse = useSelector(getFeatureBotResponse)\n  const expressResponse = useSelector(getExpressResponse)\n  const attachments = useSelector(getAttachments)\n\n  const [inputs, setInputs] = useState<Input[]>([])\n  const [inputError, setInputError] = useState('')\n  const [isJSONViewer, setIsJSONViewer] = useState(false)\n\n  const isAllowNewInputs = method === BotFeatureMethod.SEARCH_USERS\n  const isFilesMethod = [BotFeatureMethod.ECHO_FILE, BotFeatureMethod.ECHO_FILES].includes(method as BotFeatureMethod)\n  const isUsersMethod = BotFeatureMethod.SEARCH_USERS === method\n  const isExpressMethod = [\n    ExpressFeatureMethod.ADD_CONTACT,\n    ExpressFeatureMethod.CREATE_PERSONAL_CHAT,\n    ExpressFeatureMethod.GET_CONTACT,\n    ExpressFeatureMethod.OPEN_SMARTAPP,\n  ].includes(method as ExpressFeatureMethod)\n\n  const handleClickPlus = () => {\n    const last = inputs[inputs.length - 1]\n    const { id } = last\n    const next: Input = {\n      ...last,\n      id: id.includes(InputId.HUIDS) ? `${id}${inputs.length}` : id,\n    }\n\n    setInputs(inputs => [...inputs, next])\n  }\n\n  const handleFilesSubmit = () => {\n    if (attachments) {\n      const botFeatureMethod = method as BotFeatureMethod\n\n      dispatch(\n        sendFeatureBotEvent({\n          method: botFeatureMethod,\n          params: {},\n          files: attachments,\n        }),\n      )\n    }\n  }\n\n  const handleFormSubmit = (formValues: FormValues) => {\n    const values = Object.values(formValues).filter(value => value)\n    if (!values.length) return\n\n    if (isExpressMethod) {\n      dispatch(sendExpressEvent({\n        method: method as ExpressFeatureMethod,\n        params: formValues,\n      }))\n    } else {\n      dispatch(\n        sendFeatureBotEvent({\n          method: method as BotFeatureMethod,\n          params: isUsersMethod ? { 'huids': values } : formValues,\n        }),\n      )\n    }\n  }\n\n  const handleUploadFilesClick = () => {\n    if (method === BotFeatureMethod.ECHO_FILE) {\n      dispatch(uploadFile())\n    } else if (method === BotFeatureMethod.ECHO_FILES) {\n      dispatch(uploadFiles())\n    }\n  }\n\n  const handleRemoveFile = (fileId: number) => {\n    dispatch(removeFileSuccess(fileId))\n    if (attachments?.length === 1)\n      dispatch(sendFeatureBotEventSuccess(null))\n  }\n\n  const toggleIsJSONViewer = () => setIsJSONViewer(!isJSONViewer)\n\n  const formik = useFormik({\n    initialValues: getFormInitialValues(inputs),\n    onSubmit: handleFormSubmit,\n  })\n\n  const getIsSubmitButtonDisabled = () =>\n    isFilesMethod ? !attachments?.length : !Object.values(formik.values).filter(value => value).length\n\n  useEffect(() => {\n    const inputs: Input[] = uiElements.map((input, index) => ({\n      ...input,\n      id: input.id.includes(InputId.HUIDS) ? `${input.id}${index}` : input.id,\n    }))\n    setInputs(inputs)\n    return () => {\n      dispatch(resetFeatures())\n      dispatch(resetAttachments())\n      dispatch(resetExpressResponse())\n    }\n  }, [uiElements, dispatch])\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={name} />\n        {isFilesMethod ? (\n          <div className='feature-page__form'>\n            <span className='feature-page__title'>\n              {method === BotFeatureMethod.ECHO_FILE ? InputLabel.FILE : InputLabel.FILES}\n            </span>\n            <button className='btn--attach' onClick={handleUploadFilesClick}>\n              {method === BotFeatureMethod.ECHO_FILE ? 'Attach file' : 'Attach files'}\n            </button>\n            {!!attachments?.length && (\n              <div className='attachments'>\n                {attachments.map(attachment => (\n                  <span className='attachments__item' key={attachment.fileId}>\n                    <span>{attachment.fileName}</span>\n                    <RemoveIcon\n                      width={20}\n                      height={20}\n                      className='btn--remove-attachment'\n                      onClick={() => handleRemoveFile(attachment.fileId)}\n                    />\n                  </span>\n                ))}\n              </div>\n            )}\n            <div className='form-buttons'>\n              <button\n                className={classnames({\n                  'btn--submit': true,\n                  'btn--submit-disabled': getIsSubmitButtonDisabled(),\n                })}\n                onClick={handleFilesSubmit}\n                disabled={getIsSubmitButtonDisabled()}\n                type=\"button\"\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        ) : (\n          <form className='feature-page__form' onSubmit={formik.handleSubmit}>\n            {inputs.map(({ id, type, label }, index) => {\n              const inputType = INPUT_TYPE[type]\n\n              const getIsInputError = () => {\n                const isUuid = (uuid: string) => /[0-9a-fA-F-]{36}/.test(uuid)\n                const isPhone = (phone: string) => /(^8|7|\\+7)((\\d{10})|(\\s\\(\\d{3}\\)\\s\\d{3}\\s\\d{2}\\s\\d{2}))/.test(phone)\n                const isNotEmpty = formik.values[id]\n\n                if (isUsersMethod || type === InputType.UUID) {\n                  return isNotEmpty && !isUuid(formik.values[id])\n                } else if (id === InputId.PHONE) {\n                  return isNotEmpty && !isPhone(formik.values[id])\n                }\n              }\n              const isShowLabel = isUsersMethod ? index === 0 : true\n\n              return (\n                <div key={id}>\n                  {isShowLabel && <span className='feature-page__title'>{label}</span>}\n                  <input\n                    className={classnames({\n                      input: true,\n                      'input--error': getIsInputError(),\n                    })}\n                    onChange={formik.handleChange}\n                    value={formik.values[id] || ''}\n                    type={inputType}\n                    multiple={id === InputId.FILES}\n                    id={id}\n                    min={0}\n                  />\n                  {inputType === 'text' && formik.values[id] && (\n                    <RemoveIcon\n                      className='btn--clear-input'\n                      onClick={() => {\n                        formik.setFieldValue(id, '')\n                        inputError && setInputError('')\n                      }}\n                      height={20}\n                      width={20}\n                    />\n                  )}\n                </div>\n              )\n            })}\n            <div className='form-buttons'>\n              <button\n                className={classnames({\n                  'btn--submit': true,\n                  'btn--submit-disabled': getIsSubmitButtonDisabled(),\n                })}\n                disabled={getIsSubmitButtonDisabled()}\n                type=\"submit\"\n              >\n                Submit\n              </button>\n              {isAllowNewInputs && (\n                <PlusIcon\n                  title='Add new input'\n                  className='btn--plus'\n                  onClick={handleClickPlus}\n                  height={24}\n                  width={24}\n                />\n              )}\n            </div>\n          </form>\n        )}\n      </div>\n      {botResponse && (\n        <>\n          <div className='response-markdown'>\n            <ReactMarkdown>\n              {botResponse?.payload?.result?.replaceAll('\\n', '\\n\\r')}\n            </ReactMarkdown>\n          </div>\n          {method === BotFeatureMethod.ECHO_FILES && (\n            <div className='response-files'>\n              Files:\n              {botResponse?.files?.map(() => <FileIcon className='response-files__file' height={20} width={20} />)}\n            </div>\n          )}\n          {\n            botResponse && (\n              <div>\n                <div className='response-markdown-form'>\n                  <input\n                    checked={isJSONViewer}\n                    className='form-toggler__input'\n                    id='form-toggler'\n                    type='checkbox'\n                    onChange={toggleIsJSONViewer}\n                  />\n                  <span\n                    className='form-toggler'\n                    onClick={toggleIsJSONViewer}\n                  >\n                    Show JSON Viewer\n                  </span>\n                </div>\n                {isJSONViewer && (\n                  <div className='response-json'>\n                    <JsonViewer height={24} json={botResponse} />\n                  </div>\n                )}\n              </div>\n            )\n          }\n        </>\n      )}\n      {expressResponse && (\n        <div className='response-express'>\n          {JSON.stringify(expressResponse?.payload, null, 2)}\n        </div>\n      )}\n    </>\n  )\n}\n","var _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgBotxIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 12 12\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.379 7.017v2.775h-.55A.816.816 0 0 1 0 8.989V7.427c0-.443.371-.803.829-.803h.566c-.01.13-.016.261-.016.393zm9.792-.393c.458 0 .829.36.829.803V8.99a.816.816 0 0 1-.829.803h-.55V7.017c0-.132-.006-.263-.016-.393h.566zM10.047 9.873v-2.82c0-.132-.006-.263-.018-.393C9.857 4.651 8.377 3.043 6.5 2.8h-.997c-1.88.244-3.36 1.853-3.532 3.863-.01.129-.017.26-.017.392v4.754h8.094V9.873zm-5.998-.66c-.608 0-1.101-.522-1.101-1.167 0-.644.493-1.166 1.1-1.166.609 0 1.102.522 1.102 1.166 0 .645-.493 1.167-1.101 1.167zm2.96-1.167c0-.644.493-1.166 1.1-1.166.609 0 1.102.522 1.102 1.166 0 .645-.493 1.167-1.101 1.167s-1.101-.522-1.101-1.167z\"\n  }))));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBotxIcon);\nexport default __webpack_public_path__ + \"static/media/botx-icon.cf9274ad.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState, useRef } from 'react'\nimport classnames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport './TopLoader.scss'\nimport { getTopLoader } from '../../redux/selectors/ui'\n\nexport default function TopLoader() {\n  const topLoader = useSelector(getTopLoader)\n\n  const [start, setStart] = useState(false)\n  const [stop, setStop] = useState(false)\n  const [finish, setFinish] = useState(false)\n\n  const stopTimeout = useRef<NodeJS.Timeout | null>(null)\n  const finishTimeout = useRef<NodeJS.Timeout | null>(null)\n\n  useEffect(() => {\n    if (topLoader && !start) {\n      setStart(true)\n    }\n\n    if (!topLoader && start) {\n      setStart(false)\n      setStop(true)\n\n      stopTimeout.current = setTimeout(() => {\n        setFinish(true)\n\n        finishTimeout.current = setTimeout(() => {\n          setStop(false)\n          setFinish(false)\n        }, 100)\n      }, 200)\n    }\n  }, [topLoader, start])\n\n  useEffect(() => {\n    return () => {\n      if (stopTimeout.current) clearTimeout(stopTimeout.current)\n      if (finishTimeout.current) clearTimeout(finishTimeout.current)\n    }\n  }, [])\n\n  return (\n    <div className={classnames({ 'top-loader': true, 'top-loader--enabled': start && !finish })}>\n      <div\n        className={classnames({\n          'top-loader__bar': true,\n          'top-loader__bar--start': start,\n          'top-loader__bar--stop': stop,\n          'top-loader__bar--finish': finish,\n        })}\n      />\n    </div>\n  )\n}\n","import FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport { EXPRESS_NOTIFICATION_FEATURE } from '../../constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getExpressNotifications } from '../../redux/selectors/client'\nimport './ExpressNotifications.scss'\nimport { resetExpressNotificationSuccess } from '../../redux/actions/client'\n\nexport default function ExpressNotifications() {\n  const dispatch = useDispatch()\n  const expressNotifications = useSelector(getExpressNotifications)\n  const handleClear = () => {\n    dispatch(resetExpressNotificationSuccess())\n  }\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={EXPRESS_NOTIFICATION_FEATURE.name} />\n        <div className='feature-page__notifications'>\n          {!!expressNotifications.length ? (\n            <>\n              <div\n                className='notifications__clear-button'\n                onClick={handleClear}\n                title='Clear notifications'\n              >\n                Clear\n              </div>\n              {expressNotifications.map((item, i) => (\n                <div className='notifications__item' key={i}>\n                  {JSON.stringify(item?.data, null, 2)}\n                </div>\n              ))}\n            </>\n          ) : (\n            <div className='feature-page__notifications-placeholder'>\n              New notifications will appear here...\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  )\n}\n","import { createAction } from 'redux-actions'\nimport { SEND_EXPRESS_EVENT_SUCCESS } from './client'\n\nexport const SET_TOP_LOADER = 'SET_TOP_LOADER'\nexport const SET_MAIN_LOADER = 'SET_MAIN_LOADER'\nexport const SET_REDIRECT_PATH = 'SET_REDIRECT_PATH'\n\nexport const setTopLoader = createAction(SET_TOP_LOADER, (topLoader: boolean) => topLoader)\nexport const setMainLoader = createAction(SEND_EXPRESS_EVENT_SUCCESS, (mainLoader: boolean) => mainLoader)\nexport const setRedirectPath = createAction(SET_REDIRECT_PATH, (redirectPath: string) => redirectPath)\n\nexport type setTopLoaderActionType = ReturnType<typeof setTopLoader>\nexport type setMainLoaderActionType = ReturnType<typeof setMainLoader>\nexport type setRedirectPathActionType = ReturnType<typeof setRedirectPath>\n","import FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport { OPEN_SMART_APP_META_FEATURE } from '../../constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\nimport { setRedirectPath } from '../../redux/actions/ui'\nimport { getMeta } from '../../redux/selectors/client'\nimport { setMeta } from '../../redux/actions/client'\n\nexport default function MetaPage() {\n  const dispatch = useDispatch()\n  const meta = useSelector(getMeta)\n\n  useEffect(() => {\n    return () => {\n      dispatch(setRedirectPath(''))\n      dispatch(setMeta(null))\n    }\n  }, [dispatch])\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={OPEN_SMART_APP_META_FEATURE.name} />\n        {meta && (\n          <div className='response-express'>\n            {JSON.stringify(meta?.payload, null, 2)}\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n","import { createBrowserHistory } from 'history'\n\n// Create history singleton\nexport const history = createBrowserHistory()\n","import './FeatureSmartapp.scss'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFeaturesMenu } from '../../redux/selectors/bot'\nimport { Link, Route, Switch } from 'react-router-dom'\nimport FeaturePage from '../feature-page/FeaturePage'\nimport { loadFeatures } from '../../redux/actions/bot'\nimport TopLoader from '../top-loader/TopLoader'\nimport { ReactComponent as BotxIcon } from '../../assets/botx-icon.svg'\nimport { EXPRESS_FEATURES, EXPRESS_NOTIFICATION_FEATURE, OPEN_SMART_APP_META_FEATURE } from '../../constants'\nimport ExpressNotifications from '../express-notifications/ExpressNotifications'\nimport MetaPage from '../meta-page/MetaPage'\nimport { getRedirectPath } from '../../redux/selectors/ui'\nimport { history } from '../../redux/router'\n\nexport default function FeatureSmartapp() {\n  const dispatch = useDispatch()\n  const features = useSelector(getFeaturesMenu)\n  const redirectPath = useSelector(getRedirectPath)\n\n  useEffect(() => {\n    if (!features) dispatch(loadFeatures())\n  }, [dispatch, features])\n\n  useEffect(() => {\n      if (redirectPath) history.push(redirectPath)\n  }, [dispatch, redirectPath])\n\n  return (\n    <div className='feature-smartapp'>\n      <div className='header'>\n        <span className='header__content'>\n          <BotxIcon className='header__icon' height={20} width={20} />\n          <span className='header__text'>Feature Smartapp</span>\n        </span>\n      </div>\n      <TopLoader />\n      <section className='feature-smartapp__menu'>\n        <Switch>\n          {features?.map(item => (\n            <Route key={`${item.method}-route`} path={`/${item.method}`}>\n              <FeaturePage {...item} />\n            </Route>\n          ))}\n          {EXPRESS_FEATURES.map(item => (\n            <Route key={`${item.method}-route`} path={`/${item.method}`}>\n              <FeaturePage {...item} />\n            </Route>\n          ))}\n          <Route\n            key={`${OPEN_SMART_APP_META_FEATURE.method}-route`}\n            path={`/${OPEN_SMART_APP_META_FEATURE.method}`}\n          >\n            <MetaPage />\n          </Route>\n          <Route\n            key={`${EXPRESS_NOTIFICATION_FEATURE.method}-route`}\n            path={`/${EXPRESS_NOTIFICATION_FEATURE.method}`}\n          >\n            <ExpressNotifications />\n          </Route>\n          <Route path={'/'}>\n            {features?.map(item => (\n              <Link\n                className='menu-item'\n                key={`${item.method}-link`}\n                to={`/${item.method}`}\n              >\n                {item.name}\n              </Link>\n            ))}\n            {features && EXPRESS_FEATURES.map(item => (\n              <Link\n                className='menu-item'\n                key={`${item.method}-link`}\n                to={`/${item.method}`}\n              >\n                {item.name}\n              </Link>\n            ))}\n            {features && (\n                <Link\n                  className='menu-item'\n                  key={`${EXPRESS_NOTIFICATION_FEATURE.method}-link`}\n                  to={`/${EXPRESS_NOTIFICATION_FEATURE.method}`}\n                >\n                  {EXPRESS_NOTIFICATION_FEATURE.name}\n                </Link>\n              )}\n          </Route>\n        </Switch>\n      </section>\n    </div>\n  )\n}\n","import { BotMethodResponse } from '../../types'\nimport './Notifier.scss'\n\nexport default function Notifier({ result, status }: BotMethodResponse['payload']) {\n  return (\n    <div className={'notifier'}>\n      <span className={'notifier__text'}>{result}</span>\n      <span className={'notifier__text'}>Status: {status}</span>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport MainLoader from './main-loader/MainLoader'\nimport FeatureSmartapp from './feature-smartapp/FeatureSmartapp'\nimport { useDispatch } from 'react-redux'\nimport { BotMethodResponse, EventType, ExpressNotification } from '../types'\nimport { sendReadyEvent, setExpressNotificationSuccess } from '../redux/actions/client'\nimport Notifier from './notifier/Notifier'\n\nexport default function Main() {\n  const dispatch = useDispatch()\n  const [load, setLoad] = useState(true)\n  const [notifier, setNotifier] = useState<BotMethodResponse['payload'] | null>(null)\n\n  useEffect(() => {\n    if (load) {\n      setLoad(false)\n      dispatch(sendReadyEvent())\n    }\n\n    bridge?.onReceive(({ type, payload }) => {\n      if (typeof payload !== 'object') return\n\n      switch (type) {\n        case EventType.SMARTAPP_RPC: {\n          setNotifier(payload as BotMethodResponse['payload'])\n          setTimeout(() => setNotifier(null), 3000)\n          break\n        }\n        case EventType.NOTIFICATION: {\n          dispatch(setExpressNotificationSuccess(payload as ExpressNotification))\n          break\n        }\n      }\n    })\n  }, [dispatch, load])\n\n  return (\n    <>\n      <MainLoader />\n      <FeatureSmartapp />\n      {notifier && <Notifier {...notifier} />}\n    </>\n  )\n}\n","import { handleActions } from 'redux-actions'\nimport { UIState } from '../../types'\nimport {\n  SET_MAIN_LOADER,\n  SET_REDIRECT_PATH,\n  SET_TOP_LOADER,\n  setMainLoaderActionType, setRedirectPathActionType,\n  setTopLoaderActionType,\n} from '../actions/ui'\n\nconst initialState: UIState = {\n  topLoader: false,\n  mainLoader: false,\n  redirectPath: '',\n}\n\nconst reducers = {\n  [SET_TOP_LOADER]: (\n    state: UIState, { payload: topLoader }: setTopLoaderActionType\n  ): UIState => ({\n    ...state, topLoader\n  }),\n  [SET_MAIN_LOADER]: (\n    state: UIState, { payload: mainLoader }: setMainLoaderActionType\n  ): UIState => ({\n    ...state, mainLoader\n  }),\n  [SET_REDIRECT_PATH]: (\n    state: UIState, { payload: redirectPath }: setRedirectPathActionType\n  ): UIState => ({\n    ...state, redirectPath\n  }),\n}\n\nexport const ui = handleActions<UIState, any>(reducers, initialState)\n","import { handleActions } from 'redux-actions'\nimport { BotState } from '../../types'\nimport {\n  LOAD_FEATURES_SUCCESS,\n  loadFeaturesSuccessActionType,\n  RESET_RESPONSE,\n  SEND_FEATURE_BOT_EVENT_SUCCESS,\n} from '../actions/bot'\n\nconst initialState: BotState = {\n  features: null,\n  response: null,\n  notifications: null,\n}\n\nconst reducers = {\n  [LOAD_FEATURES_SUCCESS]: (\n    state: BotState, { payload: features }: loadFeaturesSuccessActionType,\n  ): BotState => ({\n    ...state,\n    features,\n  }),\n  [SEND_FEATURE_BOT_EVENT_SUCCESS]: (\n    state: BotState,\n    { payload: response }: any\n  ): BotState => ({\n    ...state,\n    response,\n  }),\n  [RESET_RESPONSE]: (state: BotState): BotState => ({\n    ...state,\n    response: null,\n  }),\n}\n\nexport const bot = handleActions(reducers, initialState)\n","import { handleActions } from 'redux-actions'\nimport { ClientState } from '../../types'\n\nimport {\n  REMOVE_FILE_SUCCESS,\n  removeFileSuccessActionType,\n  RESET_ATTACHMENTS, RESET_EXPRESS_NOTIFICATION_SUCCESS, RESET_EXPRESS_RESPONSE,\n  SEND_EXPRESS_EVENT_SUCCESS,\n  sendExpressEventSuccessActionType,\n  SET_EXPRESS_NOTIFICATION_SUCCESS, SET_META, setExpressNotificationSuccessActionType, setMetaActionType,\n  UPLOAD_FILE_SUCCESS,\n  UPLOAD_FILES_SUCCESS,\n  uploadFilesSuccessActionType,\n  uploadFileSuccessActionType,\n} from '../actions/client'\n\nconst initialState: ClientState = {\n  attachments: null,\n  response: null,\n  meta: null,\n  notifications: [],\n}\n\nconst reducers = {\n  [UPLOAD_FILE_SUCCESS]: (\n    state: ClientState, { payload: file }: uploadFileSuccessActionType,\n  ): ClientState => ({\n    ...state,\n    attachments: [file],\n  }),\n  [UPLOAD_FILES_SUCCESS]: (\n    state: ClientState,\n    { payload: files }: uploadFilesSuccessActionType,\n  ): ClientState => ({\n    ...state,\n    attachments: [...files],\n  }),\n  [REMOVE_FILE_SUCCESS]: (\n    state: ClientState, { payload: id }: removeFileSuccessActionType,\n  ): ClientState => ({\n    ...state,\n    attachments: state.attachments.filter(attachment => attachment.fileId !== id),\n  }),\n  [RESET_ATTACHMENTS]: (\n    state: ClientState,\n  ): ClientState => ({\n    ...state,\n    attachments: null,\n  }),\n  [SET_EXPRESS_NOTIFICATION_SUCCESS]: (\n    state: ClientState, { payload }: setExpressNotificationSuccessActionType,\n  ): ClientState => ({\n    ...state,\n    notifications: [payload, ...state.notifications],\n  }),\n  [RESET_EXPRESS_NOTIFICATION_SUCCESS]: (\n    state: ClientState\n  ): ClientState => ({\n    ...state,\n    notifications: [],\n  }),\n  [SEND_EXPRESS_EVENT_SUCCESS]: (\n    state: ClientState, { payload }: sendExpressEventSuccessActionType\n  ): ClientState => ({\n    ...state,\n    response: payload\n  }),\n  [RESET_EXPRESS_RESPONSE]: (state: ClientState): ClientState => ({\n    ...state,\n    response: null,\n  }),\n  [SET_META]: (\n    state: ClientState, { payload }: setMetaActionType\n  ): ClientState => ({\n    ...state,\n    meta: payload,\n  }),\n}\n\nexport const client = handleActions<ClientState, any>(reducers, initialState)\n","import { connectRouter } from 'connected-react-router'\nimport { combineReducers } from 'redux'\nimport { history } from '../router'\nimport { ui } from './ui'\nimport { AppState } from '../../types'\nimport { bot } from './bot'\nimport { client } from './client'\n\nexport const rootReducer = combineReducers<AppState>({\n  ui,\n  bot,\n  client,\n  router: connectRouter(history),\n})\n","import { put } from 'redux-saga/effects'\nimport { setMainLoader } from '../actions/ui'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport { BotFeaturesResponse } from '../../types'\nimport { MENU_EVENT } from '../../constants'\nimport { loadFeaturesSuccess } from '../actions/bot'\n\nexport function* loadFeaturesSaga() {\n  try {\n    yield put(setMainLoader(true))\n\n    const response: BotFeaturesResponse = yield bridge.sendBotEvent(MENU_EVENT)\n\n    if (response) yield put(loadFeaturesSuccess(response.payload.result))\n  } catch (e: any) {\n    console.error('loadFeaturesSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n","import { put } from 'redux-saga/effects'\nimport { setTopLoader } from '../actions/ui'\nimport { BotMethodResponse } from '../../types'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport { sendFeatureBotEventSuccess } from '../actions/bot'\n\nexport function* sendFeatureBotEventSaga(action) {\n  try {\n    yield put(setTopLoader(true))\n\n    const response: BotMethodResponse = yield bridge?.sendBotEvent(action.payload)\n\n    yield put(sendFeatureBotEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendFeatureBotEventSaga error', e)\n  } finally {\n    yield put(setTopLoader(false))\n  }\n}\n","import { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport { ClientEventMethod, ExpressMethodResponse, File } from '../../types'\nimport { put } from 'redux-saga/effects'\nimport {\n  sendExpressEventActionType,\n  sendExpressEventSuccess,\n  setMeta,\n  uploadFileActionType,\n  uploadFilesActionType,\n  uploadFilesSuccess,\n  uploadFileSuccess,\n} from '../actions/client'\nimport { setRedirectPath, setTopLoader } from '../actions/ui'\nimport { OPEN_SMART_APP_META_FEATURE } from '../../constants'\n\nexport function* uploadFileSaga({ payload: { type } }: uploadFileActionType) {\n  try {\n    const response = yield bridge?.sendClientEvent({\n      method: ClientEventMethod.UPLOAD_FILE,\n      params: { type },\n    })\n\n    if (!response.payload?.record) return\n\n    const file: File = {\n      ...response.payload.record,\n    }\n\n    yield put(uploadFileSuccess(file))\n  } catch (e) {\n    console.error(`uploadFileSaga error: ${e}`)\n  }\n}\n\nexport function* uploadFilesSaga({ payload: { type } }: uploadFilesActionType) {\n  try {\n    const response = yield bridge?.sendClientEvent({\n      method: ClientEventMethod.UPLOAD_FILES,\n      params: { type },\n    })\n\n    if (!response.payload.records.length) return\n\n    const files: File[] = response.payload.records\n\n    yield put(uploadFilesSuccess(files))\n  } catch (e) {\n    console.error(`uploadFilesSaga error: ${e}`)\n  }\n}\n\nexport function* sendExpressEventSaga(action: sendExpressEventActionType) {\n  try {\n    yield put(setTopLoader(true))\n\n    const response: ExpressMethodResponse = yield bridge?.sendClientEvent({\n      ...action.payload,\n    })\n    console.error({response})\n\n    yield put(sendExpressEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendExpressEventSaga error', e)\n  } finally {\n    yield put(setTopLoader(false))\n  }\n}\n\nexport function* sendExpressReadyEventSaga() {\n  try {\n    const method = OPEN_SMART_APP_META_FEATURE.method\n    const response = yield bridge?.sendClientEvent({\n      method: ClientEventMethod.READY,\n      params: {},\n      timeout: 300,\n    })\n    console.log('sendExpressReadyEvent response', JSON.stringify(response, null, 2))\n\n    if (\n      response?.type === method ||\n      response?.payload?.type === method ||\n      response?.payload?.data?.type === method\n    ) {\n      yield put(setRedirectPath(`/${OPEN_SMART_APP_META_FEATURE.method}`))\n      yield put(setMeta(response))\n    } else {\n      setRedirectPath('/')\n    }\n  } catch (e) {\n    console.error('sendExpressReadyEventSaga', e)\n  }\n}\n","import { all, takeEvery } from 'redux-saga/effects'\nimport { loadFeaturesSaga } from './ui'\nimport { sendFeatureBotEventSaga } from './bot'\nimport { LOAD_FEATURES, SEND_FEATURE_BOT_EVENT } from '../actions/bot'\nimport { sendExpressEventSaga, sendExpressReadyEventSaga, uploadFileSaga, uploadFilesSaga } from './client'\nimport { SEND_EXPRESS_EVENT, SEND_EXPRESS_READY_EVENT, UPLOAD_FILE, UPLOAD_FILES } from '../actions/client'\n\nfunction* rootSaga() {\n  yield all([\n    takeEvery(LOAD_FEATURES, loadFeaturesSaga),\n    takeEvery(SEND_FEATURE_BOT_EVENT, sendFeatureBotEventSaga),\n    takeEvery(SEND_EXPRESS_EVENT, sendExpressEventSaga),\n    takeEvery(SEND_EXPRESS_READY_EVENT, sendExpressReadyEventSaga),\n    takeEvery(UPLOAD_FILE, uploadFileSaga),\n    takeEvery(UPLOAD_FILES, uploadFilesSaga),\n  ])\n}\n\nexport default rootSaga\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport Main from './components/Main'\nimport { configureStore } from './redux/configureStore'\nimport { history } from './redux/router'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <ConnectedRouter history={history}>\n        <Main />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","import { applyMiddleware, createStore, Store } from 'redux'\nimport { routerMiddleware as createRouterMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { rootReducer } from './reducers'\nimport rootSaga from './sagas'\nimport { history } from './router'\nimport { AppState } from '../types'\n\ntype ApplicationStore = Store<AppState>\n\nexport function configureStore(): ApplicationStore {\n  const sagaMiddleware = createSagaMiddleware()\n  const routerMiddleware = createRouterMiddleware(history)\n\n  const store: ApplicationStore = createStore(\n    rootReducer,\n    undefined,\n    composeWithDevTools(applyMiddleware(sagaMiddleware, routerMiddleware))\n  )\n\n  sagaMiddleware\n    .run(rootSaga)\n    .toPromise()\n    .catch((e: Error) => console.error('Saga error', e))\n\n  return store\n}\n"],"sourceRoot":""}