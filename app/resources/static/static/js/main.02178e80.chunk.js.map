{"version":3,"sources":["components/ui/main-loader/MainLoader.tsx","redux/selectors/bot.ts","types/index.ts","constants.ts","helpers/index.ts","redux/actions/bot.ts","assets/plus.svg","assets/clear-input.svg","assets/file.svg","assets/copy.svg","components/ui/json-editor/JsonViewer.tsx","redux/actions/client.ts","redux/selectors/client.ts","assets/arrow-left.svg","assets/botx-icon.svg","components/ui/feature-page-header/FeaturePageHeader.tsx","containers/feature-page/FeaturePage.tsx","components/express-notifications/ExpressNotifications.tsx","redux/actions/ui.ts","components/meta-page/MetaPage.tsx","redux/selectors/ui.ts","redux/history.ts","components/scan-qr/ScanQR.tsx","components/scan-qr-page/ScanQRPage.tsx","components/open-file/OpenFile.tsx","components/open-web-page/OpenWebPage.tsx","components/request-location/RequestLocation.tsx","components/ui/json-viewer/JsonViewer.tsx","components/echo-static-file/EchoStaticFile.tsx","components/ui/version/Version.tsx","components/request-self-profile/RequestSelfProfile.tsx","components/close-smart-app/CloseSmartApp.tsx","components/file-proxy/FileProxy.tsx","components/connection-status/ConnectionIcon.tsx","components/connection-status/ConnectionStatus.tsx","components/create-deeplink/CreateDeeplink.tsx","components/ios-swipe-toggler/IosSwipeToggler.tsx","components/open-message/OpenMessage.tsx","components/client-storage/ClientStorage.tsx","components/handle-deeplink/HandleDeeplinkPage.tsx","components/search-phonebook/SearchPhonebookPage.tsx","components/locale/LocalePage.tsx","components/unread-counters/UnreadCounters.tsx","containers/feature-smartapp/FeatureSmartapp.tsx","components/notifier/Notifier.tsx","components/Main.tsx","redux/reducers/ui.ts","redux/reducers/bot.ts","redux/reducers/client.ts","redux/reducers/index.ts","redux/sagas/ui.ts","redux/sagas/bot.ts","redux/sagas/client.ts","redux/sagas/eventBus.ts","redux/sagas/index.ts","index.tsx","redux/configureStore.ts"],"names":["MainLoader","_jsx","className","id","children","_jsxs","getFeaturesMenu","createSelector","state","bot","features","getFeatureBotResponse","response","getStaticFile","staticFile","EventType","BotFeatureMethod","ExpressFeatureMethod","Methods","ExpressFeatureName","ClientEventMethod","InputId","InputLabel","InputType","EXPRESS_NOTIFICATION_FEATURE","method","name","OPEN_SMART_APP_META_FEATURE","field","OPEN_FILE_FEATURE","REQUEST_LOCATION","SCAN_QR_FEATURE","OPEN_WEB_PAGE_FEATURE","REQUEST_SELF_PROFILE_FEATURE","CLOSE_SMART_APP_FEATURE","FILE_PROXY","CONNECTION_STATUS","MENU_ITEM_MESSAGE_META","MENU_EVENT","params","text","CREATE_DEEPLINK","IOS_SWIPE","OPEN_CHAT_MESSAGE","CLIENT_STORAGE","HANDLE_DEEPLINK_FEATURE","SEARCH_PHONEBOOK","UNREAD_COUNTER_FEATURE","LOCALE_FEATURE","INPUT_TYPE","INPUT_TEXT","INPUT_NUMBER","FILE_PICKER","ARRAY_UUID","UUID","EXPRESS_FEATURES","ADD_CONTACT","icon","uiElements","PHONE","label","type","NAME","GET_CONTACT","OPEN_CONTACT_CARD","USER_HUID","CREATE_PERSONAL_CHAT","HUID","OPEN_GROUP_CHAT","GROUP_CHAT_ID","OPEN_SMARTAPP","SMARTAPP_ID","SEND_MESSAGE","MESSAGE","SEND_BOT_COMMAND","BODY","DATA","OPEN_CLIENT_SETTINGS","GET_CHATS","FILTER","ECHO_STATIC_FILE_FEATURE","ECHO_STATIC_FILE","FILE","GUARANTEED_DELIVERY_FEATURE","ECHO","path","TEXT","getFormInitialValues","reduce","acc","item","undefined","getQueryParam","param","URLSearchParams","window","location","search","get","LOAD_FEATURES","LOAD_FEATURES_SUCCESS","RESET_RESPONSE","SEND_FEATURE_BOT_EVENT","SEND_FEATURE_BOT_EVENT_SUCCESS","SET_STATIC_FILE","loadFeatures","createAction","loadFeaturesSuccess","resetFeatures","sendFeatureBotEvent","botEvent","sendFeatureBotEventSuccess","setStaticFile","echoStaticFile","file","_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgPlus","_ref","svgRef","title","titleId","props","xmlns","viewBox","fill","ref","fillRule","d","ForwardRef","SvgClearInput","transform","_g","SvgFile","width","height","x","y","rx","fontSize","fontWeight","SvgCopy","JsonViewer","container","useRef","botResponse","useEffect","editor","JSONEditor","current","mode","enableTransform","set","button","document","createElement","innerHTML","ReactDOMServer","renderToStaticMarkup","CopyIcon","addEventListener","obj","JSON","stringify","body","appendChild","select","execCommand","removeChild","copyToClipboardJson","setAttribute","menu","querySelector","insertBefore","destroy","UPLOAD_FILE","UPLOAD_FILE_SUCCESS","UPLOAD_FILES","UPLOAD_FILES_SUCCESS","REMOVE_FILE_SUCCESS","RESET_ATTACHMENTS","SEND_EXPRESS_EVENT","SEND_MESSAGE_EXPRESS_EVENT","SEND_EXPRESS_EVENT_SUCCESS","SET_EXPRESS_NOTIFICATION_SUCCESS","RESET_EXPRESS_NOTIFICATION_SUCCESS","RESET_EXPRESS_RESPONSE","SEND_EXPRESS_READY_EVENT","SET_META","SET_LOCATION","REQUEST_SELF_PROFILE","SET_SELF_PROFILE","CLOSE_SMART_APP","GET_CONNECTION_STATUS","SET_CONNECTION_STATUS","SUBSCRIBE_CONNECTION_STATUS","UNSUBSCRIBE_CONNECTION_STATUS","CONNECTION_STATUS_CHANGED","SET_DEEPLINK_URL","CLIENT_STORAGE_SET","CLIENT_STORAGE_GET","CLIENT_STORAGE_LOADED","CLIENT_STORAGE_REMOVE","CLIENT_STORAGE_CLEAR","HANDLE_DEEPLINK","SEARCH_CORPORATE_PHONEBOOK","SEARCH_LOCAL_PHONEBOOK","GET_UNREAD_COUNTER","SET_UNREAD_COUNTER","SUBSCRIBE_UNREAD_COUNTER","UNSUBSCRIBE_UNREAD_COUNTER","uploadFile","uploadFileSuccess","uploadFiles","uploadFilesSuccess","files","removeFileSuccess","resetAttachments","sendExpressEvent","expressEvent","sendMessageExpressEvent","payload","sendExpressEventSuccess","setExpressNotificationSuccess","notification","resetExpressNotificationSuccess","setMeta","meta","resetExpressResponse","sendReadyEvent","setLocation","requestLocation","requestSelfProfile","setSelfProfile","selfProfile","closeSmartApp","getConnectionStatus","setConnectionStatus","connectionStatus","subscribeConnectionStatus","unsubscribeConnectionStatus","subscribeUnreadCounter","unsubscribeUnreadCounter","connectionStatusChanged","createDeeplink","appId","setDeeplinkUrl","deeplinkUrl","openChatMessage","groupChatId","syncId","clientStorageSet","value","clientStorageGet","clientStorageLoaded","storageData","clientStorageRemove","clientStorageClear","handleDeeplink","deeplink","searchCorporatePhonebook","filter","searchLocalPhonebook","getUnreadCounter","setUnreadCounter","counter","getAttachments","client","attachments","getExpressResponse","getMeta","getLocation","getExpressNotifications","notifications","getSelfProfile","SvgArrowLeft","FeaturePageHeader","Link","to","ArrowLeft","FeaturePage","dispatch","useDispatch","useSelector","expressResponse","inputs","setInputs","useState","inputError","setInputError","isJSONViewer","setIsJSONViewer","isAllowNewInputs","SEARCH_USERS","isFilesMethod","ECHO_FILE","ECHO_FILES","includes","isUsersMethod","isExpressMethod","values","handleClickPlus","last","next","HUIDS","concat","handleFilesSubmit","handleFormSubmitForExpressMethod","async","formValues","filterFormValues","userHuid","message","messageBody","messageMeta","handleSendMessage","openClientSettings","chats","getChats","handleGetChats","openGroupChat","handleOpenGroupChat","result","sendBotCommand","data","command","handleSendBotCommand","openContactCard","handleOpenContactCard","handleDefault","useMemo","handleFormSubmitForBotMethod","event","guaranteed_delivery_required","handleEchoWithGuaranteedDelivery","huids","handleUploadFilesClick","toggleIsJSONViewer","formik","useFormik","initialValues","onSubmit","getIsSubmitButtonDisabled","map","input","index","_Fragment","FILES","onClick","attachment","idx","fileName","RemoveIcon","handleRemoveFile","fileId","classnames","disabled","renderTextMethodComponent","getIsInputError","_ref2","isNotEmpty","uuid","test","phone","handleSubmit","_ref3","inputType","isShowLabel","onChange","handleChange","multiple","pattern","min","setFieldValue","PlusIcon","renderBotResponse","_botResponse$payload","_response$replaceAll","_response$replaceAll3","_botResponse$files","ReactMarkdown","replaceAll","FileIcon","SvgBotxIcon","ExpressNotifications","expressNotifications","handleClear","SET_MAIN_LOADER","SET_REDIRECT_PATH","SET_SHOW_IOS_SWIPE_TOAST","setMainLoader","mainLoader","setRedirectPath","redirectPath","setShowIosSwipeToast","showIosSwipeToast","MetaPage","JsonViewerEditor","getMainLoader","ui","getRedirectPath","history","createHashHistory","ScanQR","onScanSuccess","onScanFailure","config","fps","qrbox","disableFlip","Html5QrcodeScanner","render","ScanQRPage","decodedText","setDecodedText","decodedResult","setDecodedResult","handleOnScanSuccess","console","log","err","warn","OpenFile","inputValue","setInputValue","e","handleClick","error","parse","bridge","sendClientEvent","OpenWebPage","webUrl","setWebUrl","mailUrl","setMailUrl","defaultValue","href","RequestLocation","useLayoutEffect","checked","json","EchoStaticFile","_attachments$","_botResponse$payload$","_botResponse$payload$2","_staticFile$payload","src","alt","Version","version","RequestSelfProfile","CloseSmartApp","FileProxy","url","setUrl","videoUrl","setVideoUrl","classNames","autoPlay","controls","style","margin","ConnectionIcon","ConnectionStatus","subscribedConnectionStatus","handleGetConnectionStatus","handleSubscribeConnectionStatus","handleUnsubscribeConnectionStatus","initMeta","CreateDeeplink","setAppId","metaJson","setMetaJson","rows","IosSwipeToggler","handleToggle","htmlFor","OpenMessage","setGroupChatId","setSyncId","initData","string1","number1","boolean1","null1","array1","object1","param1","ClientStorage","dataToSave","setData","setKey","handleKeyChange","handleSet","handleGet","handleRemove","HandleDeeplinkPage","setDeeplink","SearchPhonebookPage","setFilter","handleCorpSearch","handleLocalSearch","LocalePage","locale","setLocale","TYPES","UnreadCountersPage","setId","setType","unreadCounter","t","toString","handleGetUnreadCounter","handleSubscribe","handleUnsubscribe","FeatureSmartapp","botFeatures","platform","useQuery","handleOpenClientSettings","alert","preventDefault","push","BotxIcon","ToastContainer","HashRouter","Switch","Route","Notifier","status","Main","isMainLoader","load","setLoad","notifier","setNotifier","onReceive","SMARTAPP_RPC","setTimeout","NOTIFICATION","initialState","theme","reducers","handleActions","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","rootReducer","combineReducers","router","connectRouter","loadFeaturesSaga","put","sendBotEvent","showToast","toastOptions","position","autoClose","toast","info","sendFeatureBotEventSaga","action","echoStaticFileSaga","connectionStatusChannel","unreadCounterChannels","uploadFileSaga","_response$payload","record","uploadFilesSaga","timeout","records","requestLocationSaga","requestSelfProfileSaga","sendExpressEventSaga","sendMessageExpressEventSaga","sendMessage","sendExpressReadyEventSaga","_response$payload2","_response$payload3","ready","initialData","_bridge$log","initiator","closeSmartAppSaga","getConnectionStatusSaga","addConnectionEventListener","eventChannel","emitter","connectionStatusCallback","subscribeClientEvents","eventType","SubscriptionEventType","callback","then","unsubscribeClientEvents","subscribeConnectionStatusSaga","take","unsubscribeConnectionStatusSaga","close","createDeeplinkSaga","_response$payload$dat","openChatMessageSaga","clientStorageSetSaga","STATUS","SUCCESS","errorCode","spawn","clientStorageGetSaga","clientStorageRemoveSaga","_response$payload4","clientStorageClearSaga","handleDeeplinkSaga","link","searchCorporatePhonebookSaga","searchLocalPhonebookSaga","getUnreadCounterSaga","ERROR","addUreadCounterEventListener","unreadCounterCallback","UNREAD_COUNTER_CHANGE","unsubscribeUnreadCounterSaga","catch","subscribeUnreadCounterSaga","channel","find","c","indexOf","splice","emit","watchClientEvents","CLEAN_CACHE","MOVE_TO_ROOT","BACK_PRESSED","hash","subscribeHistoryEvents","listen","watchHistoryEvents","handleRoutingChanged","isRoot","pathname","routingChanged","rootEventsBusSaga","all","rootFeatureSmartAppSaga","takeEvery","rootSaga","fork","setupTheme","documentElement","ReactDOM","React","StrictMode","Provider","store","sagaMiddleware","createSagaMiddleware","routerMiddleware","createRouterMiddleware","createStore","composeWithDevTools","applyMiddleware","run","toPromise","configureStore","ConnectedRouter","getElementById"],"mappings":"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","file":"static/js/main.02178e80.chunk.js","sourcesContent":["import React from 'react'\nimport './MainLoader.scss'\n\nexport default function MainLoader() {\n  return (\n    <div className='main-loader' id='main-loader'>\n      <div className='main-loader__spinner'>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  )\n}\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getFeaturesMenu = createSelector(\n  [(state: AppState) => state.bot.features],\n  features => features,\n)\n\nexport const getFeatureBotResponse = createSelector(\n  [(state: AppState) => state.bot.response],\n  response => response,\n)\n\nexport const getStaticFile = createSelector(\n  [(state: AppState) => state.bot.staticFile],\n  staticFile => staticFile,\n)\n","import { RouterState } from 'connected-react-router'\n\nexport enum EventType {\n  SMARTAPP_RPC = 'smartapp_rpc',\n  NOTIFICATION = 'notification',\n}\n\nexport enum BotFeatureMethod {\n  ECHO = 'echo',\n  UPDATE_APP_COUNTER = 'update_app_counter',\n  SEND_NOTIFICATION = 'send_notification',\n  ECHO_FILE = 'echo_file',\n  ECHO_FILES = 'echo_files',\n  ECHO_STATIC_FILE = 'echo_static_file',\n  SEARCH_USERS = 'search_users',\n}\n\nexport enum ExpressFeatureMethod {\n  ADD_CONTACT = 'add_contact',\n  CREATE_PERSONAL_CHAT = 'create_personal_chat',\n  SEND_MESSAGE = 'send_message',\n  GET_CONTACT = 'get_contact',\n  OPEN_SMARTAPP = 'open_smart_app',\n  OPEN_CLIENT_SETTINGS = 'open_client_settings',\n  GET_CHATS = 'get_chats',\n  OPEN_GROUP_CHAT = 'open_group_chat',\n  SEND_BOT_COMMAND = 'send_bot_command',\n  OPEN_CONTACT_CARD = 'open_contact_card',\n}\n\nexport enum Methods {\n  BACK_PRESSED = 'back_pressed',\n  ROUTING_CHANGED = 'routing_changed',\n  CLEAN_CACHE = 'clean_cache',\n  MOVE_TO_ROOT = 'move_to_root',\n  IOS_SWIPE = 'ios_swipe',\n}\n\nexport enum Path {\n  ROOT = 'root',\n  NESTED = 'nested',\n}\n\nexport enum ExpressFeatureName {\n  ADD_CONTACT = 'Add Contact',\n  CREATE_PERSONAL_CHAT = 'Create Personal Chat',\n  SEND_MESSAGE = 'Send Message to Group Chat or User',\n  GET_CONTACT = 'Get Contact',\n  OPEN_SMARTAPP = 'Open SmartApp',\n  OPEN_CLIENT_SETTINGS = 'Open Client Settings',\n  GET_CHATS = 'Get Chats',\n  OPEN_GROUP_CHAT = 'Open Group Chat',\n  SEND_BOT_COMMAND = 'Send Bot Command',\n  OPEN_CONTACT_CARD = 'Open Contact Card',\n}\n\nexport enum ClientEventMethod {\n  UPLOAD_FILE = 'upload_file',\n  UPLOAD_FILES = 'upload_files',\n}\n\nexport type GeneratorFunction = Generator<any, any, any>\n\nexport interface AppEvent {\n  ref?: string | null,\n  type: string,\n  payload: any,\n  files: any[] | null,\n}\n\nexport interface BotEvent {\n  method: BotFeatureMethod | 'menu'\n  params: any\n  files?: File[]\n  timeout?: number\n}\n\nexport interface ExpressEvent {\n  method: ExpressFeatureMethod\n  params: any\n}\n\nexport interface SendMessageActionPayload {\n  userHuid: string | null\n  groupChatId: string | null\n  messageBody: string\n  messageMeta?: {}\n}\n\nexport enum InputId {\n  TEXT = 'text',\n  COUNT = 'count',\n  DELAY = 'delay',\n  FILE = 'file',\n  FILES = 'files',\n  HUIDS = 'huids',\n  PHONE = 'phone',\n  NAME = 'name',\n  HUID = 'huid',\n  SMARTAPP_ID = 'appId',\n  MESSAGE = 'message',\n  GROUP_CHAT_ID = 'groupChatId',\n  USER_HUID = 'userHuid',\n  FILTER = 'filter',\n  BODY = 'body',\n  DATA = 'data',\n}\n\nexport enum InputLabel {\n  TEXT = 'Text',\n  COUNT = 'Count',\n  DELAY = 'Delay',\n  FILE = 'File',\n  FILES = 'Files',\n  HUIDS = 'Huids',\n  PHONE = 'Phone',\n  NAME = 'Name',\n  HUID = 'Huid',\n  SMARTAPP_ID = 'Smartapp ID',\n  MESSAGE = 'Message',\n  GROUP_CHAT_ID = 'Group chat id',\n  USER_HUID = 'User huid',\n  FILTER = 'Filter',\n  BODY = 'Body',\n  DATA = 'Data',\n}\n\nexport enum InputType {\n  INPUT_TEXT = 'INPUT_TEXT',\n  INPUT_NUMBER = 'INPUT_NUMBER',\n  FILE_PICKER = 'FILE_PICKER',\n  ARRAY_UUID = 'ARRAY_UUID',\n  UUID = 'UUID',\n}\n\nexport interface Input {\n  id: InputId | string\n  label: InputLabel\n  type: InputType\n}\n\nexport interface BotFeature {\n  method: BotFeatureMethod\n  name: string\n  uiElements: Input[]\n  icon?: string\n}\n\nexport type ExpressFeature = BotFeature | {\n  method: ExpressFeatureMethod\n  name: ExpressFeatureName\n  uiElements: Input[]\n  icon?: string\n}\n\nexport type BotFeatures = BotFeature[] | null\n\nexport interface BotMethodResponse {\n  type: EventType.SMARTAPP_RPC | string\n  files: File[]\n  payload: {\n    result: string\n    status: 'ok' | 'error'\n  }\n}\n\nexport type BotFeaturesResponse = BotMethodResponse & {\n  payload: {\n    result: BotFeature[]\n  }\n}\n\nexport interface ExpressMethodResponse {\n  ref?: string\n  payload: any\n}\n\nexport interface ExpressNotification {\n  ref: null\n  type: 'notification'\n  data: object\n}\n\nexport interface File {\n  type?: string\n  file?: string\n  fileMimeType?: string\n  fileName?: string\n  filePreview?: string\n  filePreviewHeight?: number\n  filePreviewWidth?: number\n  fileSize: number\n  fileHash?: string\n  fileEncryptionAlgo?: string\n  chunkSize?: number\n  fileId?: any\n  key?: object\n}\n\nexport interface Location {\n  latitude: string | null\n  longitude: string | null\n  timestamp: string | null\n}\n\nexport interface SelfProfile {\n  userHuid: string,\n  name: string,\n  avatar: string | null,\n  avatarPreview: string | null,\n  company: string | null,\n  department: string | null,\n  office: string | null,\n  manager: string | null,\n  managerHuid: string | null,\n  email: string | null,\n  phone: string | null,\n  description: string | null,\n  otherPhone: string | null,\n  ip_phone: string | null,\n  otherIpPhone: string | null,\n}\n\n\nexport interface UIState {\n  mainLoader: boolean\n  redirectPath: string\n  theme: string\n  showIosSwipeToast: boolean\n}\n\nexport interface BotState {\n  features: BotFeatures\n  response: BotMethodResponse | null\n  notifications: BotMethodResponse[] | null\n  staticFile: object\n}\n\nexport interface ClientState {\n  attachments: File[] | null\n  response: ExpressMethodResponse | null\n  meta: ExpressMethodResponse | null\n  notifications: ExpressNotification[] | null\n  location: Location | null\n  selfProfile: SelfProfile | null\n  connectionStatus: string | null\n  subscribedConnectionStatus: string | null\n  deeplinkUrl: string | null\n  storageData: any\n  unreadCounter: number\n}\n\nexport interface AppState {\n  ui: UIState\n  bot: BotState\n  client: ClientState\n  router: RouterState\n}\n","import {\n  BotFeature,\n  BotFeatureMethod,\n  ExpressFeature,\n  ExpressFeatureMethod,\n  ExpressFeatureName,\n  InputId,\n  InputLabel,\n  InputType,\n} from './types'\n\nexport const EXPRESS_NOTIFICATION_FEATURE = {\n  method: 'notification',\n  name: 'Express Notification',\n}\n\nexport const OPEN_SMART_APP_META_FEATURE = {\n  name: 'App Meta',\n  method: 'open_smart_meta_app',\n  field: 'openSmartAppMeta',\n}\n\nexport const OPEN_FILE_FEATURE = {\n  name: 'Open File',\n  method: 'open_file',\n}\n\nexport const REQUEST_LOCATION = {\n  name: 'Request Location',\n  method: 'request_location',\n}\n\nexport const SCAN_QR_FEATURE = {\n  name: 'Scan QR',\n  method: 'scan_qr',\n}\n\nexport const OPEN_WEB_PAGE_FEATURE = {\n  name: 'Open Web Page',\n  method: 'open-web-page',\n}\n\nexport const REQUEST_SELF_PROFILE_FEATURE = {\n  name: 'Request self profile',\n  method: 'request-self-profile',\n}\n\nexport const CLOSE_SMART_APP_FEATURE = {\n  name: 'Close SmartApp',\n  method: 'close-smartapp',\n}\n\nexport const FILE_PROXY = {\n  name: 'File proxy',\n  method: 'file-proxy',\n}\n\nexport const CONNECTION_STATUS = {\n  name: 'Connection status',\n  method: 'connection-status',\n}\n\nexport const MENU_ITEM_MESSAGE_META = {\n  name: 'Message meta from menu action',\n  method: 'menu-item-message-meta',\n}\n\nexport const MENU_EVENT: any = {\n  method: 'menu',\n  params: {\n    text: 'menu',\n  },\n}\n\nexport const CREATE_DEEPLINK = {\n  name: 'Create deeplink',\n  method: 'create-deeplink',\n}\n\nexport const IOS_SWIPE = {\n  method: 'ios-swipe',\n  name: 'iOS Swipe',\n}\n\nexport const OPEN_CHAT_MESSAGE = {\n  name: 'Open chat message',\n  method: 'open-chat-message',\n}\n\nexport const CLIENT_STORAGE = {\n  name: 'Client storage',\n  method: 'client-storage',\n}\n\nexport const HANDLE_DEEPLINK_FEATURE = {\n  name: 'Handle deeplink',\n  method: 'handle-deeplink',\n}\n\nexport const SEARCH_PHONEBOOK = {\n  name: 'Search phonebook',\n  method: 'search-phonebook',\n}\n\nexport const UNREAD_COUNTER_FEATURE = {\n  name: 'Unread counters',\n  method: 'unread-counters',\n}\n\nexport const LOCALE_FEATURE = {\n  name: 'Locale',\n  method: 'locale',\n}\n\nexport const INPUT_TYPE: Record<InputType, string> = {\n  INPUT_TEXT: 'text',\n  INPUT_NUMBER: 'number',\n  FILE_PICKER: 'file',\n  ARRAY_UUID: 'text',\n  UUID: 'text',\n}\n\n\nexport const EXPRESS_FEATURES: ExpressFeature[] = [\n  {\n    method: ExpressFeatureMethod.ADD_CONTACT,\n    name: ExpressFeatureName.ADD_CONTACT,\n    icon: \"perm_contact_calendar\",\n    uiElements: [\n      {\n        id: InputId.PHONE,\n        label: InputLabel.PHONE,\n        type: InputType.INPUT_TEXT,\n      },\n      {\n        id: InputId.NAME,\n        label: InputLabel.NAME,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.GET_CONTACT,\n    name: ExpressFeatureName.GET_CONTACT,\n    icon: \"perm_contact_calendar\",\n    uiElements: [\n      {\n        id: InputId.PHONE,\n        label: InputLabel.PHONE,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_CONTACT_CARD,\n    name: ExpressFeatureName.OPEN_CONTACT_CARD,\n    icon: \"perm_contact_calendar\",\n    uiElements: [\n      {\n        id: InputId.USER_HUID,\n        label: InputLabel.USER_HUID,\n        type: InputType.UUID,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.CREATE_PERSONAL_CHAT,\n    name: ExpressFeatureName.CREATE_PERSONAL_CHAT,\n    icon: \"chat_bubble_outline\",\n    uiElements: [\n      {\n        id: InputId.HUID,\n        label: InputLabel.HUID,\n        type: InputType.UUID,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_GROUP_CHAT,\n    name: ExpressFeatureName.OPEN_GROUP_CHAT,\n    icon: \"mark_chat_unread\",\n    uiElements: [\n      {\n        id: InputId.GROUP_CHAT_ID,\n        label: InputLabel.GROUP_CHAT_ID,\n        type: InputType.UUID,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_SMARTAPP,\n    name: ExpressFeatureName.OPEN_SMARTAPP,\n    icon: \"open_in_browser\",\n    uiElements: [\n      {\n        id: InputId.SMARTAPP_ID,\n        label: InputLabel.SMARTAPP_ID,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.SEND_MESSAGE,\n    name: ExpressFeatureName.SEND_MESSAGE,\n    icon: \"send\",\n    uiElements: [\n      {\n        id: InputId.MESSAGE,\n        label: InputLabel.MESSAGE,\n        type: InputType.INPUT_TEXT,\n      },\n      {\n        id: InputId.GROUP_CHAT_ID,\n        label: InputLabel.GROUP_CHAT_ID,\n        type: InputType.UUID,\n      },\n      {\n        id: InputId.USER_HUID,\n        label: InputLabel.USER_HUID,\n        type: InputType.UUID,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.SEND_BOT_COMMAND,\n    name: ExpressFeatureName.SEND_BOT_COMMAND,\n    icon: \"send\",\n    uiElements: [\n      {\n        id: InputId.USER_HUID,\n        label: InputLabel.USER_HUID,\n        type: InputType.UUID,\n      },\n      {\n        id: InputId.BODY,\n        label: InputLabel.BODY,\n        type: InputType.INPUT_TEXT,\n      },\n      {\n        id: InputId.DATA,\n        label: InputLabel.DATA,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_CLIENT_SETTINGS,\n    name: ExpressFeatureName.OPEN_CLIENT_SETTINGS,\n    icon: \"settings\",\n    uiElements: [],\n  },\n  {\n    method: ExpressFeatureMethod.GET_CHATS,\n    name: ExpressFeatureName.GET_CHATS,\n    icon: \"chat_bubble_outline\",\n    uiElements: [\n      {\n        id: InputId.FILTER,\n        label: InputLabel.FILTER,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n]\n\nexport const ECHO_STATIC_FILE_FEATURE: BotFeature = {\n  name: 'Echo static file',\n  method: BotFeatureMethod.ECHO_STATIC_FILE,\n  uiElements: [{\n    id: InputId.FILE,\n    type: InputType.FILE_PICKER,\n    label: InputLabel.FILE,\n  }]\n}\n\nexport const GUARANTEED_DELIVERY_FEATURE: BotFeature & { path: string } = {\n  name: 'Echo with guaranteed delivery',\n  method: BotFeatureMethod.ECHO,\n  path: 'guaranteed-delivery',\n  uiElements: [{\n    id: InputId.TEXT,\n    type: InputType.INPUT_TEXT,\n    label: InputLabel.TEXT,\n  }]\n}\n","import { Input } from '../types'\nimport parseISO from 'date-fns/parseISO'\nimport ru from 'date-fns/locale/ru'\nimport format from 'date-fns/format'\n\nexport interface FormValues {\n  [key: string]: string | undefined\n}\n\nexport const getFormInitialValues: (uiElements: Input[]) => FormValues = uiElements => {\n  return uiElements?.reduce((acc: FormValues, item) => {\n    acc[item.id] = undefined\n    return acc\n  }, {})\n}\n\nexport const dateFormat = (timestamp: string) => {\n  if (timestamp) {\n    let toISODate = parseISO(timestamp)\n    return format(toISODate, 'EEEE d LLLL y - H:mm', {\n      locale: ru,\n    })\n  }\n}\n\nexport const getQueryParam = (param: string) => {\n  const urlParams = new URLSearchParams(window.location.search)\n  return urlParams.get(param)\n}\n\nexport const setupTheme = () => {\n  const theme = getQueryParam('theme') || 'default'\n\n  document.documentElement.setAttribute('theme', theme)\n}\n","import { createAction } from 'redux-actions'\nimport { BotEvent, BotFeatures, BotMethodResponse, ExpressMethodResponse, File } from '../../types'\n\nexport const LOAD_FEATURES = 'LOAD_FEATURES'\nexport const LOAD_FEATURES_SUCCESS = 'LOAD_FEATURES_SUCCESS'\nexport const RESET_RESPONSE = 'RESET_RESPONSE'\nexport const SEND_FEATURE_BOT_EVENT = 'SEND_FEATURE_BOT_EVENT'\nexport const SEND_FEATURE_BOT_EVENT_SUCCESS = 'SEND_FEATURE_BOT_EVENT_SUCCESS'\nexport const SET_STATIC_FILE = 'SET_STATIC_FILE'\nexport const ECHO_STATIC_FILE = 'ECHO_STATIC_FILE'\n\nexport const loadFeatures = createAction(LOAD_FEATURES, () => {\n})\nexport const loadFeaturesSuccess = createAction(LOAD_FEATURES_SUCCESS, (features: BotFeatures) => features)\nexport const resetFeatures = createAction(RESET_RESPONSE, () => {\n})\nexport const sendFeatureBotEvent = createAction(SEND_FEATURE_BOT_EVENT, (botEvent: BotEvent) => botEvent)\nexport const sendFeatureBotEventSuccess = createAction(\n  SEND_FEATURE_BOT_EVENT_SUCCESS,\n  (response: BotMethodResponse | ExpressMethodResponse | null) => response,\n)\nexport const setStaticFile = createAction(SET_STATIC_FILE, (staticFile: any) => staticFile)\nexport const echoStaticFile = createAction(ECHO_STATIC_FILE, (file: File) => file)\n\nexport type loadFeaturesSuccessActionType = ReturnType<typeof loadFeaturesSuccess>\nexport type sendFeatureBotEventSuccessActionType = ReturnType<typeof sendFeatureBotEventSuccess>\nexport type setStaticFileActionType = ReturnType<typeof setStaticFile>\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPlus(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M13 11V4h-2v7H4v2h7v7h2v-7h7v-2h-7z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.97a40cd5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgClearInput(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M13 11V3h-2v8H3v2h8v8h2v-8h8v-2h-8z\",\n    transform: \"rotate(45 12 12)\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgClearInput);\nexport default __webpack_public_path__ + \"static/media/clear-input.6a69fb5e.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgFile(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 22 26\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    transform: \"translate(-1)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#595959\",\n    d: \"M5 0C3.73 0 2.44 1.225 2.5 2.407V22.63c-.06 1.784 1.23 3.007 2.5 2.89h15c1.71.117 3-1.106 3-2.89V6.26L16 0H5zm0 24.556c-.298-.117-1.298-.59-1.5-1.445V2.41C3.702 2.148 4.702 1.2 5 .963h10.5v3.852c.01 1.467.903 2.315 2 1.926H22v15.89c-.262.864-.76 1.81-2 1.928H5z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18.5,\n    height: 9.148,\n    x: 1,\n    y: 12.519,\n    fill: \"#5C5C5C\",\n    rx: 2\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    fill: \"#FFF\",\n    fontSize: 5.5,\n    fontWeight: 600\n  }, /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 4.302,\n    y: 19\n  }, \"\\n        FILE\\n      \")))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFile);\nexport default __webpack_public_path__ + \"static/media/file.1a445bcf.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCopy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M10.667.667h-8c-.734 0-1.334.6-1.334 1.333v9.333h1.334V2h8V.667zm2 2.666H5.333C4.6 3.333 4 3.933 4 4.667V14c0 .733.6 1.333 1.333 1.333h7.334c.733 0 1.333-.6 1.333-1.333V4.667c0-.734-.6-1.334-1.333-1.334zm0 10.667H5.333V4.667h7.334V14z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.55b37fcd.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useRef } from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport { ReactComponent as CopyIcon } from '../../../assets/copy.svg'\nimport JSONEditor from 'jsoneditor'\nimport 'jsoneditor/dist/jsoneditor.min.css'\nimport './JsonViewer.scss'\n\nexport default function JsonViewer(props) {\n  const container = useRef(null)\n  const botResponse = props?.botResponse\n\n  const copyToClipboardJson = obj => {\n    const container = document.createElement('textarea')\n\n    container.innerHTML = JSON.stringify(obj, null, '  ')\n    document.body.appendChild(container)\n\n    container.select()\n    document.execCommand('copy')\n    document.body.removeChild(container)\n  }\n\n  useEffect(() => {\n    const editor = new JSONEditor(container.current, { mode: 'view', enableTransform: true })\n\n    if (botResponse) editor.set(botResponse)\n\n    const button = document.createElement('button')\n    button.className = 'copy-to-clipboard'\n    button.innerHTML = ReactDOMServer.renderToStaticMarkup(<CopyIcon height='22' width='22' />)\n    button.addEventListener('click', () => copyToClipboardJson(botResponse))\n    button.setAttribute('title', 'Copy To Clipboard')\n\n    const menu = document.querySelector('.jsoneditor-menu')\n    const search = document.querySelector('.jsoneditor-menu .jsoneditor-search')\n\n    menu.insertBefore(button, search)\n\n    return () => editor.destroy()\n  }, [botResponse])\n\n  return <div className='json-viewer' ref={container} />\n}\n","import { createAction } from 'redux-actions'\nimport {\n  ExpressEvent,\n  ExpressMethodResponse,\n  ExpressNotification,\n  File,\n  Location,\n  SelfProfile,\n  SendMessageActionPayload,\n} from '../../types'\nimport { SubscriptionPayload } from '@expressms/smartapp-sdk/build/main/types'\nimport { StorageValueType } from '@expressms/smartapp-sdk/build/main/types'\n\nexport const UPLOAD_FILE = 'UPLOAD_FILE'\nexport const UPLOAD_FILE_SUCCESS = 'UPLOAD_FILE_SUCCESS'\nexport const UPLOAD_FILES = 'UPLOAD_FILES'\nexport const UPLOAD_FILES_SUCCESS = 'UPLOAD_FILES_SUCCESS'\nexport const REMOVE_FILE = 'REMOVE_FILE'\nexport const REMOVE_FILE_SUCCESS = 'REMOVE_FILE_SUCCESS'\nexport const RESET_ATTACHMENTS = 'RESET_ATTACHMENTS'\nexport const SEND_EXPRESS_EVENT = 'SEND_EXPRESS_EVENT'\nexport const SEND_MESSAGE_EXPRESS_EVENT = 'SEND_MESSAGE_EXPRESS_EVENT'\nexport const SEND_EXPRESS_EVENT_SUCCESS = 'SEND_EXPRESS_EVENT_SUCCESS'\nexport const SET_EXPRESS_NOTIFICATION_SUCCESS = 'SET_NOTIFICATION_SUCCESS'\nexport const RESET_EXPRESS_NOTIFICATION_SUCCESS = 'RESET_EXPRESS_NOTIFICATION_SUCCESS'\nexport const RESET_EXPRESS_RESPONSE = 'RESET_EXPRESS_RESPONSE'\nexport const SEND_EXPRESS_READY_EVENT = 'SEND_EXPRESS_READY_EVENT'\nexport const SET_META = 'SET_META'\nexport const ECHO_STATIC_FILE = 'ECHO_STATIC_FILE'\nexport const REQUEST_LOCATION = 'REQUEST_LOCATION'\nexport const SET_LOCATION = 'SET_LOCATION'\nexport const REQUEST_SELF_PROFILE = 'REQUEST_SELF_PROFILE'\nexport const SET_SELF_PROFILE = 'SET_SELF_PROFILE'\nexport const CLOSE_SMART_APP = 'CLOSE_SMART_APP'\nexport const GET_CONNECTION_STATUS = 'GET_CONNECTION_STATUS'\nexport const SET_CONNECTION_STATUS = 'SET_CONNECTION_STATUS'\nexport const SUBSCRIBE_CONNECTION_STATUS = 'SUBSCRIBE_CONNECTION_STATUS'\nexport const UNSUBSCRIBE_CONNECTION_STATUS = 'UNSUBSCRIBE_CONNECTION_STATUS'\nexport const CONNECTION_STATUS_CHANGED = 'CONNECTION_STATUS_CHANGED'\nexport const CREATE_DEEPLINK = 'CREATE_DEEPLINK'\nexport const SET_DEEPLINK_URL = 'SET_DEEPLINK_URL'\nexport const OPEN_CHAT_MESSAGE = 'OPEN_CHAT_MESSAGE'\nexport const CLIENT_STORAGE_SET = 'CLIENT_STORAGE_SET'\nexport const CLIENT_STORAGE_GET = 'CLIENT_STORAGE_GET'\nexport const CLIENT_STORAGE_LOADED = 'CLIENT_STORAGE_LOADED'\nexport const CLIENT_STORAGE_REMOVE = 'CLIENT_STORAGE_REMOVE'\nexport const CLIENT_STORAGE_CLEAR = 'CLIENT_STORAGE_CLEAR'\nexport const HANDLE_DEEPLINK = 'HANDLE_DEEPLINK'\nexport const SEARCH_CORPORATE_PHONEBOOK = 'SEARCH_CORPORATE_PHONEBOOK'\nexport const SEARCH_LOCAL_PHONEBOOK = 'SEARCH_LOCAL_PHONEBOOK'\nexport const GET_UNREAD_COUNTER = 'GET_UNREAD_COUNTER'\nexport const SET_UNREAD_COUNTER = 'SET_UNREAD_COUNTER'\nexport const SUBSCRIBE_UNREAD_COUNTER = 'SUBSCRIBE_UNREAD_COUNTER'\nexport const UNSUBSCRIBE_UNREAD_COUNTER = 'UNSUBSCRIBE_UNREAD_COUNTER'\n\nexport const uploadFile = createAction(UPLOAD_FILE)\nexport const uploadFileSuccess = createAction(UPLOAD_FILE_SUCCESS, (file: File) => file)\nexport const uploadFiles = createAction(UPLOAD_FILES, (type: string = '') => ({ type }))\nexport const uploadFilesSuccess = createAction(UPLOAD_FILES_SUCCESS, (files: File[]) => files)\nexport const removeFile = createAction(REMOVE_FILE, (id: number) => id)\nexport const removeFileSuccess = createAction(REMOVE_FILE_SUCCESS, (id: number) => id)\nexport const resetAttachments = createAction(RESET_ATTACHMENTS)\nexport const sendExpressEvent = createAction(SEND_EXPRESS_EVENT, (expressEvent: ExpressEvent) => expressEvent)\nexport const sendMessageExpressEvent = createAction(\n  SEND_MESSAGE_EXPRESS_EVENT,\n  (payload: SendMessageActionPayload) => payload\n)\nexport const sendExpressEventSuccess = createAction(\n  SEND_EXPRESS_EVENT_SUCCESS,\n  (response: ExpressMethodResponse | null) => response\n)\nexport const setExpressNotificationSuccess = createAction(\n  SET_EXPRESS_NOTIFICATION_SUCCESS,\n  (notification: ExpressNotification | null) => notification\n)\nexport const resetExpressNotificationSuccess = createAction(RESET_EXPRESS_NOTIFICATION_SUCCESS)\nexport const setMeta = createAction(SET_META, (meta: ExpressMethodResponse | null) => meta)\nexport const resetExpressResponse = createAction(RESET_EXPRESS_RESPONSE)\nexport const sendReadyEvent = createAction(SEND_EXPRESS_READY_EVENT)\nexport const setLocation = createAction(SET_LOCATION, (location: Location) => location)\nexport const requestLocation = createAction(REQUEST_LOCATION)\nexport const echoStaticFile = createAction(ECHO_STATIC_FILE)\nexport const requestSelfProfile = createAction(REQUEST_SELF_PROFILE)\nexport const setSelfProfile = createAction(SET_SELF_PROFILE, (selfProfile: SelfProfile) => selfProfile)\nexport const closeSmartApp = createAction(CLOSE_SMART_APP)\nexport const getConnectionStatus = createAction(GET_CONNECTION_STATUS)\nexport const setConnectionStatus = createAction(SET_CONNECTION_STATUS, (connectionStatus: string) => connectionStatus)\nexport const subscribeConnectionStatus = createAction(SUBSCRIBE_CONNECTION_STATUS)\nexport const unsubscribeConnectionStatus = createAction(UNSUBSCRIBE_CONNECTION_STATUS)\nexport const subscribeUnreadCounter = createAction(SUBSCRIBE_UNREAD_COUNTER, (id: string, type: SubscriptionPayload['type']) => ({\n  id,\n  type,\n}))\nexport const unsubscribeUnreadCounter = createAction(UNSUBSCRIBE_UNREAD_COUNTER, (id: string, type: SubscriptionPayload['type']) => ({\n  id,\n  type,\n}))\nexport const connectionStatusChanged = createAction(\n  CONNECTION_STATUS_CHANGED,\n  (connectionStatus: string) => connectionStatus\n)\nexport const createDeeplink = createAction(\n  CREATE_DEEPLINK,\n  (appId: string, meta: Array<{ key: string; value: null | boolean | string | number }>) => ({\n    appId,\n    meta,\n  })\n)\nexport const setDeeplinkUrl = createAction(SET_DEEPLINK_URL, (deeplinkUrl: string) => deeplinkUrl)\nexport const openChatMessage = createAction(\n  OPEN_CHAT_MESSAGE,\n  ({ groupChatId, syncId }: { groupChatId: string; syncId: string }) => ({\n    groupChatId,\n    syncId,\n  })\n)\n// TODO: fixme\nexport const clientStorageSet = createAction(CLIENT_STORAGE_SET, (key: string, value: StorageValueType) => ({\n  key,\n  value,\n}))\nexport const clientStorageGet = createAction(CLIENT_STORAGE_GET, (key: string) => key)\nexport const clientStorageLoaded = createAction(CLIENT_STORAGE_LOADED, (storageData: any) => storageData)\nexport const clientStorageRemove = createAction(CLIENT_STORAGE_REMOVE, (key: string) => key)\nexport const clientStorageClear = createAction(CLIENT_STORAGE_CLEAR)\nexport const handleDeeplink = createAction(HANDLE_DEEPLINK, (deeplink: string) => deeplink)\nexport const searchCorporatePhonebook = createAction(SEARCH_CORPORATE_PHONEBOOK, (filter: string) => filter)\nexport const searchLocalPhonebook = createAction(SEARCH_LOCAL_PHONEBOOK, (filter: string) => filter)\nexport const getUnreadCounter = createAction(GET_UNREAD_COUNTER, (id: string, type: SubscriptionPayload['type']) => ({\n  id,\n  type,\n}))\nexport const setUnreadCounter = createAction(SET_UNREAD_COUNTER, (counter: number) => counter)\n\nexport type uploadFileActionType = ReturnType<typeof uploadFile>\nexport type uploadFileSuccessActionType = ReturnType<typeof uploadFileSuccess>\nexport type uploadFilesActionType = ReturnType<typeof uploadFiles>\nexport type uploadFilesSuccessActionType = ReturnType<typeof uploadFilesSuccess>\nexport type removeFileActionType = ReturnType<typeof removeFile>\nexport type removeFileSuccessActionType = ReturnType<typeof removeFileSuccess>\nexport type sendExpressEventActionType = ReturnType<typeof sendExpressEvent>\nexport type sendMessageExpressEventActionType = ReturnType<typeof sendMessageExpressEvent>\nexport type sendExpressEventSuccessActionType = ReturnType<typeof sendExpressEventSuccess>\nexport type setExpressNotificationSuccessActionType = ReturnType<typeof setExpressNotificationSuccess>\nexport type setMetaActionType = ReturnType<typeof setMeta>\nexport type setLocationActionType = ReturnType<typeof setLocation>\nexport type setSelfProfileType = ReturnType<typeof setSelfProfile>\nexport type setConnectionStatusType = ReturnType<typeof setConnectionStatus>\nexport type connectionStatusChangedType = ReturnType<typeof connectionStatusChanged>\nexport type setDeeplinkUrlType = ReturnType<typeof setDeeplinkUrl>\nexport type createDeeplinkActionType = ReturnType<typeof createDeeplink>\nexport type openChatMessageActionType = ReturnType<typeof openChatMessage>\nexport type clientStorageLoadedActionType = ReturnType<typeof clientStorageLoaded>\nexport type clientStorageSetActionType = ReturnType<typeof clientStorageSet>\nexport type clientStorageGetActionType = ReturnType<typeof clientStorageGet>\nexport type clientStorageRemoveActionType = ReturnType<typeof clientStorageRemove>\nexport type handleDeeplinkActionType = ReturnType<typeof handleDeeplink>\nexport type searchCorporatePhonebookActionType = ReturnType<typeof searchCorporatePhonebook>\nexport type searchLocalPhonebookActionType = ReturnType<typeof searchLocalPhonebook>\nexport type getUnreadCounterActionType = ReturnType<typeof getUnreadCounter>\nexport type setUnreadCounterActionType = ReturnType<typeof setUnreadCounter>\nexport type subscribeUnreadCounterActionType = ReturnType<typeof subscribeUnreadCounter>\nexport type unsubscribeUnreadCounterActionType = ReturnType<typeof unsubscribeUnreadCounter>\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getAttachments = createSelector([(state: AppState) => state.client.attachments], features => features)\n\nexport const getExpressResponse = createSelector([(state: AppState) => state.client.response], response => response)\n\nexport const getMeta = createSelector([(state: AppState) => state.client.meta], meta => meta)\n\nexport const getLocation = createSelector(\n  [(state: AppState) => state.client.location],\n\tlocation => location\n)\n\nexport const getExpressNotifications = createSelector(\n  [(state: AppState) => state.client.notifications],\n\tnotifications => notifications\n)\n\nexport const getSelfProfile = createSelector(\n  [(state: AppState) => state.client.selfProfile],\n\tselfProfile => selfProfile\n)\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.828 11l5.586-5.586L12 4l-8 8 8 8 1.414-1.414L7.828 13H20v-2z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.fa74ab51.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBotxIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 12 12\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.379 7.017v2.775h-.55A.816.816 0 0 1 0 8.989V7.427c0-.443.371-.803.829-.803h.566c-.01.13-.016.261-.016.393zm9.792-.393c.458 0 .829.36.829.803V8.99a.816.816 0 0 1-.829.803h-.55V7.017c0-.132-.006-.263-.016-.393h.566zM10.047 9.873v-2.82c0-.132-.006-.263-.018-.393C9.857 4.651 8.377 3.043 6.5 2.8h-.997c-1.88.244-3.36 1.853-3.532 3.863-.01.129-.017.26-.017.392v4.754h8.094V9.873zm-5.998-.66c-.608 0-1.101-.522-1.101-1.167 0-.644.493-1.166 1.1-1.166.609 0 1.102.522 1.102 1.166 0 .645-.493 1.167-1.101 1.167zm2.96-1.167c0-.644.493-1.166 1.1-1.166.609 0 1.102.522 1.102 1.166 0 .645-.493 1.167-1.101 1.167s-1.101-.522-1.101-1.167z\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBotxIcon);\nexport default __webpack_public_path__ + \"static/media/botx-icon.cf9274ad.svg\";\nexport { ForwardRef as ReactComponent };","import { Link } from 'react-router-dom'\nimport { ReactComponent as ArrowLeft } from '../../../assets/arrow-left.svg'\nimport './FeaturePageHeader.scss'\n\nexport default function FeaturePageHeader({ name }) {\n  return (\n    <div className='feature-page__header'>\n      <Link className='btn--arrow-left' to='/' id='back-nav-link'>\n        <ArrowLeft className='icon--arrow-left' height={24} width={24} />\n      </Link>\n      <div className='feature-page__info'>\n        <span className='feature-page__title'>{name} method</span>\n      </div>\n    </div>\n  )\n}\n","import {\n  BotFeature,\n  BotFeatureMethod,\n  ExpressFeature,\n  ExpressFeatureMethod,\n  Input,\n  InputId,\n  InputLabel,\n  InputType,\n} from '../../types'\nimport './FeaturePage.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { GUARANTEED_DELIVERY_FEATURE, INPUT_TYPE } from '../../constants'\nimport { useFormik } from 'formik'\nimport { FormValues, getFormInitialValues } from '../../helpers'\nimport { getFeatureBotResponse } from '../../redux/selectors/bot'\nimport { resetFeatures, sendFeatureBotEvent, sendFeatureBotEventSuccess } from '../../redux/actions/bot'\nimport { useEffect, useMemo, useState } from 'react'\nimport { ReactComponent as PlusIcon } from '../../assets/plus.svg'\nimport { ReactComponent as RemoveIcon } from '../../assets/clear-input.svg'\nimport { ReactComponent as FileIcon } from '../../assets/file.svg'\nimport JsonViewer from '../../components/ui/json-editor/JsonViewer'\nimport classnames from 'classnames'\nimport {\n  removeFileSuccess,\n  resetAttachments,\n  resetExpressResponse,\n  sendExpressEvent,\n  sendExpressEventSuccess,\n  sendMessageExpressEvent,\n  uploadFile,\n  uploadFiles,\n} from '../../redux/actions/client'\nimport { getAttachments, getExpressResponse } from '../../redux/selectors/client'\nimport { ReactMarkdown } from 'react-markdown/lib/react-markdown'\nimport FeaturePageHeader from '../../components/ui/feature-page-header/FeaturePageHeader'\nimport {\n  getChats,\n  openClientSettings,\n  openContactCard,\n  openGroupChat,\n  sendBotCommand,\n} from '@expressms/smartapp-sdk'\n\nexport default function FeaturePage({ name, method, uiElements = [] }: BotFeature | ExpressFeature) {\n  const dispatch = useDispatch()\n  const botResponse = useSelector(getFeatureBotResponse)\n  const expressResponse = useSelector(getExpressResponse)\n  const attachments = useSelector(getAttachments)\n\n  const [inputs, setInputs] = useState<Input[]>([])\n  const [inputError, setInputError] = useState('')\n  const [isJSONViewer, setIsJSONViewer] = useState(false)\n\n  const isAllowNewInputs = method === BotFeatureMethod.SEARCH_USERS\n  const isFilesMethod = [BotFeatureMethod.ECHO_FILE, BotFeatureMethod.ECHO_FILES].includes(method as BotFeatureMethod)\n  const isUsersMethod = BotFeatureMethod.SEARCH_USERS === method\n  const isExpressMethod = Object.values(ExpressFeatureMethod).includes(method as ExpressFeatureMethod)\n\n  const handleClickPlus = () => {\n    const last = inputs[inputs.length - 1]\n    const { id } = last\n    const next: Input = {\n      ...last,\n      id: id.includes(InputId.HUIDS) ? `${id}${inputs.length}` : id,\n    }\n\n    setInputs(inputs => [...inputs, next])\n  }\n\n  const handleFilesSubmit = () => {\n    if (attachments) {\n      const botFeatureMethod = method as BotFeatureMethod\n\n      dispatch(\n        sendFeatureBotEvent({\n          method: botFeatureMethod,\n          params: {},\n          files: attachments,\n        }),\n      )\n    }\n  }\n\n  const handleOpenGroupChat = async (formValues: FormValues) => {\n    if (!filterFormValues(formValues).length) return\n\n    await openGroupChat({ groupChatId: formValues?.groupChatId })\n  }\n\n  const handleGetChats = async (formValues: FormValues) => {\n    const chats = await getChats({ filter: formValues?.filter })\n    dispatch(sendExpressEventSuccess(chats))\n  }\n\n  const handleSendBotCommand = async (formValues: FormValues) => {\n    const result = await sendBotCommand(\n      {\n        userHuid: formValues?.userHuid,\n        data: formValues?.data ? {\n          command: formValues?.data,\n        } : null,\n        body: formValues?.body,\n      },\n    )\n    dispatch(sendExpressEventSuccess(result))\n  }\n\n  const handleOpenContactCard = async (formValues: FormValues) => {\n    const response = await openContactCard({ userHuid: formValues?.userHuid })\n    if (response) dispatch(sendExpressEventSuccess(response))\n  }\n\n  const handleSendMessage = (formValues: FormValues) => {\n    if (!filterFormValues(formValues).length) return\n\n    const { userHuid, groupChatId, message } = formValues\n    dispatch(\n      sendMessageExpressEvent({\n        userHuid,\n        groupChatId,\n        messageBody: message,\n        messageMeta: {},\n      }),\n    )\n  }\n\n  const handleEchoWithGuaranteedDelivery = (formValues: FormValues) => {\n    if (!filterFormValues(formValues).length) return\n\n    const event = {\n      method: BotFeatureMethod.ECHO,\n      params: formValues,\n      guaranteed_delivery_required: true\n    }\n\n    dispatch(sendFeatureBotEvent(event))\n  }\n\n  const handleDefault = (formValues: FormValues) => {\n    if (!filterFormValues(formValues).length) return\n\n    const event = {\n      method: method as ExpressFeatureMethod,\n      params: formValues,\n    }\n\n    dispatch(sendExpressEvent(event))\n  }\n\n  const handleFormSubmitForExpressMethod = async (formValues: FormValues) => {\n    switch (method) {\n      case ExpressFeatureMethod.SEND_MESSAGE:\n        handleSendMessage(formValues)\n        break\n      case ExpressFeatureMethod.OPEN_CLIENT_SETTINGS:\n        openClientSettings()\n        break\n      case ExpressFeatureMethod.GET_CHATS:\n        await handleGetChats(formValues)\n        break\n      case ExpressFeatureMethod.OPEN_GROUP_CHAT: {\n        await handleOpenGroupChat(formValues)\n        break\n      }\n      case ExpressFeatureMethod.SEND_BOT_COMMAND: {\n        await handleSendBotCommand(formValues)\n        break\n      }\n      case ExpressFeatureMethod.OPEN_CONTACT_CARD: {\n        await handleOpenContactCard(formValues)\n        break\n      }\n      default:\n        handleDefault(formValues)\n    }\n  }\n\n  const filterFormValues = useMemo(() => (\n    formValues: FormValues) => Object.values(formValues).filter(value => value),\n    [],\n  )\n\n  const handleFormSubmitForBotMethod = (formValues: FormValues) => {\n    const values = filterFormValues(formValues)\n    if (!values.length) return\n\n    if (name === GUARANTEED_DELIVERY_FEATURE.name) {\n      handleEchoWithGuaranteedDelivery(formValues)\n      return\n    }\n\n    const event = {\n      method: method as BotFeatureMethod,\n      params: isUsersMethod ? { huids: values } : formValues,\n    }\n\n    dispatch(sendFeatureBotEvent(event))\n  }\n\n  const handleFormSubmit = (formValues: FormValues) => {\n    if (isExpressMethod) {\n      handleFormSubmitForExpressMethod(formValues)\n    } else {\n      handleFormSubmitForBotMethod(formValues)\n    }\n  }\n\n  const handleUploadFilesClick = () => {\n    if (method === BotFeatureMethod.ECHO_FILE) {\n      dispatch(uploadFile())\n    } else if (method === BotFeatureMethod.ECHO_FILES) {\n      dispatch(uploadFiles())\n    }\n  }\n\n  const handleRemoveFile = (fileId: number) => {\n    dispatch(removeFileSuccess(fileId))\n\n    if (attachments?.length === 1) dispatch(sendFeatureBotEventSuccess(null))\n  }\n\n  const toggleIsJSONViewer = () => setIsJSONViewer(!isJSONViewer)\n\n  const formik = useFormik({\n    initialValues: getFormInitialValues(inputs),\n    onSubmit: handleFormSubmit,\n  })\n\n  const getIsSubmitButtonDisabled = () => {\n    if (method === ExpressFeatureMethod.GET_CHATS) return false\n    return isFilesMethod ? !attachments?.length : !Object.values(formik.values).filter(value => value).length\n  }\n\n  useEffect(() => {\n    const inputs: Input[] = uiElements.map((input, index) => ({\n      ...input,\n      id: input.id.includes(InputId.HUIDS) ? `${input.id}${index}` : input.id,\n    }))\n\n    setInputs(inputs)\n    return () => {\n      dispatch(resetFeatures())\n      dispatch(resetAttachments())\n      dispatch(resetExpressResponse())\n    }\n  }, [uiElements, dispatch])\n\n  const renderFilesMethodComponent = () => (\n    <div className='feature-page__form'>\n      <span className='feature-page__title'>\n        {method === BotFeatureMethod.ECHO_FILE ? InputLabel.FILE : InputLabel.FILES}\n      </span>\n      <button className='btn--attach' onClick={handleUploadFilesClick}>\n        {method === BotFeatureMethod.ECHO_FILE ? 'Attach file' : 'Attach files'}\n      </button>\n      {!!attachments?.length && (\n        <div className='attachments'>\n          {attachments.map((attachment, idx) => (\n            <span className='attachments__item' key={attachment.fileId}>\n              <span>{attachment.fileName}</span>\n              <RemoveIcon\n                width={20}\n                height={20}\n                className='btn--remove-attachment'\n                onClick={() => handleRemoveFile(attachment.fileId)}\n                id={`remove-file-${idx + 1}`}\n              />\n            </span>\n          ))}\n        </div>\n      )}\n      <div className='form-buttons'>\n        <button\n          className={classnames({\n            'btn--submit': true,\n            'btn--submit-disabled': getIsSubmitButtonDisabled(),\n          })}\n          onClick={handleFilesSubmit}\n          disabled={getIsSubmitButtonDisabled()}\n          type='button'\n          id='files-submit'\n        >\n          Submit\n        </button>\n      </div>\n    </div>\n  )\n\n  const renderTextMethodComponent = () => {\n    const getIsInputError = ({ id, type }) => {\n      const isUuid = (uuid: string) => /[0-9a-fA-F-]{36}/.test(uuid)\n\n      const isPhone = (phone: string) =>\n        /(^8|7|\\+7)((\\d{10})|(\\s\\(\\d{3}\\)\\s\\d{3}\\s\\d{2}\\s\\d{2}))/.test(phone)\n\n      const isNotEmpty = formik.values[id]\n\n      if ((isUsersMethod || type === InputType.UUID) && isNotEmpty) {\n        return !isUuid(formik.values[id])\n      } else if (id === InputId.PHONE) {\n        return !isPhone(formik.values[id])\n      }\n    }\n\n    return (\n      !!inputs?.length && (\n        <form className='feature-page__form' onSubmit={formik.handleSubmit}>\n          {inputs.map(({ id, type, label }, index) => {\n            const inputType = INPUT_TYPE[type]\n\n            const isShowLabel = isUsersMethod ? index === 0 : true\n\n            return (\n              <div key={id}>\n                {isShowLabel && <span className='feature-page__title'>{label}</span>}\n                <input\n                  className={classnames({\n                    input: true,\n                    'input--error': getIsInputError({ id, type }),\n                  })}\n                  onChange={formik.handleChange}\n                  value={formik.values[id] || ''}\n                  type={inputType}\n                  multiple={id === InputId.FILES}\n                  pattern={inputType === 'number' ? '[0-9]*' : null}\n                  id={id}\n                  min={0}\n                />\n                {inputType === INPUT_TYPE.INPUT_TEXT && formik.values[id] && (\n                  <RemoveIcon\n                    className='btn--clear-input'\n                    onClick={() => {\n                      formik.setFieldValue(id, '')\n                      inputError && setInputError('')\n                    }}\n                    height={20}\n                    width={20}\n                    id={`${id}.field-clear`}\n                  />\n                )}\n              </div>\n            )\n          })}\n          <div className='form-buttons'>\n            <button\n              className={classnames({\n                'btn--submit': true,\n                'btn--submit-disabled': getIsSubmitButtonDisabled(),\n              })}\n              disabled={getIsSubmitButtonDisabled()}\n              type='submit'\n              id='submit'\n            >\n              Submit\n            </button>\n            {isAllowNewInputs && (\n              <PlusIcon\n                title='Add new input'\n                className='btn--plus'\n                onClick={handleClickPlus}\n                height={24}\n                width={24}\n              />\n            )}\n          </div>\n        </form>\n      )\n    )\n  }\n\n  const renderBotResponse = () => {\n    const response = botResponse?.payload?.result as any\n\n    return (\n      <>\n        <div className='response-markdown'>\n          <ReactMarkdown>\n            {method === BotFeatureMethod.ECHO ?\n              ('text: ' + response?.replaceAll?.('\\n', '\\n\\r')) ||\n              (response?.replaceAll?.('\\n', '\\n\\r')) + '\\n\\r' +\n              (response?.textLength &&\n                'text length: ' + response?.textLength) :\n              (response?.replaceAll?.('\\n', '\\n\\r'))\n            }\n          </ReactMarkdown>\n        </div>\n        {method === BotFeatureMethod.ECHO_FILES && (\n          <div className='response-files'>\n            Files:\n            {botResponse?.files?.map(() => (\n              <FileIcon className='response-files__file' height={20} width={20} />\n            ))}\n          </div>\n        )}\n        {botResponse && (\n          <JsonViewer\n            isJSONViewer={isJSONViewer}\n            botResponse={botResponse}\n            toggleIsJSONViewer={toggleIsJSONViewer}\n          />\n        )}\n      </>\n    )\n  }\n\n  const renderExpressResponse = () => {\n    return expressResponse && (\n      <JsonViewer\n        botResponse={expressResponse?.payload}\n        id='response'\n      />\n    )\n  }\n\n  return (\n    <>\n      <div className=\"feature-page\">\n        <FeaturePageHeader name={name} />\n        {isFilesMethod ? renderFilesMethodComponent() : renderTextMethodComponent()}\n      </div>\n      {botResponse && renderBotResponse()}\n      {renderExpressResponse()}\n    </>\n  )\n}\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { EXPRESS_NOTIFICATION_FEATURE } from '../../constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getExpressNotifications } from '../../redux/selectors/client'\nimport './ExpressNotifications.scss'\nimport { resetExpressNotificationSuccess } from '../../redux/actions/client'\n\nexport default function ExpressNotifications() {\n  const dispatch = useDispatch()\n  const expressNotifications = useSelector(getExpressNotifications)\n  const handleClear = () => {\n    dispatch(resetExpressNotificationSuccess())\n  }\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={EXPRESS_NOTIFICATION_FEATURE.name} />\n        <div className='feature-page__notifications'>\n          {!!expressNotifications.length ? (\n            <>\n              <div\n                className='notifications__clear-button'\n                onClick={handleClear}\n                title='Clear notifications'\n              >\n                Clear\n              </div>\n              {expressNotifications.map((item, i) => (\n                <div className='notifications__item' key={i}>\n                  {JSON.stringify(item?.data, null, 2)}\n                </div>\n              ))}\n            </>\n          ) : (\n            <div className='feature-page__notifications-placeholder'>\n              New notifications will appear here...\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  )\n}\n","import { createAction } from 'redux-actions'\n\nexport const SET_MAIN_LOADER = 'SET_MAIN_LOADER'\nexport const SET_REDIRECT_PATH = 'SET_REDIRECT_PATH'\nexport const SET_SHOW_IOS_SWIPE_TOAST = 'SET_SHOW_IOS_SWIPE_TOAST'\n\nexport const setMainLoader = createAction(SET_MAIN_LOADER, (mainLoader: boolean) => mainLoader)\nexport const setRedirectPath = createAction(SET_REDIRECT_PATH, (redirectPath: string) => redirectPath)\nexport const setShowIosSwipeToast = createAction(\n  SET_SHOW_IOS_SWIPE_TOAST,\n  (showIosSwipeToast: boolean) => showIosSwipeToast\n)\n\nexport type setMainLoaderActionType = ReturnType<typeof setMainLoader>\nexport type setRedirectPathActionType = ReturnType<typeof setRedirectPath>\nexport type setShowIosSwipeToastActionType = ReturnType<typeof setShowIosSwipeToast>","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\nimport { setRedirectPath } from '../../redux/actions/ui'\nimport { getMeta } from '../../redux/selectors/client'\nimport { setMeta } from '../../redux/actions/client'\nimport JsonViewerEditor from '../ui/json-editor/JsonViewer'\n\nexport default function MetaPage({ name }) {\n  const dispatch = useDispatch()\n  const meta = useSelector(getMeta)\n\n  useEffect(() => {\n    return () => {\n      dispatch(setRedirectPath(''))\n      dispatch(setMeta(null))\n    }\n  }, [dispatch])\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={name} />\n        {meta && (\n          <div className='response-json'>\n            Metadata\n            <JsonViewerEditor height={24} botResponse={meta.payload} />\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getMainLoader = createSelector(\n  [(state: AppState) => state.ui.mainLoader],\n  mainLoader => mainLoader\n)\n\nexport const getRedirectPath = createSelector(\n  [(state: AppState) => state.ui.redirectPath],\n  redirectPath => redirectPath\n)\n","import { createHashHistory } from 'history'\n\n// Create history singleton\nexport const history = createHashHistory()\n","import { useEffect, useRef } from 'react'\nimport { Html5QrcodeScanner } from 'html5-qrcode'\nimport './ScanQR.scss'\n\nexport default function ScanQR({\n  onScanSuccess,\n  onScanFailure,\n}: {\n  onScanSuccess: (text: string, result: any) => void\n  onScanFailure: (error: string) => void\n}) {\n  const config = useRef<any>({\n    fps: 10,\n    qrbox: 250,\n    disableFlip: true,\n  })\n\n  useEffect(() => {\n    const html5QrcodeScanner = new Html5QrcodeScanner('reader', config.current, false)\n    html5QrcodeScanner.render(onScanSuccess, onScanFailure)\n\n    return () => {}\n    // eslint-disable-next-line\n  }, [])\n\n  return <div id=\"reader\" />\n}\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { SCAN_QR_FEATURE } from '../../constants'\nimport ScanQR from '../scan-qr/ScanQR'\nimport { useState } from 'react'\n\nexport function ScanQRPage() {\n  const [decodedText, setDecodedText] = useState(null)\n  const [decodedResult, setDecodedResult] = useState(null)\n\n  const handleOnScanSuccess = (text: string, result: any) => {\n    setDecodedText(text)\n    setDecodedResult(result)\n    console.log(`Code matched: ${text}`, result)\n  }\n\n  const handleOnScanFailure = err => {\n    console.warn(`Code scan error: ${err}`)\n  }\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={SCAN_QR_FEATURE.name} />\n      <ScanQR onScanSuccess={handleOnScanSuccess} onScanFailure={handleOnScanFailure} />\n      {decodedText && (\n        <>\n          <p>Decoded text:</p>\n          <div>{decodedText}</div>\n        </>\n      )}\n      {decodedResult && (\n        <>\n          <p>Decoded result:</p>\n          <div>{JSON.stringify(decodedResult)}</div>\n        </>\n      )}\n    </div>\n  )\n}\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { OPEN_FILE_FEATURE } from '../../constants'\nimport classnames from \"classnames\"\nimport { useState } from \"react\"\nimport { Bridge as bridge } from \"@expressms/smartapp-sdk\"\n\nexport default function OpenFile() {\n  const [inputValue, setInputValue] = useState('')\n  const handleClick = () => {\n    if (!inputValue) return\n    console.error({inputValue: JSON.parse(inputValue)})\n\n    bridge?.sendClientEvent({\n      method: OPEN_FILE_FEATURE.method,\n      params: JSON.parse(inputValue),\n    })\n  }\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={OPEN_FILE_FEATURE.name} />\n      <input\n        className={classnames({\n          input: true,\n        })}\n        onChange={e => setInputValue(e.target.value)}\n        value={inputValue}\n        type={'text'}\n      />\n      <div className='form-buttons'>\n        <button\n          className={classnames({\n            'btn--submit': true,\n            'btn--submit-disabled': !inputValue,\n          })}\n          disabled={!inputValue}\n          type=\"submit\"\n          onClick={handleClick}\n          id='submit'\n        >\n          Submit\n        </button>\n      </div>\n    </div>\n  )\n}\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { OPEN_WEB_PAGE_FEATURE } from '../../constants'\nimport { useState } from 'react'\nimport './OpenWebPage.scss'\n\nexport default function OpenWebPage() {\n  const [webUrl, setWebUrl] = useState('https://www.tutorialrepublic.com/')\n  const [mailUrl, setMailUrl] = useState(\n    'mailto:?subject=%D0%98%D0%BD%D1%82%D0%B5%D1%80%D0%B5%D1%81%D0%BD%D0%B0%D1%8F%20%D0%BF%D1%83%D0%B1%D0%BB%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D1%8F&body=%D0%97%D0%B4%D1%80%D0%B0%D0%B2%D1%81%D1%82%D0%B2%D1%83%D0%B9%D1%82%D0%B5!%0A%0A%D0%AF%20%D0%BD%D0%B0%D1%88%D0%B5%D0%BB(%D0%B0)%20%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B5%D1%81%D0%BD%D1%83%D1%8E%20%D0%BF%D1%83%D0%B1%D0%BB%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D1%8E%20%D0%B8%20%D1%85%D0%BE%D1%87%D1%83%20%D0%BF%D0%BE%D0%B4%D0%B5%D0%BB%D0%B8%D1%82%D1%8C%D1%81%D1%8F%20%D0%B5%D0%B9%20%D1%81%20%D0%B2%D0%B0%D0%BC%D0%B8.%0A%D0%92%D0%BE%D1%82%20%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B0%20%3A%20https%3A%2F%2Fexpress.itc.itcloud.io%2Fgroups%2Ftsentr-informatsionnyih%2Fpost%2Fentry%2F161.%0A'\n  )\n\n  const handleWebUrlChange = (event: any) => {\n    setWebUrl(event.target.value)\n  }\n\n  const handleMailUrlChange = (event: any) => {\n    setMailUrl(event.target.value)\n  }\n\n  return (\n    <>\n      <div className=\"feature-page\">\n        <FeaturePageHeader name={OPEN_WEB_PAGE_FEATURE.name} />\n        <span className=\"feature-page__title\">Web URL</span>\n        <div className=\"open-web-page\">\n          <input className=\"input\" type=\"url\" defaultValue={webUrl} onChange={handleWebUrlChange} />\n          <a className=\"open-web-page__link\" href={webUrl}>\n            {webUrl}\n          </a>\n        </div>\n        <span className=\"feature-page__title\">Mailto URL</span>\n        <div className=\"open-web-page\">\n          <input className=\"input\" type=\"url\" defaultValue={mailUrl} onChange={handleMailUrlChange} />\n          <a className=\"open-web-page__link\" href={mailUrl}>\n            {mailUrl}\n          </a>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useLayoutEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getLocation } from '../../redux/selectors/client'\nimport FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { REQUEST_LOCATION } from '../../constants'\nimport { requestLocation, setLocation } from '../../redux/actions/client'\nimport './RequestLocation.scss'\nimport JsonViewer from '../ui/json-editor/JsonViewer'\n\nfunction RequestLocation() {\n  const dispatch = useDispatch()\n  const location = useSelector(getLocation)\n  const [isJSONViewer, setIsJSONViewer] = useState(true)\n\n  const toggleIsJSONViewer = () => setIsJSONViewer(!isJSONViewer)\n\n  const handleSubmit = () => {\n    dispatch(requestLocation())\n  }\n\n  useLayoutEffect(() => {\n    dispatch(setLocation(null))\n  }, [dispatch])\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={REQUEST_LOCATION.name} />\n      <div className='form-buttons'>\n        <button\n          className='btn--submit'\n          onClick={handleSubmit}\n          type='button'\n          id='submit'\n        >\n          Определить\n        </button>\n      </div>\n      <div className='request-location__json-viewer'>\n        {location && (\n          <JsonViewer\n            isJSONViewer={isJSONViewer}\n            botResponse={location}\n            toggleIsJSONViewer={toggleIsJSONViewer}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default RequestLocation\n","import JsonViewerEditor from '../json-editor/JsonViewer'\nimport { BotMethodResponse } from '../../../types'\n\nexport default function JsonViewer(\n  {\n    isJSONViewer,\n    toggleIsJSONViewer,\n    botResponse,\n  }: {\n    isJSONViewer: boolean,\n    toggleIsJSONViewer: () => void,\n    botResponse: BotMethodResponse,\n  },\n) {\n  return (\n    <div>\n      <div className='response-markdown-form'>\n        <input\n          checked={isJSONViewer}\n          className='form-toggler__input'\n          id='form-toggler'\n          type='checkbox'\n          onChange={toggleIsJSONViewer}\n        />\n        <span\n          className='form-toggler'\n          onClick={toggleIsJSONViewer}\n        >\n          Show JSON Viewer\n        </span>\n      </div>\n      {isJSONViewer && (\n        <div className='response-json'>\n          <JsonViewerEditor height={24} json={botResponse} />\n        </div>\n      )}\n    </div>\n  )\n}\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { ECHO_STATIC_FILE_FEATURE } from '../../constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFeatureBotResponse, getStaticFile } from '../../redux/selectors/bot'\nimport './EchoStaticFile.scss'\nimport classnames from 'classnames'\nimport { getAttachments } from '../../redux/selectors/client'\nimport { uploadFile } from '../../redux/actions/client'\nimport { ReactMarkdown } from 'react-markdown/lib/react-markdown'\nimport JsonViewer from '../ui/json-viewer/JsonViewer'\nimport { useState } from 'react'\nimport { echoStaticFile } from '../../redux/actions/bot'\n\nexport default function EchoStaticFile() {\n  const dispatch = useDispatch()\n  const staticFile = useSelector(getStaticFile) as any\n  const attachments = useSelector(getAttachments)\n  const botResponse = useSelector(getFeatureBotResponse)\n  const [isJSONViewer, setIsJSONViewer] = useState(false)\n\n  const handleFilesSubmit = async () => {\n    if (attachments?.length) {\n      dispatch(echoStaticFile(attachments[0]))\n    }\n  }\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={ECHO_STATIC_FILE_FEATURE.name} />\n        <div className='feature-page__echo-static-file'>\n          <div className='feature-page__form'>\n            <button\n              className='btn--attach'\n              onClick={() => dispatch(uploadFile())}\n            >\n              Attach files\n            </button>\n            <p>{attachments?.[0]?.fileName}</p>\n            <div className='form-buttons'>\n              <button\n                className={classnames({\n                  'btn--submit': true,\n                  'btn--submit-disabled': !attachments?.length,\n                })}\n                onClick={handleFilesSubmit}\n                disabled={!attachments?.length}\n                type='button'\n                id='submit'\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <>\n        <div className='response-markdown'>\n          <ReactMarkdown>\n            {botResponse?.payload?.result?.replaceAll?.('\\n', '\\n\\r')}\n          </ReactMarkdown>\n        </div>\n        {staticFile && (\n          <JsonViewer\n            isJSONViewer={isJSONViewer}\n            botResponse={staticFile}\n            toggleIsJSONViewer={() => setIsJSONViewer(!isJSONViewer)}\n          />\n        )}\n      </>\n      <img src={staticFile?.payload?.result} alt='' />\n    </>\n  )\n}\n","import './Version.scss'\nimport { version } from '../../../../package.json'\n\nexport default function Version() {\n  return (\n    <div className=\"version\">\n        SmartApp v{version}\n    </div>\n  )\n}\n\n","import React, { useLayoutEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getSelfProfile } from '../../redux/selectors/client'\nimport FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { REQUEST_SELF_PROFILE_FEATURE } from '../../constants'\nimport { requestSelfProfile, setSelfProfile } from '../../redux/actions/client'\nimport './RequestSelfProfile.scss'\nimport JsonViewer from '../ui/json-editor/JsonViewer'\n\nfunction RequestSelfProfile() {\n  const dispatch = useDispatch()\n  const selfProfile = useSelector(getSelfProfile)\n  const [isJSONViewer, setIsJSONViewer] = useState(true)\n\n  const toggleIsJSONViewer = () => setIsJSONViewer(!isJSONViewer)\n\n  const handleSubmit = () => {\n    dispatch(requestSelfProfile())\n  }\n\n  useLayoutEffect(() => {\n    dispatch(setSelfProfile(null))\n  }, [dispatch])\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={REQUEST_SELF_PROFILE_FEATURE.name} />\n      <div className='form-buttons'>\n        <button\n          className='btn--submit'\n          onClick={handleSubmit}\n          type='button'\n          id='submit'\n        >\n          Запросить свой профиль\n        </button>\n      </div>\n      <div className='request-self-profile__json-viewer'>\n        {selfProfile && (\n          <JsonViewer\n            isJSONViewer={isJSONViewer}\n            botResponse={selfProfile}\n            toggleIsJSONViewer={toggleIsJSONViewer}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default RequestSelfProfile\n","import { useDispatch } from 'react-redux'\nimport FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { CLOSE_SMART_APP_FEATURE } from '../../constants'\nimport { closeSmartApp } from '../../redux/actions/client'\nimport './CloseSmartApp.scss'\n\nfunction CloseSmartApp() {\n  const dispatch = useDispatch()\n\n  const handleSubmit = () => {\n    dispatch(closeSmartApp())\n  }\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={CLOSE_SMART_APP_FEATURE.name} />\n      <div className='form-buttons'>\n        <button\n          className='btn--submit'\n          onClick={handleSubmit}\n          type='button'\n          id='submit'\n        >\n          Закрыть SmartApp\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default CloseSmartApp\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { FILE_PROXY } from '../../constants'\nimport classNames from 'classnames'\nimport { useState } from 'react'\n\nfunction FileProxy() {\n  const [url, setUrl] = useState('https://cts3dev.ccsteam.ru/api/v1/smartapp_proxy/zgubb4kz4xvqgcwi/upload/iblock/523/cf32v2zoh1rxzriy9xt3iqqtbg4dl254.mp4')\n  const [videoUrl, setVideoUrl] = useState(url)\n\n  const handleInputChange = e => setUrl(e.target.value)\n\n  const handleSubmit = () => setVideoUrl(url)\n\n  return (\n    <div className=\"feature-page file-proxy\">\n      <FeaturePageHeader name={FILE_PROXY.name} />\n      <div>\n        <b>Формат</b><br/>\n        <sup>\n            https://<u>cts</u>/api/v1/smartapp_proxy/<u>host_id</u>/<u>path_to_video</u>\n        </sup>\n      </div>\n      <div className='form-buttons'>\n        <input\n          className={classNames({\n            input: true,\n          })}\n          onChange={handleInputChange}\n          value={url}\n          type={'text'}\n          id=\"url\"\n        />\n        </div>\n      <div className='form-buttons'>\n        <button\n          className={classNames({ 'btn--submit': true })}\n          type=\"submit\"\n          onClick={handleSubmit}\n          id=\"submit\"\n        >\n          Play\n        </button>\n      </div>\n      <video src={videoUrl} autoPlay controls width=\"100%\" style={{ margin: \"40px 0 0 0\" }} />\n    </div>\n  )\n}\n\nexport default FileProxy\n","import 'material-icons/iconfont/material-icons.css'\nimport './ConnectionIcon.scss'\n\nexport function ConnectionIcon({ connectionStatus }) {\n  switch (connectionStatus) {\n    case null:\n      return (\n        <div className='connection-status'>\n          <span className=\"material-icons\">question_mark</span>\n          Статус подключения не определен\n        </div>\n      )\n    case 'connected':\n      return (\n        <div className='connection-status connection-status--connected'>\n          <span className=\"material-icons\">wifi</span>\n          Связь с сервером есть\n        </div>\n      )\n    case 'disconnected':\n      return (\n        <div className='connection-status connection-status--disconnected'>\n          <span className=\"material-icons\">wifi_off</span>\n          Нет связи с сервером\n        </div>\n      )\n    default:\n      return (\n        <div className='connection-status'>\n          <span className=\"material-icons\">question_mark</span>\n          Что то пошло не так\n        </div>\n      )\n  }\n}\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { CONNECTION_STATUS } from '../../constants'\nimport classNames from 'classnames'\nimport { AppState } from '../../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ConnectionIcon } from './ConnectionIcon'\nimport { getConnectionStatus, subscribeConnectionStatus, unsubscribeConnectionStatus } from '../../redux/actions/client'\n\nfunction ConnectionStatus() {\n  const dispatch = useDispatch()\n\n  const connectionStatus = useSelector<AppState>(state => state.client.connectionStatus)\n  const subscribedConnectionStatus = useSelector<AppState>(state => state.client.subscribedConnectionStatus)\n\n  const handleGetConnectionStatus = () => dispatch(getConnectionStatus())\n\n  const handleSubscribeConnectionStatus = () => dispatch(subscribeConnectionStatus())\n\n  const handleUnsubscribeConnectionStatus = () => dispatch(unsubscribeConnectionStatus())\n\n  return (\n    <div className=\"feature-page file-proxy\">\n      <FeaturePageHeader name={CONNECTION_STATUS.name} />\n      <h4>Запрос статуса</h4>\n      <div className=\"form-buttons\" id=\"get-status-txt\">\n        <ConnectionIcon connectionStatus={connectionStatus} />\n      </div>\n      <div className=\"form-buttons\">\n        <button\n          className={classNames({ 'btn--submit': true })}\n          type=\"submit\"\n          onClick={handleGetConnectionStatus}\n          id=\"get-status-btn\"\n        >\n          Проверить статус\n        </button>\n      </div>\n      <br />\n      <h4>Подписка на изменение статуса</h4>\n      <div className=\"form-buttons\" id=\"subscription-status-txt\">\n        <ConnectionIcon connectionStatus={subscribedConnectionStatus} />\n      </div>\n      <div className=\"form-buttons\">\n        <button\n          className={classNames({ 'btn--submit': true })}\n          type=\"submit\"\n          onClick={handleSubscribeConnectionStatus}\n          id=\"subscribe-btn\"\n        >\n          Подписаться\n        </button>\n        <button\n          className={classNames({ 'btn--submit': true })}\n          type=\"submit\"\n          onClick={handleUnsubscribeConnectionStatus}\n          id=\"unsubscribe-btn\"\n        >\n          Отписаться\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default ConnectionStatus\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { CREATE_DEEPLINK } from '../../constants'\nimport classNames from 'classnames'\nimport { AppState } from '../../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createDeeplink } from '../../redux/actions/client'\nimport { useState } from 'react'\n\nconst initMeta = [\n  { key: 'route', value: '/send-email' },\n  { key: 'email', value: 'test@mail.ru' },\n]\n\nfunction CreateDeeplink() {\n  const dispatch = useDispatch()\n  const [appId, setAppId] = useState('email-smartapp')\n  const [metaJson, setMetaJson] = useState(JSON.stringify(initMeta, null, 2))\n\n  const deeplinkUrl = useSelector<AppState, string>(state => state.client.deeplinkUrl)\n\n  const handleSubmit = () => dispatch(createDeeplink(appId, JSON.parse(metaJson)))\n\n  const handleAppIdChange = e => setAppId(e.target.value)\n\n  const handleMetaChange = e => setMetaJson(e.target.value)\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={CREATE_DEEPLINK.name} />\n      <span className=\"feature-page__title\">App ID</span>\n      <div className=\"form-buttons\">\n        <input className=\"input\" onChange={handleAppIdChange} value={appId} type=\"text\" id=\"app-id-text\" />\n      </div>\n      <span className=\"feature-page__title\">Meta</span>\n      <div className=\"form-buttons\">\n        <textarea className=\"input\" onChange={handleMetaChange} id=\"meta-text\" rows={10} value={metaJson} />\n      </div>\n      <span className=\"feature-page__title\">Deeplink</span>\n      <input className=\"input\" disabled value={deeplinkUrl} id=\"deeplink-text\" />\n      <div className=\"form-buttons\">\n        <button\n          className={classNames({ 'btn--submit': true })}\n          type=\"submit\"\n          onClick={handleSubmit}\n          id=\"submit\"\n        >\n          Сгенерировать ссылку\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateDeeplink\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { IOS_SWIPE } from '../../constants'\nimport { AppState } from '../../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setShowIosSwipeToast } from '../../redux/actions/ui'\n\nfunction IosSwipeToggler() {\n  const dispatch = useDispatch()\n\n  const showIosSwipeToast = useSelector<AppState, boolean>((state) => state.ui.showIosSwipeToast)\n\n  const handleToggle = () => dispatch(setShowIosSwipeToast(!showIosSwipeToast))\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={IOS_SWIPE.name} />\n      <div className=\"form-buttons\">\n        <input className=\"checkbox\" checked={showIosSwipeToast} type=\"checkbox\" id=\"show-ios-toast\" name=\"show-ios-toast\" onClick={handleToggle} />\n        <label className=\"checkbox__label\" htmlFor=\"show-ios-toast\">Show iOS swipe events</label>\n      </div>\n    </div>\n  )\n}\n\nexport default IosSwipeToggler\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { OPEN_CHAT_MESSAGE } from '../../constants'\nimport classNames from 'classnames'\nimport { useDispatch } from 'react-redux'\nimport { openChatMessage } from '../../redux/actions/client'\nimport { useState } from 'react'\n\nfunction OpenMessage() {\n  const dispatch = useDispatch()\n  const [groupChatId, setGroupChatId] = useState('')\n  const [syncId, setSyncId] = useState('')\n\n  const handleSubmit = () => dispatch(openChatMessage({ groupChatId, syncId }))\n\n  const handleGroupChatIdChange = e => setGroupChatId(e.target.value)\n\n  const handleSyncIdChange = e => setSyncId(e.target.value)\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={OPEN_CHAT_MESSAGE.name} />\n      <span className=\"feature-page__title\">Group chat ID</span>\n      <div className=\"form-buttons\">\n        <input className=\"input\" onChange={handleGroupChatIdChange} value={groupChatId} type=\"text\" id=\"group-chat-id-text\" />\n      </div>\n      <span className=\"feature-page__title\">Sync ID</span>\n      <div className=\"form-buttons\">\n        <input className=\"input\" onChange={handleSyncIdChange} value={syncId} type=\"text\" id=\"sync-id-text\" />\n      </div>\n      <div className=\"form-buttons\">\n        <button\n          className={classNames({ 'btn--submit': true })}\n          type=\"submit\"\n          onClick={handleSubmit}\n          id=\"submit\"\n        >\n          Показать сообщение\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default OpenMessage\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { CLIENT_STORAGE } from '../../constants'\nimport './ClientStorage.scss'\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  clientStorageClear,\n  clientStorageGet,\n  clientStorageLoaded,\n  clientStorageRemove,\n  clientStorageSet,\n} from '../../redux/actions/client'\nimport { AppState } from '../../types'\n\nconst initData = {\n  string1: 'test string',\n  number1: 123.456,\n  boolean1: false,\n  null1: null,\n  array1: [1, true, 'text'],\n  object1: { param1: 'val1' },\n}\n\nfunction ClientStorage() {\n  const dispatch = useDispatch()\n  const storageData = useSelector<AppState, string>(state => JSON.stringify(state.client.storageData, null, 2))\n  const [dataToSave, setData] = useState(JSON.stringify(initData, null, 2))\n  const [key, setKey] = useState('key1')\n\n  useEffect(() => {\n    dispatch(clientStorageLoaded(''))\n  }, [dispatch])\n\n  const handleDataChange = e => setData(e.target.value)\n\n  const handleKeyChange = e => setKey(e.target.value)\n\n  const handleSet = () => dispatch(clientStorageSet(key, JSON.parse(dataToSave)))\n\n  const handleGet = () => dispatch(clientStorageGet(key))\n\n  const handleRemove = () => dispatch(clientStorageRemove(key))\n\n  const handleClear = () => dispatch(clientStorageClear())\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={CLIENT_STORAGE.name} />\n      <span className=\"feature-page__title\">Сохранение записи</span>\n      <div className=\"form-buttons\">\n        <input className=\"input\" onChange={handleKeyChange} value={key} type=\"text\" id=\"key1-text\" />\n      </div>\n      <div className=\"form-buttons\">\n        <textarea className=\"input\" id=\"json-text-save\" rows={10} value={dataToSave} onChange={handleDataChange} />\n      </div>\n      <div className=\"form-buttons\">\n        <button className=\"btn--submit\" onClick={handleSet} type=\"button\" id=\"data-save\">\n          Сохранить\n        </button>\n      </div>\n      <div className=\"from-block\">\n        <span className=\"feature-page__title\">Получение записи</span>\n        <div className=\"form-buttons\">\n          <input className=\"input\" onChange={handleKeyChange} value={key} type=\"text\" id=\"key2-text\" />\n        </div>\n        <div className=\"form-buttons\">\n          <textarea className=\"input\" id=\"json-text-load\" rows={10} value={storageData} />\n        </div>\n        <div className=\"form-buttons\">\n          <button className=\"btn--submit\" onClick={handleGet} type=\"button\" id=\"data-load\">\n            Загрузить\n          </button>\n        </div>\n      </div>\n      <div className=\"from-block\">\n        <span className=\"feature-page__title\">Удаление записи</span>\n        <div className=\"form-buttons\">\n          <input className=\"input\" onChange={handleKeyChange} value={key} type=\"text\" id=\"key2-text\" />\n        </div>\n        <div className=\"form-buttons\">\n          <button className=\"btn--submit\" onClick={handleRemove} type=\"button\" id=\"data-remove\">\n            Удалить\n          </button>\n        </div>\n      </div>\n      <div className=\"from-block\">\n        <span className=\"feature-page__title\">Очистка базы</span>\n        <div className=\"form-buttons\">\n          <button className=\"btn--submit\" onClick={handleClear} type=\"button\" id=\"data-clear\">\n            Очистить\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ClientStorage\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { HANDLE_DEEPLINK_FEATURE } from '../../constants'\nimport { useState } from 'react'\nimport './HandleDeeplinkPage.scss'\nimport { handleDeeplink } from '../../redux/actions/client'\nimport { useDispatch } from 'react-redux'\n\nexport default function HandleDeeplinkPage() {\n  const dispatch = useDispatch()\n  const [deeplink, setDeeplink] = useState('')\n\n  const handleDeeplinkChange = (event: any) => setDeeplink(event.target.value)\n\n  const handleSubmit = () => dispatch(handleDeeplink(deeplink))\n\n  return (\n    <>\n      <div className=\"feature-page\">\n        <FeaturePageHeader name={HANDLE_DEEPLINK_FEATURE.name} />\n        <span className=\"feature-page__title\">Deeplink</span>\n        <div className=\"handle-deeplink-page\">\n          <input className=\"input\" type=\"url\" defaultValue={deeplink} onChange={handleDeeplinkChange} />\n        </div>\n        <div className=\"form-buttons\">\n          <button className=\"btn--submit\" onClick={handleSubmit} type=\"button\" id=\"open-btn\">\n            Открыть\n          </button>\n          </div>\n      </div>\n    </>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { SEARCH_PHONEBOOK } from '../../constants'\nimport FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport JsonViewer from '../ui/json-editor/JsonViewer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { resetExpressResponse, searchCorporatePhonebook, searchLocalPhonebook } from '../../redux/actions/client'\nimport { getExpressResponse } from '../../redux/selectors/client'\n\nexport default function SearchPhonebookPage() {\n  const dispatch = useDispatch()\n  const response = useSelector(getExpressResponse)\n  const [filter, setFilter] = useState('')\n\n  useEffect(() => {\n    dispatch(resetExpressResponse())\n  }, [dispatch])\n\n  const handleChange = e => setFilter(e.target.value || null)\n\n  const handleCorpSearch = () => {\n    dispatch(resetExpressResponse())\n    dispatch(searchCorporatePhonebook(filter))\n  }\n\n  const handleLocalSearch = () => {\n    dispatch(resetExpressResponse())\n    dispatch(searchLocalPhonebook(filter))\n  }\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={SEARCH_PHONEBOOK.name} />\n      <div className=\"feature-page__form\">\n        <span className=\"feature-page__title\">Filter</span>\n        <input className=\"input\" onChange={handleChange} value={filter} id=\"filter-text\" />\n        <div className=\"form-buttons\">\n          <button className=\"btn--submit\" onClick={handleCorpSearch} type=\"button\" id=\"corp-submit\">\n            <span className=\"material-icons\">cases</span>\n            Корпоративный поиск контактов\n          </button>\n        </div>\n        <div className=\"form-buttons\">\n          <button className=\"btn--submit\" onClick={handleLocalSearch} type=\"button\" id=\"local-submit\">\n            <span className=\"material-icons\">phone_iphone</span>\n            Локальный поиск контактов\n          </button>\n        </div>\n      </div>\n      <br />\n      <br />\n      {response?.payload && <JsonViewer botResponse={response.payload} id=\"response\" />}\n    </div>\n  )\n}\n","import { LOCALE_FEATURE } from '../../constants'\nimport FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { useEffect, useState } from 'react'\n\nexport default function LocalePage() {\n  const [locale, setLocale] = useState('')\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams(window.location.search)\n    const locale = searchParams.get('locale') || 'unknown'\n\n    setLocale(locale)\n\n    return () => {}\n  }, [setLocale])\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={LOCALE_FEATURE.name} />\n      Локаль приложения\n      <input id=\"locale-txt\" value={locale} className=\"input\" disabled />\n    </div>\n  )\n}\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { UNREAD_COUNTER_FEATURE } from '../../constants'\nimport classNames from 'classnames'\nimport { AppState } from '../../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUnreadCounter, setUnreadCounter, subscribeUnreadCounter, unsubscribeUnreadCounter } from '../../redux/actions/client'\nimport { useState } from 'react'\nimport { SubscriptionPayload } from '@expressms/smartapp-sdk/build/main/types'\n\nconst TYPES = ['user', 'chat', 'smartapp']\n\nfunction UnreadCountersPage() {\n  const dispatch = useDispatch()\n  const [id, setId] = useState('')\n  const [type, setType] = useState(TYPES[0] as SubscriptionPayload['type'])\n\n  const unreadCounter = useSelector<AppState>(state => state.client.unreadCounter)\n\n  const handleIdChange = (event) => setId(event.target.value)\n\n  const handleTypeChange = (event) => setType(event.target.value)\n\n  const handleSubscribe = () => dispatch(subscribeUnreadCounter(id, type))\n  \n  const handleUnsubscribe = () => dispatch(unsubscribeUnreadCounter(id, type))\n\n  const handleGetUnreadCounter = () => {\n    dispatch(setUnreadCounter(-1))\n    dispatch(getUnreadCounter(id, type))\n  }\n\n  return (\n    <div className=\"feature-page file-proxy\">\n      <FeaturePageHeader name={UNREAD_COUNTER_FEATURE.name} />\n      <span className=\"feature-page__title\">Тип</span>\n      <div className=\"form-buttons\">\n        <select className=\"input\" onChange={handleTypeChange} defaultValue={type} id=\"type-select\">\n          {TYPES.map(t => (\n            <option key={t} value={t}>{t}</option>\n          ))}\n        </select>\n      </div>\n      <span className=\"feature-page__title\">ID</span>\n      <div className=\"form-buttons\">\n        <input className=\"input\" onChange={handleIdChange} value={id} type=\"text\" id=\"id-text\" />\n      </div>\n      {unreadCounter !== -1 && (\n        <>\n          <span className=\"feature-page__title\">Каунтер</span>\n          <input className=\"input\" value={unreadCounter.toString()} type=\"text\" id=\"counter-text\" disabled />\n        </>\n      )}\n      <div className=\"form-buttons\">\n        <button\n          className={classNames({ 'btn--submit': true })}\n          type=\"submit\"\n          onClick={handleGetUnreadCounter}\n          id=\"get-status-btn\"\n        >\n          Запросить каунтер\n        </button>\n      </div>\n      <br/><br/>\n      <div className=\"form-buttons\">\n        <button\n          className={classNames({ 'btn--submit': true })}\n          type=\"submit\"\n          onClick={handleSubscribe}\n          id=\"subscribe-btn\"\n        >\n          Подписаться\n        </button>\n        <button\n          className={classNames({ 'btn--submit': true })}\n          type=\"submit\"\n          onClick={handleUnsubscribe}\n          id=\"unsubscribe-btn\"\n        >\n          Отписаться\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default UnreadCountersPage\n","import './FeatureSmartapp.scss'\nimport 'material-icons/iconfont/material-icons.css'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ToastContainer } from 'react-toastify'\nimport { getFeaturesMenu } from '../../redux/selectors/bot'\nimport { Link, Route, Switch, HashRouter } from 'react-router-dom'\nimport FeaturePage from '../feature-page/FeaturePage'\nimport { loadFeatures } from '../../redux/actions/bot'\nimport { ReactComponent as BotxIcon } from '../../assets/botx-icon.svg'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {\n  CLIENT_STORAGE,\n  CLOSE_SMART_APP_FEATURE,\n  CONNECTION_STATUS,\n  CREATE_DEEPLINK,\n  ECHO_STATIC_FILE_FEATURE,\n  EXPRESS_FEATURES,\n  EXPRESS_NOTIFICATION_FEATURE,\n  FILE_PROXY,\n  GUARANTEED_DELIVERY_FEATURE,\n  HANDLE_DEEPLINK_FEATURE,\n  IOS_SWIPE,\n  LOCALE_FEATURE,\n  MENU_ITEM_MESSAGE_META,\n  OPEN_CHAT_MESSAGE,\n  OPEN_FILE_FEATURE,\n  OPEN_SMART_APP_META_FEATURE,\n  OPEN_WEB_PAGE_FEATURE,\n  REQUEST_LOCATION,\n  REQUEST_SELF_PROFILE_FEATURE,\n  SCAN_QR_FEATURE,\n  SEARCH_PHONEBOOK,\n  UNREAD_COUNTER_FEATURE,\n} from '../../constants'\nimport ExpressNotifications from '../../components/express-notifications/ExpressNotifications'\nimport MetaPage from '../../components/meta-page/MetaPage'\nimport { getRedirectPath } from '../../redux/selectors/ui'\nimport { history } from '../../redux/history'\nimport { ScanQRPage } from '../../components/scan-qr-page/ScanQRPage'\nimport OpenFile from '../../components/open-file/OpenFile'\nimport { BotFeatureMethod, ExpressFeatureMethod } from '../../types'\nimport { openClientSettings, useQuery } from '@expressms/smartapp-sdk'\nimport OpenWebPage from '../../components/open-web-page/OpenWebPage'\nimport RequestLocation from '../../components/request-location/RequestLocation'\nimport EchoStaticFile from '../../components/echo-static-file/EchoStaticFile'\nimport Version from '../../components/ui/version/Version'\nimport RequestSelfProfile from '../../components/request-self-profile/RequestSelfProfile'\nimport CloseSmartApp from '../../components/close-smart-app/CloseSmartApp'\nimport FileProxy from '../../components/file-proxy/FileProxy'\nimport ConnectionStatus from '../../components/connection-status/ConnectionStatus'\nimport CreateDeeplink from '../../components/create-deeplink/CreateDeeplink'\nimport IosSwipeToggler from '../../components/ios-swipe-toggler/IosSwipeToggler'\nimport OpenMessage from '../../components/open-message/OpenMessage'\nimport ClientStorage from '../../components/client-storage/ClientStorage'\nimport HandleDeeplinkPage from '../../components/handle-deeplink/HandleDeeplinkPage'\nimport SearchPhonebookPage from '../../components/search-phonebook/SearchPhonebookPage'\nimport LocalePage from '../../components/locale/LocalePage'\nimport UnreadCountersPage from '../../components/unread-counters/UnreadCounters'\n\nexport default function FeatureSmartapp() {\n  const dispatch = useDispatch()\n  const botFeatures = useSelector(getFeaturesMenu)\n  const redirectPath = useSelector(getRedirectPath)\n  const { platform } = useQuery()\n\n  const handleOpenClientSettings = (e) => {\n    if (platform !== 'web') {\n      openClientSettings()\n    } else {\n      alert('Feature is unavailable on web client')\n    }\n    e.preventDefault()\n  }\n\n  useEffect(() => {\n    if (redirectPath) history.push(redirectPath)\n\n    if (!botFeatures) dispatch(loadFeatures())\n  }, [dispatch, redirectPath, botFeatures])\n\n  return (\n    <div className='feature-smartapp'>\n      <div className='header'>\n        <span className='header__content'>\n          <BotxIcon className='header__icon' height={20} width={20} />\n          <span className='header__text' id='toolbar-title'>Feature Smartapp</span>\n        </span>\n      </div>\n      <ToastContainer />\n      <section className='feature-smartapp__menu'>\n        <HashRouter>\n          <Switch>\n            {botFeatures?.length && botFeatures.map(item => {\n              return item.name === ECHO_STATIC_FILE_FEATURE.name ? (\n                <Route\n                  key={`${BotFeatureMethod.ECHO_STATIC_FILE}-route`}\n                  path={`/${BotFeatureMethod.ECHO_STATIC_FILE}`}\n                >\n                  <EchoStaticFile />\n                </Route>\n              ) : (\n                <Route\n                  key={`${item.method}-route`}\n                  path={`/${item.method}`}\n                >\n                  <FeaturePage {...item} />\n                </Route>\n              )\n            })}\n            <Route\n              key={`${SEARCH_PHONEBOOK.method}-route`}\n              path={`/${SEARCH_PHONEBOOK.method}`}\n            >\n              <SearchPhonebookPage />\n            </Route>\n            <Route\n              key={`${GUARANTEED_DELIVERY_FEATURE.path}-route`}\n              path={`/${GUARANTEED_DELIVERY_FEATURE.path}`}\n            >\n              <FeaturePage\n                name={GUARANTEED_DELIVERY_FEATURE.name}\n                method={GUARANTEED_DELIVERY_FEATURE.method}\n                uiElements={GUARANTEED_DELIVERY_FEATURE.uiElements}\n              />\n            </Route>\n            {EXPRESS_FEATURES.map(item => (\n              <Route\n                key={`${item.method}-route`}\n                path={`/${item.method}`}\n              >\n                <FeaturePage {...item} />\n              </Route>\n            ))}\n            <Route\n              key={`${OPEN_SMART_APP_META_FEATURE.method}-route`}\n              path={`/${OPEN_SMART_APP_META_FEATURE.method}`}\n            >\n              <MetaPage name={OPEN_SMART_APP_META_FEATURE.name} />\n            </Route>\n            <Route\n              key={`${EXPRESS_NOTIFICATION_FEATURE.method}-route`}\n              path={`/${EXPRESS_NOTIFICATION_FEATURE.method}`}\n            >\n              <ExpressNotifications />\n            </Route>\n            <Route\n              key={`${SCAN_QR_FEATURE.method}-route`}\n              path={`/${SCAN_QR_FEATURE.method}`}\n            >\n              <ScanQRPage />\n            </Route>\n            <Route\n              key={`${OPEN_FILE_FEATURE.method}-route`}\n              path={`/${OPEN_FILE_FEATURE.method}`}\n            >\n              <OpenFile />\n            </Route>\n            <Route\n              key={`${OPEN_WEB_PAGE_FEATURE.method}-route`}\n              path={`/${OPEN_WEB_PAGE_FEATURE.method}`}\n            >\n              <OpenWebPage />\n            </Route>\n            <Route\n              key={`${REQUEST_LOCATION.method}-route`}\n              path={`/${REQUEST_LOCATION.method}`}\n            >\n              <RequestLocation />\n            </Route>\n            <Route\n              key={`${REQUEST_SELF_PROFILE_FEATURE.method}-route`}\n              path={`/${REQUEST_SELF_PROFILE_FEATURE.method}`}\n            >\n              <RequestSelfProfile />\n            </Route>\n            <Route\n              key={`${CLOSE_SMART_APP_FEATURE.method}-route`}\n              path={`/${CLOSE_SMART_APP_FEATURE.method}`}\n            >\n              <CloseSmartApp />\n            </Route>\n            <Route\n              key={`${FILE_PROXY.method}-route`}\n              path={`/${FILE_PROXY.method}`}\n            >\n              <FileProxy />\n            </Route>\n            <Route\n              key={`${CONNECTION_STATUS.method}-route`}\n              path={`/${CONNECTION_STATUS.method}`}\n            >\n              <ConnectionStatus />\n            </Route>\n            <Route\n              key={`${MENU_ITEM_MESSAGE_META.method}-route`}\n              path={`/${MENU_ITEM_MESSAGE_META.method}`}\n            >\n              <MetaPage name={MENU_ITEM_MESSAGE_META.name} />\n            </Route>\n            <Route\n              key={`${CREATE_DEEPLINK.method}-route`}\n              path={`/${CREATE_DEEPLINK.method}`}\n            >\n              <CreateDeeplink />\n            </Route>\n            <Route\n              key={`${IOS_SWIPE.method}-route`}\n              path={`/${IOS_SWIPE.method}`}\n            >\n              <IosSwipeToggler />\n            </Route>\n            <Route\n              key={`${OPEN_CHAT_MESSAGE.method}-route`}\n              path={`/${OPEN_CHAT_MESSAGE.method}`}\n            >\n              <OpenMessage />\n            </Route>\n            <Route\n              key={`${CLIENT_STORAGE.method}-route`}\n              path={`/${CLIENT_STORAGE.method}`}\n            >\n              <ClientStorage />\n            </Route>\n            <Route\n              key={`${HANDLE_DEEPLINK_FEATURE.method}-route`}\n              path={`/${HANDLE_DEEPLINK_FEATURE.method}`}\n            >\n              <HandleDeeplinkPage />\n            </Route>\n            <Route\n              key={`${UNREAD_COUNTER_FEATURE.method}-route`}\n              path={`/${UNREAD_COUNTER_FEATURE.method}`}\n            >\n              <UnreadCountersPage />\n            </Route>\n            <Route\n              key={`${LOCALE_FEATURE.method}-route`}\n              path={`/${LOCALE_FEATURE.method}`}\n            >\n              <LocalePage />\n            </Route>\n            <Route path={'/'}>\n              {botFeatures?.length && (\n                <span className={'feature-smartapp__menu-title'}>Bot methods</span>\n              )}\n              {botFeatures?.length && botFeatures?.map(item => (\n                <Link\n                  className='feature-smartapp__menu-item'\n                  key={`${item.method}-link`}\n                  to={`/${item.method}`}\n                >\n                  <span className=\"material-icons\">send</span>\n                  {item.name}\n                </Link>\n              ))}\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${GUARANTEED_DELIVERY_FEATURE.path}-link`}\n                to={`/${GUARANTEED_DELIVERY_FEATURE.path}`}\n              >\n                <span className=\"material-icons\">delivery_dining</span>\n                {GUARANTEED_DELIVERY_FEATURE.name}\n              </Link>\n              <span className={'feature-smartapp__menu-title'}>\n                Client methods\n              </span>\n              {EXPRESS_FEATURES.map(item => (\n                  item.method === ExpressFeatureMethod.OPEN_CLIENT_SETTINGS ? (\n                    <a\n                      href=\"#/\"\n                      key={`${item.method}-route`}\n                      className='feature-smartapp__menu-item'\n                      onClick={handleOpenClientSettings}\n                    >\n                      <span className=\"material-icons\">{item.icon}</span>\n                      {item.name}\n                    </a>\n                  ) : (\n                    <Link\n                      className='feature-smartapp__menu-item'\n                      key={`${item.method}-link`}\n                      to={`/${item.method}`}\n                    >\n                      <span className=\"material-icons\">{item.icon}</span>\n                      {item.name}\n                    </Link>\n                  )\n                ),\n              )}\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${SEARCH_PHONEBOOK.method}-link`}\n                to={`/${SEARCH_PHONEBOOK.method}`}\n              >\n                <span className=\"material-icons\">contacts</span>\n                {SEARCH_PHONEBOOK.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${EXPRESS_NOTIFICATION_FEATURE.method}-link`}\n                to={`/${EXPRESS_NOTIFICATION_FEATURE.method}`}\n              >\n                <span className=\"material-icons\">notifications_none</span>\n                {EXPRESS_NOTIFICATION_FEATURE.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${SCAN_QR_FEATURE.method}-link`}\n                to={`/${SCAN_QR_FEATURE.method}`}\n              >\n                <span className=\"material-icons\">qr_code</span>\n                {SCAN_QR_FEATURE.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${OPEN_WEB_PAGE_FEATURE.method}-link`}\n                to={`/${OPEN_WEB_PAGE_FEATURE.method}`}\n              >\n                <span className=\"material-icons\">open_in_new</span>\n                {OPEN_WEB_PAGE_FEATURE.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${REQUEST_LOCATION.method}-link`}\n                to={`/${REQUEST_LOCATION.method}`}\n              >\n                <span className=\"material-icons\">my_location</span>\n                {REQUEST_LOCATION.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${REQUEST_SELF_PROFILE_FEATURE.method}-link`}\n                to={`/${REQUEST_SELF_PROFILE_FEATURE.method}`}\n              >\n                <span className=\"material-icons\">face</span>\n                {REQUEST_SELF_PROFILE_FEATURE.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${CLOSE_SMART_APP_FEATURE.method}-link`}\n                to={`/${CLOSE_SMART_APP_FEATURE.method}`}\n              >\n                <span className=\"material-icons\">close</span>\n                {CLOSE_SMART_APP_FEATURE.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${FILE_PROXY.method}-link`}\n                to={`/${FILE_PROXY.method}`}\n              >\n                <span className=\"material-icons\">drive_file_move</span>\n                {FILE_PROXY.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${CONNECTION_STATUS.method}-link`}\n                to={`/${CONNECTION_STATUS.method}`}\n              >\n                <span className=\"material-icons\">wifi_off</span>\n                {CONNECTION_STATUS.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${CREATE_DEEPLINK.method}-link`}\n                to={`/${CREATE_DEEPLINK.method}`}\n              >\n                <span className=\"material-icons\">link</span>\n                {CREATE_DEEPLINK.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${IOS_SWIPE.method}-link`}\n                to={`/${IOS_SWIPE.method}`}\n              >\n                <span className=\"material-icons\">swipe</span>\n                {IOS_SWIPE.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${OPEN_CHAT_MESSAGE.method}-link`}\n                to={`/${OPEN_CHAT_MESSAGE.method}`}\n              >\n                <span className=\"material-icons\">message</span>\n                {OPEN_CHAT_MESSAGE.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${CLIENT_STORAGE.method}-link`}\n                to={`/${CLIENT_STORAGE.method}`}\n              >\n                <span className=\"material-icons\">storage</span>\n                {CLIENT_STORAGE.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${HANDLE_DEEPLINK_FEATURE.method}-link`}\n                to={`/${HANDLE_DEEPLINK_FEATURE.method}`}\n              >\n                <span className=\"material-icons\">add_link</span>\n                {HANDLE_DEEPLINK_FEATURE.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${LOCALE_FEATURE.method}-link`}\n                to={`/${LOCALE_FEATURE.method}`}\n              >\n                <span className=\"material-icons\">language</span>\n                {LOCALE_FEATURE.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${UNREAD_COUNTER_FEATURE.method}-link`}\n                to={`/${UNREAD_COUNTER_FEATURE.method}`}\n              >\n                <span className=\"material-icons\">1k_plus</span>\n                {UNREAD_COUNTER_FEATURE.name}\n              </Link>\n            </Route>\n          </Switch>\n        </HashRouter>\n      </section>\n      <Version/>\n    </div>\n  )\n}\n","import { BotMethodResponse } from '../../types'\nimport './Notifier.scss'\n\nexport default function Notifier({ result, status }: BotMethodResponse['payload']) {\n  return (\n    <div className={'notifier'}>\n      <span className={'notifier__text'}>{result}</span>\n      <span className={'notifier__text'}>Status: {status}</span>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Bridge as bridge } from '@expressms/smartapp-sdk'\nimport MainLoader from './ui/main-loader/MainLoader'\nimport FeatureSmartapp from '../containers/feature-smartapp/FeatureSmartapp'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BotMethodResponse, EventType, ExpressNotification } from '../types'\nimport { sendReadyEvent, setExpressNotificationSuccess } from '../redux/actions/client'\nimport Notifier from './notifier/Notifier'\nimport { getMainLoader } from '../redux/selectors/ui'\n\nexport default function Main() {\n  const dispatch = useDispatch()\n  const isMainLoader = useSelector(getMainLoader)\n  const [load, setLoad] = useState(true)\n  const [notifier, setNotifier] = useState<BotMethodResponse['payload'] | null>(null)\n\n  useEffect(() => {\n    if (load) {\n      setLoad(false)\n      dispatch(sendReadyEvent())\n    }\n\n    bridge?.onReceive(({ type, payload }) => {\n      if (typeof payload !== 'object') return\n\n      switch (type) {\n        case EventType.SMARTAPP_RPC: {\n          setNotifier(payload as BotMethodResponse['payload'])\n          setTimeout(() => setNotifier(null), 3000)\n          break\n        }\n        case EventType.NOTIFICATION: {\n          dispatch(setExpressNotificationSuccess(payload as ExpressNotification))\n          break\n        }\n        default: \n          break\n      }\n    })\n  }, [dispatch, load])\n\n  return (\n    <>\n      {isMainLoader && <MainLoader />}\n      <FeatureSmartapp />\n      {notifier && <Notifier {...notifier} />}\n    </>\n  )\n}\n","import { handleActions } from 'redux-actions'\nimport { UIState } from '../../types'\nimport {\n  SET_MAIN_LOADER,\n  SET_REDIRECT_PATH,\n  SET_SHOW_IOS_SWIPE_TOAST,\n  setMainLoaderActionType, setRedirectPathActionType,\n  setShowIosSwipeToastActionType,\n} from '../actions/ui'\nimport { getQueryParam } from '../../helpers'\n\nconst initialState: UIState = {\n  mainLoader: false,\n  redirectPath: '',\n  theme: getQueryParam('theme') || 'default',\n  showIosSwipeToast: false,\n}\n\nconst reducers = {\n  [SET_MAIN_LOADER]: (\n    state: UIState, { payload: mainLoader }: setMainLoaderActionType\n  ): UIState => ({\n    ...state, mainLoader\n  }),\n  [SET_REDIRECT_PATH]: (\n    state: UIState, { payload: redirectPath }: setRedirectPathActionType\n  ): UIState => ({\n    ...state, redirectPath\n  }),\n  [SET_SHOW_IOS_SWIPE_TOAST]: (\n    state: UIState, { payload: showIosSwipeToast }: setShowIosSwipeToastActionType\n  ): UIState => ({\n    ...state, showIosSwipeToast\n  }),\n}\n\nexport const ui = handleActions<UIState, any>(reducers, initialState)\n","import { handleActions } from 'redux-actions'\nimport { BotState } from '../../types'\nimport {\n  LOAD_FEATURES_SUCCESS,\n  loadFeaturesSuccessActionType,\n  RESET_RESPONSE,\n  SEND_FEATURE_BOT_EVENT_SUCCESS,\n  SET_STATIC_FILE,\n  setStaticFileActionType,\n} from '../actions/bot'\n\nconst initialState: BotState = {\n  features: null,\n  response: null,\n  notifications: null,\n  staticFile: null,\n}\n\nconst reducers = {\n  [LOAD_FEATURES_SUCCESS]: (\n    state: BotState, { payload: features }: loadFeaturesSuccessActionType,\n  ): BotState => ({\n    ...state,\n    features,\n  }),\n  [SEND_FEATURE_BOT_EVENT_SUCCESS]: (state: BotState, { payload: response }: any): BotState => ({\n    ...state,\n    response,\n  }),\n  [RESET_RESPONSE]: (state: BotState): BotState => ({\n    ...state,\n    response: null,\n  }),\n  [SET_STATIC_FILE]: (\n    state: BotState, { payload: staticFile }: setStaticFileActionType\n  ): BotState => ({\n    ...state,\n    staticFile,\n  }),\n}\n\nexport const bot = handleActions(reducers, initialState)\n","import { handleActions } from 'redux-actions'\nimport { ClientState } from '../../types'\n\nimport {\n  REMOVE_FILE_SUCCESS,\n  removeFileSuccessActionType,\n  RESET_ATTACHMENTS,\n  RESET_EXPRESS_NOTIFICATION_SUCCESS,\n  RESET_EXPRESS_RESPONSE,\n  SEND_EXPRESS_EVENT_SUCCESS,\n  sendExpressEventSuccessActionType,\n  SET_EXPRESS_NOTIFICATION_SUCCESS,\n  SET_LOCATION,\n  SET_META,\n  SET_SELF_PROFILE,\n  setExpressNotificationSuccessActionType,\n  setLocationActionType,\n  setMetaActionType,\n  setSelfProfileType,\n  UPLOAD_FILE_SUCCESS,\n  UPLOAD_FILES_SUCCESS,\n  uploadFilesSuccessActionType,\n  uploadFileSuccessActionType,\n  SET_CONNECTION_STATUS,\n  setConnectionStatusType,\n  CONNECTION_STATUS_CHANGED,\n  connectionStatusChangedType,\n  SET_DEEPLINK_URL,\n  setDeeplinkUrlType,\n  CLIENT_STORAGE_LOADED,\n  clientStorageLoadedActionType,\n  SET_UNREAD_COUNTER,\n  setUnreadCounterActionType,\n} from '../actions/client'\n\nconst initialState: ClientState = {\n  attachments: null,\n  response: null,\n  meta: null,\n  notifications: [],\n  location: null,\n  selfProfile: null,\n  connectionStatus: null,\n  subscribedConnectionStatus: null,\n  deeplinkUrl: null,\n  storageData: '',\n  unreadCounter: -1,\n}\n\nconst reducers = {\n  [UPLOAD_FILE_SUCCESS]: (state: ClientState, { payload: file }: uploadFileSuccessActionType): ClientState => ({\n    ...state,\n    attachments: [file],\n  }),\n  [UPLOAD_FILES_SUCCESS]: (state: ClientState, { payload: files }: uploadFilesSuccessActionType): ClientState => ({\n    ...state,\n    attachments: [...files],\n  }),\n  [REMOVE_FILE_SUCCESS]: (state: ClientState, { payload: id }: removeFileSuccessActionType): ClientState => ({\n    ...state,\n    attachments: state.attachments.filter(attachment => attachment.fileId !== id),\n  }),\n  [RESET_ATTACHMENTS]: (state: ClientState): ClientState => ({\n    ...state,\n    attachments: null,\n  }),\n  [SET_EXPRESS_NOTIFICATION_SUCCESS]: (\n    state: ClientState,\n    { payload }: setExpressNotificationSuccessActionType\n  ): ClientState => ({\n    ...state,\n    notifications: [payload, ...state.notifications],\n  }),\n  [RESET_EXPRESS_NOTIFICATION_SUCCESS]: (state: ClientState): ClientState => ({\n    ...state,\n    notifications: [],\n  }),\n  [SEND_EXPRESS_EVENT_SUCCESS]: (state: ClientState, response: sendExpressEventSuccessActionType): ClientState => ({\n    ...state,\n    response,\n  }),\n  [RESET_EXPRESS_RESPONSE]: (state: ClientState): ClientState => ({\n    ...state,\n    response: null,\n  }),\n  [SET_META]: (state: ClientState, { payload }: setMetaActionType): ClientState => ({\n    ...state,\n    meta: payload,\n  }),\n  [SET_LOCATION]: (state: ClientState, { payload }: setLocationActionType): ClientState => ({\n    ...state,\n    location: payload,\n  }),\n  [SET_SELF_PROFILE]: (state: ClientState, { payload }: setSelfProfileType): ClientState => ({\n    ...state,\n    selfProfile: payload,\n  }),\n  [SET_CONNECTION_STATUS]: (state: ClientState, { payload }: setConnectionStatusType): ClientState => ({\n    ...state,\n    connectionStatus: payload,\n  }),\n  [CONNECTION_STATUS_CHANGED]: (state: ClientState, { payload }: connectionStatusChangedType): ClientState => ({\n    ...state,\n    subscribedConnectionStatus: payload,\n  }),\n  [SET_DEEPLINK_URL]: (state: ClientState, { payload }: setDeeplinkUrlType): ClientState => ({\n    ...state,\n    deeplinkUrl: payload,\n  }),\n  [CLIENT_STORAGE_LOADED]: (state: ClientState, { payload }: clientStorageLoadedActionType): ClientState => ({\n    ...state,\n    storageData: payload,\n  }),\n  [SET_UNREAD_COUNTER]: (state: ClientState, { payload }: setUnreadCounterActionType): ClientState => ({\n    ...state,\n    unreadCounter: payload,\n  }),\n}\n\nexport const client = handleActions<ClientState, any>(reducers, initialState)\n","import { connectRouter } from 'connected-react-router'\nimport { combineReducers } from 'redux'\nimport { history } from '../history'\nimport { ui } from './ui'\nimport { AppState } from '../../types'\nimport { bot } from './bot'\nimport { client } from './client'\n\nexport const rootReducer = combineReducers<AppState>({\n  ui,\n  bot,\n  client,\n  router: connectRouter(history),\n})\n","import { call, put, select } from 'redux-saga/effects'\nimport { setMainLoader } from '../actions/ui'\nimport { Bridge as bridge } from '@expressms/smartapp-sdk'\nimport { AppState, BotFeaturesResponse } from '../../types'\nimport { MENU_EVENT } from '../../constants'\nimport { loadFeaturesSuccess } from '../actions/bot'\nimport { toast, Theme, ToastPosition } from 'react-toastify'\n\nexport function* loadFeaturesSaga() {\n  try {\n    yield put(setMainLoader(true))\n\n    const response: BotFeaturesResponse = yield bridge.sendBotEvent(MENU_EVENT)\n\n    if (response) yield put(loadFeaturesSuccess(response.payload.result))\n  } catch (e: any) {\n    console.error('loadFeaturesSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n\nexport function* showToast(text: string) {\n  try {\n    const theme = yield select((state: AppState) => state.ui.theme)\n\n    const toastOptions = {\n      theme: (theme === 'dark' ? 'dark' : 'light') as Theme,\n      position: 'bottom-left' as ToastPosition,\n      autoClose: 3000,\n    }\n\n    yield call(toast.info, text, toastOptions)\n  } catch(e: any) {\n    console.error('showToast error', e)\n  }\n}\n","import { put } from 'redux-saga/effects'\nimport { setMainLoader } from '../actions/ui'\nimport { BotFeatureMethod, BotMethodResponse } from '../../types'\nimport { Bridge as bridge } from '@expressms/smartapp-sdk'\nimport { sendFeatureBotEventSuccess, setStaticFile } from '../actions/bot'\n\nexport function* sendFeatureBotEventSaga(action) {\n  try {\n    yield put(setMainLoader(true))\n\n    const response: BotMethodResponse = yield bridge?.sendBotEvent(action.payload)\n\n    yield put(sendFeatureBotEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendFeatureBotEventSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n\nexport function* echoStaticFileSaga(action) {\n  try {\n    yield put(setMainLoader(true))\n    const staticFile = yield bridge?.sendBotEvent({\n      method: BotFeatureMethod.ECHO_STATIC_FILE,\n      params: {},\n      files: [action.payload],\n    })\n    console.error(staticFile)\n\n    yield put(setStaticFile(staticFile))\n\n  } catch (e: any) {\n    console.error('echoStaticFileSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n","import {\n  Bridge as bridge,\n  ready,\n  requestLocation,\n  sendMessage,\n  requestSelfProfile,\n  closeSmartApp,\n  getConnectionStatus,\n  subscribeClientEvents,\n  unsubscribeClientEvents,\n  createDeeplink,\n  openChatMessage,\n  clientStorageSet,\n  clientStorageGet,\n  clientStorageRemove,\n  clientStorageClear,\n  handleDeeplink,\n  searchCorporatePhonebook,\n  searchLocalPhonebook,\n  getUnreadCounter,\n} from '@expressms/smartapp-sdk'\nimport { ClientEventMethod, ExpressMethodResponse, File } from '../../types'\nimport { call, put, take, spawn } from 'redux-saga/effects'\nimport {\n  clientStorageGetActionType,\n  clientStorageLoaded,\n  clientStorageRemoveActionType,\n  clientStorageSetActionType,\n  connectionStatusChanged,\n  createDeeplinkActionType,\n  getUnreadCounterActionType,\n  handleDeeplinkActionType,\n  openChatMessageActionType,\n  searchCorporatePhonebookActionType,\n  searchLocalPhonebookActionType,\n  sendExpressEventActionType,\n  sendExpressEventSuccess,\n  sendMessageExpressEventActionType,\n  setConnectionStatus,\n  setDeeplinkUrl,\n  setLocation,\n  setMeta,\n  setSelfProfile,\n  setUnreadCounter,\n  subscribeUnreadCounterActionType,\n  unsubscribeUnreadCounterActionType,\n  uploadFilesActionType,\n  uploadFilesSuccess,\n  uploadFileSuccess,\n} from '../actions/client'\nimport { setMainLoader, setRedirectPath } from '../actions/ui'\nimport { OPEN_SMART_APP_META_FEATURE } from '../../constants'\nimport {\n  ClientStorageGetResponse,\n  CreateDeeplinkResponse,\n  GetConnectionStatusResponse,\n  GetUnreadCounterResponse,\n  STATUS,\n  SearchLocalPhonebookResponse,\n  StatusResponse,\n  SubscriptionEventType,\n} from '@expressms/smartapp-sdk/build/main/types'\nimport { eventChannel } from 'redux-saga'\nimport { showToast } from './ui'\n\nlet connectionStatusChannel = null\nlet unreadCounterChannels = []\n\nexport function* uploadFileSaga() {\n  try {\n    const response = yield bridge?.sendClientEvent({\n      method: ClientEventMethod.UPLOAD_FILE,\n      params: { type: '' },\n    })\n\n    if (!response.payload?.record) return\n\n    const file: File = {\n      ...response.payload.record,\n    }\n\n    yield put(uploadFileSuccess(file))\n  } catch (e) {\n    console.error(`uploadFileSaga error: ${e}`)\n  }\n}\n\nexport function* uploadFilesSaga({ payload: { type } }: uploadFilesActionType) {\n  try {\n    const response = yield bridge?.sendClientEvent({\n      method: ClientEventMethod.UPLOAD_FILES,\n      params: { type },\n      timeout: 60 * 60 * 1000, // Waiting 1h for files upload\n    })\n\n    if (!response.payload.records.length) return\n\n    const files: File[] = response.payload.records\n\n    yield put(uploadFilesSuccess(files))\n  } catch (e) {\n    console.error(`uploadFilesSaga error: ${e}`)\n  }\n}\n\nexport function* requestLocationSaga() {\n  try {\n    yield put(setMainLoader(true))\n    const response = yield requestLocation()\n\n    if (response) {\n      yield put(setLocation(response))\n    }\n  } catch (e) {\n    console.error(`uploadFileSaga error: ${e}`)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n\nexport function* requestSelfProfileSaga() {\n  try {\n    yield put(setMainLoader(true))\n    const response = yield requestSelfProfile()\n\n    if (response) {\n      yield put(setSelfProfile(response))\n    }\n  } catch (e) {\n    console.error(`requestSelfProfileSaga error: ${e}`)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n\nexport function* sendExpressEventSaga(action: sendExpressEventActionType) {\n  try {\n    yield put(setMainLoader(true))\n\n    const response: ExpressMethodResponse = yield bridge?.sendClientEvent(action.payload)\n\n    yield put(sendExpressEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendExpressEventSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n\nexport function* sendMessageExpressEventSaga(action: sendMessageExpressEventActionType) {\n  try {\n    yield put(setMainLoader(true))\n\n    const response: ExpressMethodResponse = yield sendMessage(action.payload)\n\n    yield put(sendExpressEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendMessageExpressEventSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n\nexport function* sendExpressReadyEventSaga() {\n  try {\n    const response = yield ready(3000)\n    const meta = response?.payload?.[OPEN_SMART_APP_META_FEATURE.field]\n    const initialData = response?.payload?.initialData\n\n    if (meta || initialData?.initiator) {\n      bridge?.log?.({ response })\n      yield put(setRedirectPath(`/${OPEN_SMART_APP_META_FEATURE.method}`))\n      yield put(setMeta(response))\n      return\n    }\n\n    setRedirectPath('/')\n  } catch (e) {\n    console.error('sendExpressReadyEventSaga', e)\n  }\n}\n\nexport function* closeSmartAppSaga() {\n  try {\n    yield closeSmartApp()\n  } catch (e) {\n    console.error(`closeSmartAppSaga error: ${e}`)\n  }\n}\n\nexport function* getConnectionStatusSaga() {\n  try {\n    const response: GetConnectionStatusResponse = yield getConnectionStatus()\n\n    console.log(response)\n\n    yield put(setConnectionStatus(response.payload.connectionStatus))\n  } catch (e) {\n    console.error(`getConnectionStatusSaga error: ${e}`)\n  }\n}\n\nfunction addConnectionEventListener() {\n  return eventChannel(emitter => {\n    const connectionStatusCallback = (event: any) => {\n      console.log('Subscription event', JSON.stringify(event))\n      emitter(event.payload.connectionStatus)\n    }\n\n    subscribeClientEvents({\n      eventType: SubscriptionEventType.CONNECTION_STATUS,\n      callback: connectionStatusCallback,\n    }).then(() => {\n      console.log('Subscribed ' + SubscriptionEventType.CONNECTION_STATUS)\n    })\n\n    return () =>\n      unsubscribeClientEvents({\n        eventType: SubscriptionEventType.CONNECTION_STATUS,\n        callback: connectionStatusCallback,\n      })\n  })\n}\n\nexport function* subscribeConnectionStatusSaga() {\n  try {\n    connectionStatusChannel = yield call(addConnectionEventListener)\n\n    while (true) {\n      const connectionStatus = yield take(connectionStatusChannel)\n      yield put(connectionStatusChanged(connectionStatus))\n    }\n  } catch (e) {\n    console.error(`subscribeConnectionStatusSaga error: ${e}`)\n  }\n}\n\nexport function unsubscribeConnectionStatusSaga() {\n  if (connectionStatusChannel) {\n    connectionStatusChannel.close()\n    connectionStatusChannel = null\n  }\n}\n\nexport function* createDeeplinkSaga({ payload: { appId, meta } }: createDeeplinkActionType) {\n  try {\n    const response: CreateDeeplinkResponse = yield createDeeplink(appId, meta)\n\n    yield put(setDeeplinkUrl(response.payload.data?.deeplink))\n  } catch (e) {\n    console.error(`createDeeplinkSaga error: ${e}`)\n  }\n}\n\nexport function* openChatMessageSaga({ payload: { groupChatId, syncId } }: openChatMessageActionType) {\n  try {\n    yield openChatMessage({ groupChatId, syncId })\n  } catch (e) {\n    console.error(`openChatMessageSaga error: ${e}`)\n  }\n}\n\nexport function* clientStorageSetSaga({ payload: { key, value } }: clientStorageSetActionType) {\n  try {\n    const response: StatusResponse = yield clientStorageSet({ key, value })\n\n    const text =\n      response.payload.status === STATUS.SUCCESS\n        ? 'Saved successfully'\n        : `Error saving data to storage ${response.payload.errorCode}`\n\n    yield spawn(showToast, text)\n  } catch (e) {\n    console.error(`clientStorageSetSaga error: ${e}`)\n    yield spawn(showToast, `Error saving data to storage ${e.message}`)\n  }\n}\n\nexport function* clientStorageGetSaga({ payload: key }: clientStorageGetActionType) {\n  try {\n    const response: ClientStorageGetResponse = yield clientStorageGet({ key })\n\n    if (response.payload.status !== STATUS.SUCCESS) {\n      yield spawn(showToast, `Error getting data to storage ${response.payload.errorCode}`)\n      return\n    }\n\n    yield put(clientStorageLoaded(response.payload.value))\n  } catch (e) {\n    yield spawn(showToast, `Error getting data to storage ${e.message}`)\n    console.error(`clientStorageGetSaga error: ${e}`)\n  }\n}\n\nexport function* clientStorageRemoveSaga({ payload: key }: clientStorageRemoveActionType) {\n  try {\n    const response: StatusResponse = yield clientStorageRemove({ key })\n\n    const text =\n      response.payload.status === STATUS.SUCCESS\n        ? 'Removed successfully'\n        : `Error removing data to storage ${response.payload?.errorCode}`\n\n    yield spawn(showToast, text)\n  } catch (e) {\n    yield spawn(showToast, `Error removing data from storage ${e.message}`)\n    console.error(`clientStorageRemoveSaga error: ${e}`)\n  }\n}\n\nexport function* clientStorageClearSaga() {\n  try {\n    const response: StatusResponse = yield clientStorageClear()\n\n    const text =\n      response.payload.status === STATUS.SUCCESS\n        ? 'Cleared successfully'\n        : `Error clearing data in storage ${response.payload.errorCode}`\n\n    yield spawn(showToast, text)\n  } catch (e) {\n    yield spawn(showToast, `Error clearing data in storage ${e.message}`)\n    console.error(`clientStorageClearSaga error: ${e}`)\n  }\n}\n\nexport function* handleDeeplinkSaga({ payload: deeplink }: handleDeeplinkActionType) {\n  try {\n    const response: StatusResponse = yield handleDeeplink({ link: deeplink })\n\n    const text =\n      response.payload.status === STATUS.SUCCESS\n        ? 'Deeplink handled successfully'\n        : `Error handling deeplink ${response.payload.errorCode}`\n\n    yield spawn(showToast, text)\n  } catch (e) {\n    yield spawn(showToast, `Error handling deeplink ${e?.message || e}`)\n    console.error(`handleDeeplinkSaga error: ${e}`)\n  }\n}\n\nexport function* searchCorporatePhonebookSaga({ payload: filter }: searchCorporatePhonebookActionType) {\n  try {\n    const response = yield searchCorporatePhonebook({ filter })\n\n    if (response.payload.status !== STATUS.SUCCESS) {\n      yield spawn(showToast, `Error search corp phonebook ${response.payload.errorCode}`)\n      return\n    }\n\n    yield put(sendExpressEventSuccess(response))\n  } catch (e) {\n    yield spawn(showToast, `Error search corp phonebook ${e?.message || e}`)\n    console.error(`searchCorporatePhonebookSaga error: ${e}`)\n  }\n}\n\nexport function* searchLocalPhonebookSaga({ payload: filter }: searchLocalPhonebookActionType) {\n  try {\n    const response: SearchLocalPhonebookResponse = yield searchLocalPhonebook({ filter })\n\n    if (response.payload.status !== STATUS.SUCCESS) {\n      yield spawn(showToast, `Error search local phonebook ${response.payload.errorCode}`)\n      return\n    }\n\n    yield put(sendExpressEventSuccess(response))\n  } catch (e) {\n    yield spawn(showToast, `Error search local phonebook ${e?.message || e}`)\n    console.error(`searchLocalPhonebookSaga error: ${e}`)\n  }\n}\n\nexport function* getUnreadCounterSaga({ payload: { id, type } }: getUnreadCounterActionType) {\n  try {\n    const response: GetUnreadCounterResponse = yield getUnreadCounter({ id, type })\n\n    if (response.payload.status === STATUS.ERROR) {\n      yield spawn(showToast, `Error getting unread counter ${response.payload.errorCode}`)\n      return\n    }\n\n    yield put(setUnreadCounter(response.payload.unreadCounter))\n  } catch (e) {\n    yield spawn(showToast, `Error getting unread counter ${e?.message || e}`)\n    console.error(`getUnreadCounterSaga error: ${e}`)\n  }\n}\n\nfunction addUreadCounterEventListener(id, type) {\n  return eventChannel(emitter => {\n    const unreadCounterCallback = (event: any) => {\n      console.log('Subscription event', event)\n      emitter({\n        id: event.payload.source.id,\n        type: event.payload.source.type,\n        unreadCounter: event.payload.unreadCounter,\n      })\n    }\n\n    subscribeClientEvents({\n      eventType: SubscriptionEventType.UNREAD_COUNTER_CHANGE,\n      callback: unreadCounterCallback,\n      payload: { id, type },\n    }).then((response) => {\n      if (response.payload.status === STATUS.ERROR) {\n        unsubscribeUnreadCounterSaga({ payload: { id, type } } as subscribeUnreadCounterActionType)\n        showToast(`Error subscribing unread counter ${response.payload.errorCode}`)\n        return\n      }\n\n      console.log('Subscribed ' + SubscriptionEventType.UNREAD_COUNTER_CHANGE)\n    }).catch((e) => {\n      unsubscribeUnreadCounterSaga({ payload: { id, type } } as subscribeUnreadCounterActionType)\n      showToast(`Error subscribing unread counter ${e?.message || e}`)\n      console.error(`Error subscribing unread counter ${e?.message || e}`)\n    })\n\n    return () => {\n      unsubscribeUnreadCounterSaga({ payload: { id, type } } as subscribeUnreadCounterActionType)\n      unsubscribeClientEvents({\n        eventType: SubscriptionEventType.UNREAD_COUNTER_CHANGE,\n        callback: unreadCounterCallback,\n        payload: { id, type },\n      })\n    }\n  })\n}\n\nexport function* subscribeUnreadCounterSaga({ payload: { id, type } }: subscribeUnreadCounterActionType) {\n  try {\n    const channel = yield call(addUreadCounterEventListener, id, type)\n\n    unreadCounterChannels.push({ id: `${type}-${id}`, channel })\n\n    while (true) {\n      const { id, type, unreadCounter } = yield take(channel)\n\n      yield spawn(showToast, `Counter = ${unreadCounter} for ${type} = ${id}`)\n    }\n  } catch (e) {\n    console.error(`subscribeConnectionStatusSaga error: ${e}`)\n  }\n}\n\nexport function unsubscribeUnreadCounterSaga({ payload: { id, type } }: unsubscribeUnreadCounterActionType) {\n  const item = unreadCounterChannels.find(c => c.id === `${type}-${id}`)\n\n  if (!item) return\n\n  item.channel.close()\n  \n  const index = unreadCounterChannels.indexOf(item)\n  unreadCounterChannels.splice(index, 1)\n}\n","import { all, call, select, spawn, take } from 'redux-saga/effects'\nimport { eventChannel, EventChannel } from 'redux-saga'\nimport { Bridge as bridge, routingChanged } from '@expressms/smartapp-sdk'\nimport { AppEvent, AppState, Methods } from '../../types'\nimport { history } from '../history'\nimport { showToast } from './ui'\n\nexport function subscribeClientEvents(): EventChannel<AppEvent> {\n  return eventChannel(emit => {\n    bridge?.onReceive(event => emit(event as any))\n    return () => {}\n  })\n}\n\nexport function* watchClientEvents() {\n  const channel: EventChannel<AppEvent> = yield call(subscribeClientEvents)\n\n  while (true) {\n    const event: AppEvent = yield take(channel)\n\n    switch (event.type) {\n      case Methods.CLEAN_CACHE:\n      case Methods.MOVE_TO_ROOT:\n        yield spawn(showToast, `Event ${event.type} received`)\n        break\n      case Methods.BACK_PRESSED:\n        if (window.location.hash !== '#/') {\n          window.location.hash = '#/'\n        }\n        break\n      case Methods.IOS_SWIPE:\n        const showIosSwipeToast = yield select((state: AppState) => state.ui.showIosSwipeToast)\n        if (showIosSwipeToast) yield spawn(showToast, 'Event ios_swipe received')\n        break\n      default:\n        break\n    }\n  }\n}\n\nexport function subscribeHistoryEvents(): EventChannel<Location> {\n  return eventChannel(emit => {\n    history.listen(event => emit(event as any))\n    return () => {}\n  })\n}\n\nfunction* watchHistoryEvents() {\n  const channel: EventChannel<Location> = yield call(subscribeHistoryEvents)\n\n  while (true) {\n    const event: Location = yield take(channel)\n\n    yield spawn(handleRoutingChanged, event)\n  }\n}\n\nexport function* handleRoutingChanged(event) {\n  try {\n    const isRoot = event.pathname === '/'\n\n    yield routingChanged(isRoot)\n  } catch (e) {\n    // Not all platforms return response for routing_changed event\n  }\n}\n\nexport function* rootEventsBusSaga() {\n  yield all([watchClientEvents(), watchHistoryEvents()])\n}\n","import { all, fork, takeEvery } from 'redux-saga/effects'\nimport { loadFeaturesSaga } from './ui'\nimport { echoStaticFileSaga, sendFeatureBotEventSaga } from './bot'\nimport {\n  closeSmartAppSaga,\n  requestLocationSaga,\n  requestSelfProfileSaga,\n  sendExpressEventSaga,\n  sendExpressReadyEventSaga,\n  sendMessageExpressEventSaga,\n  uploadFileSaga,\n  uploadFilesSaga,\n  getConnectionStatusSaga,\n  subscribeConnectionStatusSaga,\n  unsubscribeConnectionStatusSaga,\n  createDeeplinkSaga,\n  openChatMessageSaga,\n  clientStorageGetSaga,\n  clientStorageSetSaga,\n  clientStorageRemoveSaga,\n  clientStorageClearSaga,\n  handleDeeplinkSaga,\n  searchCorporatePhonebookSaga,\n  searchLocalPhonebookSaga,\n  getUnreadCounterSaga,\n  subscribeUnreadCounterSaga,\n  unsubscribeUnreadCounterSaga,\n} from './client'\nimport {\n  CLIENT_STORAGE_CLEAR,\n  CLIENT_STORAGE_GET,\n  CLIENT_STORAGE_REMOVE,\n  CLIENT_STORAGE_SET,\n  CLOSE_SMART_APP,\n  CREATE_DEEPLINK,\n  ECHO_STATIC_FILE,\n  GET_CONNECTION_STATUS,\n  GET_UNREAD_COUNTER,\n  HANDLE_DEEPLINK,\n  OPEN_CHAT_MESSAGE,\n  REQUEST_LOCATION,\n  REQUEST_SELF_PROFILE,\n  SEARCH_CORPORATE_PHONEBOOK,\n  SEARCH_LOCAL_PHONEBOOK,\n  SEND_EXPRESS_EVENT,\n  SEND_EXPRESS_READY_EVENT,\n  SEND_MESSAGE_EXPRESS_EVENT,\n  SUBSCRIBE_CONNECTION_STATUS,\n  SUBSCRIBE_UNREAD_COUNTER,\n  UNSUBSCRIBE_CONNECTION_STATUS,\n  UNSUBSCRIBE_UNREAD_COUNTER,\n  UPLOAD_FILE,\n  UPLOAD_FILES,\n} from '../actions/client'\nimport { LOAD_FEATURES, SEND_FEATURE_BOT_EVENT } from '../actions/bot'\nimport { rootEventsBusSaga } from './eventBus'\n\nfunction* rootFeatureSmartAppSaga() {\n  yield all([\n    takeEvery(LOAD_FEATURES, loadFeaturesSaga),\n    takeEvery(SEND_FEATURE_BOT_EVENT, sendFeatureBotEventSaga),\n    takeEvery(ECHO_STATIC_FILE, echoStaticFileSaga),\n    takeEvery(SEND_EXPRESS_EVENT, sendExpressEventSaga),\n    takeEvery(SEND_MESSAGE_EXPRESS_EVENT, sendMessageExpressEventSaga),\n    takeEvery(SEND_EXPRESS_READY_EVENT, sendExpressReadyEventSaga),\n    takeEvery(UPLOAD_FILE, uploadFileSaga),\n    takeEvery(UPLOAD_FILES, uploadFilesSaga),\n    takeEvery(REQUEST_LOCATION, requestLocationSaga),\n    takeEvery(REQUEST_SELF_PROFILE, requestSelfProfileSaga),\n    takeEvery(CLOSE_SMART_APP, closeSmartAppSaga),\n    takeEvery(GET_CONNECTION_STATUS, getConnectionStatusSaga),\n    takeEvery(SUBSCRIBE_CONNECTION_STATUS, subscribeConnectionStatusSaga),\n    takeEvery(UNSUBSCRIBE_CONNECTION_STATUS, unsubscribeConnectionStatusSaga),\n    takeEvery(CREATE_DEEPLINK, createDeeplinkSaga),\n    takeEvery(OPEN_CHAT_MESSAGE, openChatMessageSaga),\n    takeEvery(CLIENT_STORAGE_GET, clientStorageGetSaga),\n    takeEvery(CLIENT_STORAGE_SET, clientStorageSetSaga),\n    takeEvery(CLIENT_STORAGE_REMOVE, clientStorageRemoveSaga),\n    takeEvery(CLIENT_STORAGE_CLEAR, clientStorageClearSaga),\n    takeEvery(HANDLE_DEEPLINK, handleDeeplinkSaga),\n    takeEvery(SEARCH_CORPORATE_PHONEBOOK, searchCorporatePhonebookSaga),\n    takeEvery(SEARCH_LOCAL_PHONEBOOK, searchLocalPhonebookSaga),\n    takeEvery(GET_UNREAD_COUNTER, getUnreadCounterSaga),\n    takeEvery(SUBSCRIBE_UNREAD_COUNTER, subscribeUnreadCounterSaga),\n    takeEvery(UNSUBSCRIBE_UNREAD_COUNTER, unsubscribeUnreadCounterSaga),\n  ])\n}\n\nfunction* rootSaga() {\n  yield all([\n    fork(rootFeatureSmartAppSaga),\n    fork(rootEventsBusSaga),\n  ])\n}\n\nexport default rootSaga\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport Main from './components/Main'\nimport { configureStore } from './redux/configureStore'\nimport { history } from './redux/history'\nimport './index.scss'\nimport { setupTheme } from './helpers'\n\nif ((module as any).hot) (module as any).hot.accept()\n\nsetupTheme()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      {/* @ts-ignore */}\n      <ConnectedRouter history={history}>\n        <Main />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)","import { applyMiddleware, createStore, Store } from 'redux'\nimport { routerMiddleware as createRouterMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { rootReducer } from './reducers'\nimport rootSaga from './sagas'\nimport { history } from './history'\nimport { AppState } from '../types'\n\ntype ApplicationStore = Store<AppState>\n\nexport function configureStore(): ApplicationStore {\n  const sagaMiddleware = createSagaMiddleware()\n  const routerMiddleware = createRouterMiddleware(history)\n\n  const store: ApplicationStore = createStore(\n    rootReducer,\n    undefined,\n    composeWithDevTools(applyMiddleware(sagaMiddleware, routerMiddleware))\n  )\n\n  sagaMiddleware\n    .run(rootSaga)\n    .toPromise()\n    .catch((e: Error) => console.error('Saga error', e))\n\n  return store\n}\n"],"sourceRoot":""}