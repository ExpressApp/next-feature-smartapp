{"version":3,"sources":["components/main-loader/MainLoader.tsx","types/index.ts","redux/selectors/bot.ts","assets/plus.svg","constants.ts","helpers/index.ts","redux/actions/bot.ts","assets/clear-input.svg","assets/file.svg","assets/copy.svg","components/json-editor/JsonViewer.tsx","assets/arrow-left.svg","redux/actions/client.ts","redux/selectors/client.ts","components/feature-page-header/FeaturePageHeader.tsx","components/feature-page/FeaturePage.tsx","assets/botx-icon.svg","redux/selectors/ui.ts","components/top-loader/TopLoader.tsx","components/express-notifications/ExpressNotifications.tsx","redux/actions/ui.ts","components/meta-page/MetaPage.tsx","redux/router.ts","components/scan-qr/ScanQR.tsx","components/scan-qr-page/ScanQRPage.tsx","components/feature-smartapp/FeatureSmartapp.tsx","components/notifier/Notifier.tsx","components/Main.tsx","redux/reducers/ui.ts","redux/reducers/bot.ts","redux/reducers/client.ts","redux/reducers/index.ts","redux/sagas/ui.ts","redux/sagas/bot.ts","redux/sagas/client.ts","redux/sagas/index.ts","index.tsx","redux/configureStore.ts"],"names":["MainLoader","className","EventType","BotFeatureMethod","ExpressFeatureMethod","ExpressFeatureName","ClientEventMethod","InputId","InputLabel","InputType","getFeaturesMenu","createSelector","state","bot","features","getFeatureBotResponse","response","_path","EXPRESS_NOTIFICATION_FEATURE","OPEN_SMART_APP_META_FEATURE","SCAN_QR_FEATURE","MENU_EVENT","method","params","text","INPUT_TYPE","INPUT_TEXT","INPUT_NUMBER","FILE_PICKER","ARRAY_UUID","UUID","EXPRESS_FEATURES","ADD_CONTACT","name","uiElements","id","PHONE","label","type","NAME","CREATE_PERSONAL_CHAT","HUID","GET_CONTACT","OPEN_SMARTAPP","SMARTAPP_ID","SEND_MESSAGE","MESSAGE","GROUP_CHAT_ID","USER_HUID","getFormInitialValues","reduce","acc","item","undefined","LOAD_FEATURES","LOAD_FEATURES_SUCCESS","RESET_RESPONSE","SEND_FEATURE_BOT_EVENT","SEND_FEATURE_BOT_EVENT_SUCCESS","loadFeatures","createAction","loadFeaturesSuccess","resetFeatures","sendFeatureBotEvent","botEvent","sendFeatureBotEventSuccess","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPlus","_ref","svgRef","title","titleId","props","xmlns","viewBox","fill","ref","fillRule","d","ForwardRef","SvgClearInput","transform","_g","SvgFile","width","height","x","y","rx","fontSize","fontWeight","SvgCopy","JsonViewer","container","useRef","useEffect","editor","JSONEditor","current","mode","enableTransform","json","set","button","document","createElement","innerHTML","ReactDOMServer","renderToStaticMarkup","addEventListener","obj","JSON","stringify","body","appendChild","select","execCommand","removeChild","copyToClipboardJson","setAttribute","menu","querySelector","search","insertBefore","destroy","UPLOAD_FILE","UPLOAD_FILE_SUCCESS","UPLOAD_FILES","UPLOAD_FILES_SUCCESS","REMOVE_FILE_SUCCESS","RESET_ATTACHMENTS","SEND_EXPRESS_EVENT","SEND_MESSAGE_EXPRESS_EVENT","SEND_EXPRESS_EVENT_SUCCESS","SET_EXPRESS_NOTIFICATION_SUCCESS","RESET_EXPRESS_NOTIFICATION_SUCCESS","RESET_EXPRESS_RESPONSE","SEND_EXPRESS_READY_EVENT","SET_META","uploadFile","uploadFileSuccess","file","uploadFiles","uploadFilesSuccess","files","removeFileSuccess","resetAttachments","sendExpressEvent","expressEvent","sendMessageExpressEvent","payload","sendExpressEventSuccess","setExpressNotificationSuccess","notification","resetExpressNotificationSuccess","setMeta","meta","resetExpressResponse","sendReadyEvent","getAttachments","client","attachments","getExpressResponse","getMeta","getExpressNotifications","notifications","notificaions","SvgArrowLeft","FeaturePageHeader","to","FeaturePage","dispatch","useDispatch","botResponse","useSelector","expressResponse","useState","inputs","setInputs","inputError","setInputError","isJSONViewer","setIsJSONViewer","isAllowNewInputs","SEARCH_USERS","isFilesMethod","ECHO_FILE","ECHO_FILES","includes","isUsersMethod","isExpressMethod","values","toggleIsJSONViewer","formik","useFormik","initialValues","onSubmit","formValues","filter","value","userHuid","groupChatId","message","messageBody","messageMeta","getIsSubmitButtonDisabled","map","input","index","HUIDS","FILE","FILES","onClick","attachment","fileName","fileId","classnames","disabled","handleSubmit","inputType","isShowLabel","phone","uuid","isNotEmpty","test","getIsInputError","onChange","handleChange","multiple","min","setFieldValue","last","next","result","replaceAll","checked","getTopLoader","ui","topLoader","getMainLoader","mainLoader","getRedirectPath","redirectPath","TopLoader","start","setStart","stop","setStop","finish","setFinish","stopTimeout","finishTimeout","setTimeout","clearTimeout","SvgBotxIcon","ExpressNotifications","expressNotifications","data","SET_TOP_LOADER","SET_MAIN_LOADER","SET_REDIRECT_PATH","setTopLoader","setMainLoader","setRedirectPath","MetaPage","history","createBrowserHistory","ScanQR","onScanSuccess","onScanFailure","config","fps","qrbox","disableFlip","Html5QrcodeScanner","render","ScanQRPage","decodedText","setDecodedText","decodedResult","setDecodedResult","error","setError","console","log","err","warn","FeatureSmartapp","push","path","Notifier","status","Main","load","setLoad","isMainLoader","notifier","setNotifier","bridge","onReceive","SMARTAPP_RPC","NOTIFICATION","reducers","handleActions","rootReducer","combineReducers","router","connectRouter","loadFeaturesSaga","put","sendBotEvent","sendFeatureBotEventSaga","action","uploadFileSaga","uploadFilesSaga","sendExpressEventSaga","sendMessageExpressEventSaga","sendExpressReadyEventSaga","sendClientEvent","record","records","sendMessage","ready","rootSaga","all","takeEvery","ReactDOM","StrictMode","store","sagaMiddleware","createSagaMiddleware","routerMiddleware","createRouterMiddleware","createStore","composeWithDevTools","applyMiddleware","run","toPromise","catch","e","configureStore","getElementById"],"mappings":"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","file":"static/js/main.77b4c236.chunk.js","sourcesContent":["import React from 'react'\nimport './MainLoader.scss'\n\nexport default function MainLoader() {\n  return (\n    <div className='main-loader'>\n      <div className='main-loader__spinner'>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  )\n}\n","import { RouterState } from 'connected-react-router'\n\nexport enum EventType {\n  SMARTAPP_RPC = 'smartapp_rpc',\n  NOTIFICATION = 'notification',\n  OPEN_SMARTAPP_META = 'open_smart_app_meta',\n}\n\nexport enum BotFeatureMethod {\n  ECHO = 'echo',\n  UPDATE_APP_COUNTER = 'update_app_counter',\n  SEND_NOTIFICATION = 'send_notification',\n  ECHO_FILE = 'echo_file',\n  ECHO_FILES = 'echo_files',\n  SEARCH_USERS = 'search_users',\n}\n\nexport enum ExpressFeatureMethod {\n  ADD_CONTACT = 'add_contact',\n  CREATE_PERSONAL_CHAT = 'create_personal_chat',\n  SEND_MESSAGE = 'send_message',\n  GET_CONTACT = 'get_contact',\n  OPEN_SMARTAPP = 'open_smart_app',\n}\n\nexport enum ExpressFeatureName {\n  ADD_CONTACT = 'Add contact',\n  CREATE_PERSONAL_CHAT = 'Create personal chat',\n  SEND_MESSAGE = 'Send message to group chat or user',\n  GET_CONTACT = 'Get contact',\n  OPEN_SMARTAPP = 'Open SmartApp',\n}\n\nexport enum ClientEventMethod {\n  READY = 'ready',\n  UPLOAD_FILE = 'upload_file',\n  UPLOAD_FILES = 'upload_files',\n}\n\nexport interface BotEvent {\n  method: BotFeatureMethod | 'menu'\n  params: {\n    [key: string]: any\n  }\n  files?: File[]\n  timeout?: number\n}\n\nexport interface ExpressEvent {\n  method: ExpressFeatureMethod\n  params: {\n    [key: string]: any\n  }\n}\n\nexport interface SendMessageActionPayload {\n  userHuid: string | null,\n  groupChatId: string | null,\n  messageBody: string,\n  messageMeta?: {}\n}\n\nexport enum InputId {\n  TEXT = 'text',\n  COUNT = 'count',\n  DELAY = 'delay',\n  FILE = 'file',\n  FILES = 'files',\n  HUIDS = 'huids',\n  PHONE = 'phone',\n  NAME = 'name',\n  HUID = 'huid',\n  SMARTAPP_ID = 'appId',\n  MESSAGE = 'message',\n  GROUP_CHAT_ID = 'groupChatId',\n  USER_HUID = 'userHuid',\n}\n\nexport enum InputLabel {\n  TEXT = 'Text',\n  COUNT = 'Count',\n  DELAY = 'Delay',\n  FILE = 'File',\n  FILES = 'Files',\n  HUIDS = 'Huids',\n  PHONE = 'Phone',\n  NAME = 'Name',\n  HUID = 'Huid',\n  SMARTAPP_ID = 'Smartapp ID',\n  MESSAGE = 'Message',\n  GROUP_CHAT_ID = 'Group chat id',\n  USER_HUID = 'User huid'\n}\n\nexport enum InputType {\n  INPUT_TEXT = 'INPUT_TEXT',\n  INPUT_NUMBER = 'INPUT_NUMBER',\n  FILE_PICKER = 'FILE_PICKER',\n  ARRAY_UUID = 'ARRAY_UUID',\n  UUID = 'UUID',\n}\n\nexport interface Input {\n  id: InputId | string\n  label: InputLabel\n  type: InputType\n}\n\nexport interface BotFeature {\n  method: BotFeatureMethod\n  name: string\n  uiElements: Input[]\n}\n\nexport type ExpressFeature = BotFeature | {\n  method: ExpressFeatureMethod\n  name: ExpressFeatureName\n  uiElements: Input[]\n}\n\nexport type BotFeatures = BotFeature[] | null\n\nexport interface BotMethodResponse {\n  type: EventType.SMARTAPP_RPC | string,\n  files: File[]\n  payload: {\n    result: string,\n    status: 'ok' | 'error'\n  }\n}\n\nexport type BotFeaturesResponse = BotMethodResponse & {\n  payload: {\n    result: BotFeature[]\n  }\n}\n\nexport interface ExpressMethodResponse {\n  ref?: string\n  payload: any\n}\n\nexport interface ExpressNotification {\n  ref: null\n  type: 'notification'\n  data: object\n}\n\nexport interface File {\n  type?: string\n  file?: string\n  fileMimeType?: string\n  fileName?: string\n  filePreview?: string\n  filePreviewHeight?: number\n  filePreviewWidth?: number\n  fileSize: number\n  fileHash?: string\n  fileEncryptionAlgo?: string\n  chunkSize?: number\n  fileId?: any\n  key?: object\n}\n\nexport interface UIState {\n  topLoader: boolean\n  mainLoader: boolean\n  redirectPath: string\n}\n\nexport interface BotState {\n  features: BotFeatures\n  response:  BotMethodResponse | null\n  notifications: BotMethodResponse[] | null\n}\n\nexport interface ClientState {\n  attachments: File[] | null\n  response: ExpressMethodResponse | null\n  meta: ExpressMethodResponse | null\n  notifications: ExpressNotification[] | null\n}\n\nexport interface AppState {\n  ui: UIState\n  bot: BotState\n  client: ClientState\n  router: RouterState\n}\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getFeaturesMenu = createSelector(\n  [(state: AppState) => state.bot.features],\n  features => features,\n)\n\nexport const getFeatureBotResponse = createSelector(\n  [(state: AppState) => state.bot.response],\n  response => response,\n)\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPlus(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M13 11V4h-2v7H4v2h7v7h2v-7h7v-2h-7z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.97a40cd5.svg\";\nexport { ForwardRef as ReactComponent };","import {\n  ExpressFeature,\n  ExpressFeatureMethod,\n  ExpressFeatureName,\n  InputId,\n  InputLabel,\n  InputType,\n} from './types'\n\nexport const EXPRESS_NOTIFICATION_FEATURE = {\n  method: 'notification',\n  name: 'Express Notification',\n}\n\nexport const OPEN_SMART_APP_META_FEATURE = {\n  name: 'Open Smart App Meta',\n  method: 'open_smart_app',\n  field: 'openSmartAppMeta',\n}\n\nexport const SCAN_QR_FEATURE = {\n  name: 'Scan QR',\n  method: 'scan_qr',\n}\n\nexport const MENU_EVENT: any = {\n  method: 'menu',\n  params: {\n    text: 'menu',\n  },\n}\n\nexport const INPUT_TYPE: Record<InputType, string> = {\n  INPUT_TEXT: 'text',\n  INPUT_NUMBER: 'number',\n  FILE_PICKER: 'file',\n  ARRAY_UUID: 'text',\n  UUID: 'text'\n}\n\nexport const EXPRESS_FEATURES: ExpressFeature[] = [\n  {\n    method: ExpressFeatureMethod.ADD_CONTACT,\n    name: ExpressFeatureName.ADD_CONTACT,\n    uiElements: [\n      {\n        id: InputId.PHONE,\n        label: InputLabel.PHONE,\n        type: InputType.INPUT_TEXT,\n      },\n      {\n        id: InputId.NAME,\n        label: InputLabel.NAME,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.CREATE_PERSONAL_CHAT,\n    name: ExpressFeatureName.CREATE_PERSONAL_CHAT,\n    uiElements: [{\n      id: InputId.HUID,\n      label: InputLabel.HUID,\n      type: InputType.UUID,\n    }],\n  },\n  {\n    method: ExpressFeatureMethod.GET_CONTACT,\n    name: ExpressFeatureName.GET_CONTACT,\n    uiElements: [{\n      id: InputId.PHONE,\n      label: InputLabel.PHONE,\n      type: InputType.INPUT_TEXT,\n    }],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_SMARTAPP,\n    name: ExpressFeatureName.OPEN_SMARTAPP,\n    uiElements: [{\n      id: InputId.SMARTAPP_ID,\n      label: InputLabel.SMARTAPP_ID,\n      type: InputType.INPUT_TEXT,\n    }],\n  },\n  {\n    method: ExpressFeatureMethod.SEND_MESSAGE,\n    name: ExpressFeatureName.SEND_MESSAGE,\n    uiElements: [{\n      id: InputId.MESSAGE,\n      label: InputLabel.MESSAGE,\n      type: InputType.INPUT_TEXT,\n    }, {\n      id: InputId.GROUP_CHAT_ID,\n      label: InputLabel.GROUP_CHAT_ID,\n      type: InputType.UUID,\n    }, {\n      id: InputId.USER_HUID,\n      label: InputLabel.USER_HUID,\n      type: InputType.UUID,\n    }],\n  },\n]\n","import { Input } from '../types'\n\nexport interface FormValues {\n  [key: string]: string | undefined\n}\n\nexport const getFormInitialValues: (uiElements: Input[]) => FormValues = uiElements => {\n  return uiElements?.reduce((acc: FormValues, item) => {\n    acc[item.id] = undefined\n    return acc\n  }, {})\n}\n","import { createAction } from 'redux-actions'\nimport { BotEvent, BotFeatures, BotMethodResponse, ExpressMethodResponse } from '../../types'\n\nexport const LOAD_FEATURES = 'LOAD_FEATURES'\nexport const LOAD_FEATURES_SUCCESS = 'LOAD_FEATURES_SUCCESS'\nexport const RESET_RESPONSE = 'RESET_RESPONSE'\nexport const SEND_FEATURE_BOT_EVENT = 'SEND_FEATURE_BOT_EVENT'\nexport const SEND_FEATURE_BOT_EVENT_SUCCESS = 'SEND_FEATURE_BOT_EVENT_SUCCESS'\n\nexport const loadFeatures = createAction(LOAD_FEATURES, () => {\n})\nexport const loadFeaturesSuccess = createAction(LOAD_FEATURES_SUCCESS, (features: BotFeatures) => features)\nexport const resetFeatures = createAction(RESET_RESPONSE, () => {\n})\nexport const sendFeatureBotEvent = createAction(SEND_FEATURE_BOT_EVENT, (botEvent: BotEvent) => botEvent)\nexport const sendFeatureBotEventSuccess = createAction(\n  SEND_FEATURE_BOT_EVENT_SUCCESS,\n  (response: BotMethodResponse | ExpressMethodResponse | null) => response,\n)\n\nexport type loadFeaturesSuccessActionType = ReturnType<typeof loadFeaturesSuccess>\nexport type sendFeatureBotEventSuccessActionType = ReturnType<typeof sendFeatureBotEventSuccess>\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgClearInput(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M13 11V3h-2v8H3v2h8v8h2v-8h8v-2h-8z\",\n    transform: \"rotate(45 12 12)\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgClearInput);\nexport default __webpack_public_path__ + \"static/media/clear-input.6a69fb5e.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFile(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 22 26\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    transform: \"translate(-1)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#595959\",\n    d: \"M5 0C3.73 0 2.44 1.225 2.5 2.407V22.63c-.06 1.784 1.23 3.007 2.5 2.89h15c1.71.117 3-1.106 3-2.89V6.26L16 0H5zm0 24.556c-.298-.117-1.298-.59-1.5-1.445V2.41C3.702 2.148 4.702 1.2 5 .963h10.5v3.852c.01 1.467.903 2.315 2 1.926H22v15.89c-.262.864-.76 1.81-2 1.928H5z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18.5,\n    height: 9.148,\n    x: 1,\n    y: 12.519,\n    fill: \"#5C5C5C\",\n    rx: 2\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    fill: \"#FFF\",\n    fontSize: 5.5,\n    fontWeight: 600\n  }, /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 4.302,\n    y: 19\n  }, \"\\n        FILE\\n      \")))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFile);\nexport default __webpack_public_path__ + \"static/media/file.1a445bcf.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCopy(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M10.667.667h-8c-.734 0-1.334.6-1.334 1.333v9.333h1.334V2h8V.667zm2 2.666H5.333C4.6 3.333 4 3.933 4 4.667V14c0 .733.6 1.333 1.333 1.333h7.334c.733 0 1.333-.6 1.333-1.333V4.667c0-.734-.6-1.334-1.333-1.334zm0 10.667H5.333V4.667h7.334V14z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.55b37fcd.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useRef } from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport { ReactComponent as CopyIcon } from '../../assets/copy.svg'\nimport JSONEditor from 'jsoneditor'\nimport '../../../node_modules/jsoneditor/dist/jsoneditor.min.css'\nimport './JsonViewer.scss'\n\nexport default function JsonViewer(props) {\n  const container = useRef(null)\n\n  const copyToClipboardJson = obj => {\n    const container = document.createElement('textarea')\n\n    container.innerHTML = JSON.stringify(obj, null, '  ')\n    document.body.appendChild(container)\n\n    container.select()\n    document.execCommand('copy')\n    document.body.removeChild(container)\n  }\n\n  useEffect(() => {\n    const editor = new JSONEditor(container.current, { mode: 'view', enableTransform: true })\n\n    if (props.json) editor.set(props.json)\n\n    const button = document.createElement('button')\n    button.className = 'copy-to-clipboard'\n    button.innerHTML = ReactDOMServer.renderToStaticMarkup(<CopyIcon height='22' width='22' />)\n    button.addEventListener('click', () => copyToClipboardJson(props.json))\n    button.setAttribute('title', 'Copy To Clipboard')\n\n    const menu = document.querySelector('.jsoneditor-menu')\n    const search = document.querySelector('.jsoneditor-menu .jsoneditor-search')\n\n    menu.insertBefore(button, search)\n\n    return () => editor.destroy()\n  }, [props.json])\n\n  return <div className='json-viewer' ref={container} />\n}\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgArrowLeft(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.828 11l5.586-5.586L12 4l-8 8 8 8 1.414-1.414L7.828 13H20v-2z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.fa74ab51.svg\";\nexport { ForwardRef as ReactComponent };","import { createAction } from 'redux-actions'\nimport { ExpressEvent, ExpressMethodResponse, ExpressNotification, File, SendMessageActionPayload } from '../../types'\n\nexport const UPLOAD_FILE = 'UPLOAD_FILE'\nexport const UPLOAD_FILE_SUCCESS = 'UPLOAD_FILE_SUCCESS'\nexport const UPLOAD_FILES = 'UPLOAD_FILES'\nexport const UPLOAD_FILES_SUCCESS = 'UPLOAD_FILES_SUCCESS'\nexport const REMOVE_FILE = 'REMOVE_FILE'\nexport const REMOVE_FILE_SUCCESS = 'REMOVE_FILE_SUCCESS'\nexport const RESET_ATTACHMENTS = 'RESET_ATTACHMENTS'\nexport const SEND_EXPRESS_EVENT = 'SEND_EXPRESS_EVENT'\nexport const SEND_MESSAGE_EXPRESS_EVENT = 'SEND_MESSAGE_EXPRESS_EVENT'\nexport const SEND_EXPRESS_EVENT_SUCCESS = 'SEND_EXPRESS_EVENT_SUCCESS'\nexport const SET_EXPRESS_NOTIFICATION_SUCCESS = 'SET_NOTIFICATION_SUCCESS'\nexport const RESET_EXPRESS_NOTIFICATION_SUCCESS = 'RESET_EXPRESS_NOTIFICATION_SUCCESS'\nexport const RESET_EXPRESS_RESPONSE = 'RESET_EXPRESS_RESPONSE'\nexport const SEND_EXPRESS_READY_EVENT = 'SEND_EXPRESS_READY_EVENT'\nexport const SET_META = 'SET_META'\n\nexport const uploadFile = createAction(UPLOAD_FILE, (type: string = '') => ({ type }))\nexport const uploadFileSuccess = createAction(UPLOAD_FILE_SUCCESS, (file: File) => (file))\nexport const uploadFiles = createAction(UPLOAD_FILES, (type: string = '') => ({ type }))\nexport const uploadFilesSuccess = createAction(UPLOAD_FILES_SUCCESS, (files: File[]) => (files))\nexport const removeFile = createAction(REMOVE_FILE, (id: number) => id)\nexport const removeFileSuccess = createAction(REMOVE_FILE_SUCCESS, (id: number) => id)\nexport const resetAttachments = createAction(RESET_ATTACHMENTS, () => {})\nexport const sendExpressEvent = createAction(SEND_EXPRESS_EVENT, (expressEvent: ExpressEvent) => expressEvent)\nexport const sendMessageExpressEvent = createAction(\n  SEND_MESSAGE_EXPRESS_EVENT, (payload: SendMessageActionPayload) => payload\n)\nexport const sendExpressEventSuccess = createAction(\n  SEND_EXPRESS_EVENT_SUCCESS,\n  (response: ExpressMethodResponse | null) => response,\n)\nexport const setExpressNotificationSuccess = createAction(\n  SET_EXPRESS_NOTIFICATION_SUCCESS,\n  (notification: ExpressNotification | null) => notification,\n)\nexport const resetExpressNotificationSuccess = createAction(\n  RESET_EXPRESS_NOTIFICATION_SUCCESS,\n  () => {\n  },\n)\nexport const setMeta = createAction(\n  SET_META,\n  (meta: ExpressMethodResponse | null) => meta,\n)\nexport const resetExpressResponse = createAction(RESET_EXPRESS_RESPONSE, () => {})\nexport const sendReadyEvent = createAction(SEND_EXPRESS_READY_EVENT, () => {})\n\nexport type uploadFileActionType = ReturnType<typeof uploadFile>\nexport type uploadFileSuccessActionType = ReturnType<typeof uploadFileSuccess>\nexport type uploadFilesActionType = ReturnType<typeof uploadFiles>\nexport type uploadFilesSuccessActionType = ReturnType<typeof uploadFilesSuccess>\nexport type removeFileActionType = ReturnType<typeof removeFile>\nexport type removeFileSuccessActionType = ReturnType<typeof removeFileSuccess>\nexport type sendExpressEventActionType = ReturnType<typeof sendExpressEvent>\nexport type sendMessageExpressEventActionType = ReturnType<typeof sendMessageExpressEvent>\nexport type sendExpressEventSuccessActionType = ReturnType<typeof sendExpressEventSuccess>\nexport type setExpressNotificationSuccessActionType = ReturnType<typeof setExpressNotificationSuccess>\nexport type setMetaActionType = ReturnType<typeof setMeta>\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getAttachments = createSelector(\n  [(state: AppState) => state.client.attachments],\n  features => features,\n)\n\nexport const getExpressResponse = createSelector(\n  [(state: AppState) => state.client.response],\n  response => response,\n)\n\nexport const getMeta = createSelector(\n  [(state: AppState) => state.client.meta],\n  meta => meta,\n)\n\nexport const getExpressNotifications = createSelector(\n  [(state: AppState) => state.client.notifications],\n  notificaions => notificaions,\n)\n","import { Link } from 'react-router-dom'\nimport { ReactComponent as ArrowLeft } from '../../../src/assets/arrow-left.svg'\nimport './FeaturePageHeader.scss'\n\nexport default function FeaturePageHeader({ name }) {\n  return (\n    <div className='feature-page__header'>\n      <Link className='btn--arrow-left' to='/'>\n        <ArrowLeft className='icon--arrow-left' height={24} width={24} />\n      </Link>\n      <div className='feature-page__info'>\n        <span className='feature-page__title'>{name} method</span>\n      </div>\n    </div>\n  )\n}\n","import {\n  BotFeature,\n  BotFeatureMethod,\n  ExpressFeature,\n  ExpressFeatureMethod,\n  Input,\n  InputId,\n  InputLabel,\n  InputType,\n} from '../../types'\nimport './FeaturePage.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { INPUT_TYPE } from '../../constants'\nimport { useFormik } from 'formik'\nimport { FormValues, getFormInitialValues } from '../../helpers'\nimport { getFeatureBotResponse } from '../../redux/selectors/bot'\nimport { resetFeatures, sendFeatureBotEvent, sendFeatureBotEventSuccess } from '../../redux/actions/bot'\nimport { useEffect, useState } from 'react'\nimport { ReactComponent as PlusIcon } from '../../assets/plus.svg'\nimport { ReactComponent as RemoveIcon } from '../../assets/clear-input.svg'\nimport { ReactComponent as FileIcon } from '../../assets/file.svg'\nimport JsonViewer from '../json-editor/JsonViewer'\nimport classnames from 'classnames'\nimport {\n  removeFileSuccess,\n  resetAttachments,\n  resetExpressResponse,\n  sendExpressEvent,\n  sendMessageExpressEvent,\n  uploadFile,\n  uploadFiles,\n} from '../../redux/actions/client'\nimport { getAttachments, getExpressResponse } from '../../redux/selectors/client'\nimport { ReactMarkdown } from 'react-markdown/lib/react-markdown'\nimport FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\n\nexport default function FeaturePage({ name, method, uiElements = [] }: BotFeature | ExpressFeature) {\n  const dispatch = useDispatch()\n\n  const botResponse = useSelector(getFeatureBotResponse)\n  const expressResponse = useSelector(getExpressResponse)\n  const attachments = useSelector(getAttachments)\n\n  const [inputs, setInputs] = useState<Input[]>([])\n  const [inputError, setInputError] = useState('')\n  const [isJSONViewer, setIsJSONViewer] = useState(false)\n\n  const isAllowNewInputs = method === BotFeatureMethod.SEARCH_USERS\n  const isFilesMethod = [BotFeatureMethod.ECHO_FILE, BotFeatureMethod.ECHO_FILES]\n    .includes(method as BotFeatureMethod)\n  const isUsersMethod = BotFeatureMethod.SEARCH_USERS === method\n  const isExpressMethod = Object\n    .values(ExpressFeatureMethod)\n    .includes(method as ExpressFeatureMethod)\n\n  const handleClickPlus = () => {\n    const last = inputs[inputs.length - 1]\n    const { id } = last\n    const next: Input = {\n      ...last,\n      id: id.includes(InputId.HUIDS) ? `${id}${inputs.length}` : id,\n    }\n\n    setInputs(inputs => [...inputs, next])\n  }\n\n  const handleFilesSubmit = () => {\n    if (attachments) {\n      const botFeatureMethod = method as BotFeatureMethod\n\n      dispatch(\n        sendFeatureBotEvent({\n          method: botFeatureMethod,\n          params: {},\n          files: attachments,\n        }),\n      )\n    }\n  }\n\n  const handleFormSubmit = (formValues: FormValues) => {\n    const values = Object.values(formValues).filter(value => value)\n    if (!values.length) return\n\n    if (isExpressMethod) {\n      if (method === ExpressFeatureMethod.SEND_MESSAGE) {\n        const { userHuid, groupChatId, message } = formValues\n        dispatch(sendMessageExpressEvent({\n          userHuid,\n          groupChatId,\n          messageBody: message,\n          messageMeta: {}\n        }))\n      } else {\n        dispatch(sendExpressEvent({\n          method: method as ExpressFeatureMethod,\n          params: formValues,\n        }))\n      }\n    } else {\n      dispatch(\n        sendFeatureBotEvent({\n          method: method as BotFeatureMethod,\n          params: isUsersMethod ? { 'huids': values } : formValues,\n        }),\n      )\n    }\n  }\n\n  const handleUploadFilesClick = () => {\n    if (method === BotFeatureMethod.ECHO_FILE) {\n      dispatch(uploadFile())\n    } else if (method === BotFeatureMethod.ECHO_FILES) {\n      dispatch(uploadFiles())\n    }\n  }\n\n  const handleRemoveFile = (fileId: number) => {\n    dispatch(removeFileSuccess(fileId))\n    if (attachments?.length === 1)\n      dispatch(sendFeatureBotEventSuccess(null))\n  }\n\n  const toggleIsJSONViewer = () => setIsJSONViewer(!isJSONViewer)\n\n  const formik = useFormik({\n    initialValues: getFormInitialValues(inputs),\n    onSubmit: handleFormSubmit,\n  })\n\n  const getIsSubmitButtonDisabled = () =>\n    isFilesMethod ? !attachments?.length : !Object.values(formik.values).filter(value => value).length\n\n  useEffect(() => {\n    const inputs: Input[] = uiElements.map((input, index) => ({\n      ...input,\n      id: input.id.includes(InputId.HUIDS) ? `${input.id}${index}` : input.id,\n    }))\n    setInputs(inputs)\n    return () => {\n      dispatch(resetFeatures())\n      dispatch(resetAttachments())\n      dispatch(resetExpressResponse())\n    }\n  }, [uiElements, dispatch])\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={name} />\n        {isFilesMethod ? (\n          <div className='feature-page__form'>\n            <span className='feature-page__title'>\n              {method === BotFeatureMethod.ECHO_FILE ? InputLabel.FILE : InputLabel.FILES}\n            </span>\n            <button className='btn--attach' onClick={handleUploadFilesClick}>\n              {method === BotFeatureMethod.ECHO_FILE ? 'Attach file' : 'Attach files'}\n            </button>\n            {!!attachments?.length && (\n              <div className='attachments'>\n                {attachments.map(attachment => (\n                  <span className='attachments__item' key={attachment.fileId}>\n                    <span>{attachment.fileName}</span>\n                    <RemoveIcon\n                      width={20}\n                      height={20}\n                      className='btn--remove-attachment'\n                      onClick={() => handleRemoveFile(attachment.fileId)}\n                    />\n                  </span>\n                ))}\n              </div>\n            )}\n            <div className='form-buttons'>\n              <button\n                className={classnames({\n                  'btn--submit': true,\n                  'btn--submit-disabled': getIsSubmitButtonDisabled(),\n                })}\n                onClick={handleFilesSubmit}\n                disabled={getIsSubmitButtonDisabled()}\n                type=\"button\"\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        ) : (\n          <form className='feature-page__form' onSubmit={formik.handleSubmit}>\n            {inputs.map(({ id, type, label }, index) => {\n              const inputType = INPUT_TYPE[type]\n\n              const getIsInputError = () => {\n                const isUuid = (uuid: string) => /[0-9a-fA-F-]{36}/.test(uuid)\n                const isPhone = (phone: string) => /(^8|7|\\+7)((\\d{10})|(\\s\\(\\d{3}\\)\\s\\d{3}\\s\\d{2}\\s\\d{2}))/.test(phone)\n                const isNotEmpty = formik.values[id]\n\n                if (isUsersMethod || type === InputType.UUID) {\n                  return isNotEmpty && !isUuid(formik.values[id])\n                } else if (id === InputId.PHONE) {\n                  return isNotEmpty && !isPhone(formik.values[id])\n                }\n              }\n              const isShowLabel = isUsersMethod ? index === 0 : true\n\n              return (\n                <div key={id}>\n                  {isShowLabel && <span className='feature-page__title'>{label}</span>}\n                  <input\n                    className={classnames({\n                      input: true,\n                      'input--error': getIsInputError(),\n                    })}\n                    onChange={formik.handleChange}\n                    value={formik.values[id] || ''}\n                    type={inputType}\n                    multiple={id === InputId.FILES}\n                    id={id}\n                    min={0}\n                  />\n                  {inputType === 'text' && formik.values[id] && (\n                    <RemoveIcon\n                      className='btn--clear-input'\n                      onClick={() => {\n                        formik.setFieldValue(id, '')\n                        inputError && setInputError('')\n                      }}\n                      height={20}\n                      width={20}\n                    />\n                  )}\n                </div>\n              )\n            })}\n            <div className='form-buttons'>\n              <button\n                className={classnames({\n                  'btn--submit': true,\n                  'btn--submit-disabled': getIsSubmitButtonDisabled(),\n                })}\n                disabled={getIsSubmitButtonDisabled()}\n                type=\"submit\"\n              >\n                Submit\n              </button>\n              {isAllowNewInputs && (\n                <PlusIcon\n                  title='Add new input'\n                  className='btn--plus'\n                  onClick={handleClickPlus}\n                  height={24}\n                  width={24}\n                />\n              )}\n            </div>\n          </form>\n        )}\n      </div>\n      {botResponse && (\n        <>\n          <div className='response-markdown'>\n            <ReactMarkdown>\n              {botResponse?.payload?.result?.replaceAll('\\n', '\\n\\r')}\n            </ReactMarkdown>\n          </div>\n          {method === BotFeatureMethod.ECHO_FILES && (\n            <div className='response-files'>\n              Files:\n              {botResponse?.files?.map(() => <FileIcon className='response-files__file' height={20} width={20} />)}\n            </div>\n          )}\n          {\n            botResponse && (\n              <div>\n                <div className='response-markdown-form'>\n                  <input\n                    checked={isJSONViewer}\n                    className='form-toggler__input'\n                    id='form-toggler'\n                    type='checkbox'\n                    onChange={toggleIsJSONViewer}\n                  />\n                  <span\n                    className='form-toggler'\n                    onClick={toggleIsJSONViewer}\n                  >\n                    Show JSON Viewer\n                  </span>\n                </div>\n                {isJSONViewer && (\n                  <div className='response-json'>\n                    <JsonViewer height={24} json={botResponse} />\n                  </div>\n                )}\n              </div>\n            )\n          }\n        </>\n      )}\n      {expressResponse && (\n        <div className='response-express'>\n          {JSON.stringify(expressResponse?.payload, null, 2)}\n        </div>\n      )}\n    </>\n  )\n}\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBotxIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 12 12\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.379 7.017v2.775h-.55A.816.816 0 0 1 0 8.989V7.427c0-.443.371-.803.829-.803h.566c-.01.13-.016.261-.016.393zm9.792-.393c.458 0 .829.36.829.803V8.99a.816.816 0 0 1-.829.803h-.55V7.017c0-.132-.006-.263-.016-.393h.566zM10.047 9.873v-2.82c0-.132-.006-.263-.018-.393C9.857 4.651 8.377 3.043 6.5 2.8h-.997c-1.88.244-3.36 1.853-3.532 3.863-.01.129-.017.26-.017.392v4.754h8.094V9.873zm-5.998-.66c-.608 0-1.101-.522-1.101-1.167 0-.644.493-1.166 1.1-1.166.609 0 1.102.522 1.102 1.166 0 .645-.493 1.167-1.101 1.167zm2.96-1.167c0-.644.493-1.166 1.1-1.166.609 0 1.102.522 1.102 1.166 0 .645-.493 1.167-1.101 1.167s-1.101-.522-1.101-1.167z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBotxIcon);\nexport default __webpack_public_path__ + \"static/media/botx-icon.cf9274ad.svg\";\nexport { ForwardRef as ReactComponent };","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getTopLoader = createSelector(\n  [(state: AppState) => state.ui.topLoader],\n  topLoader => topLoader\n)\n\nexport const getMainLoader = createSelector(\n  [(state: AppState) => state.ui.mainLoader],\n  mainLoader => mainLoader\n)\n\nexport const getRedirectPath = createSelector(\n  [(state: AppState) => state.ui.redirectPath],\n  redirectPath => redirectPath\n)\n","import React, { useEffect, useState, useRef } from 'react'\nimport classnames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport './TopLoader.scss'\nimport { getTopLoader } from '../../redux/selectors/ui'\n\nexport default function TopLoader() {\n  const topLoader = useSelector(getTopLoader)\n\n  const [start, setStart] = useState(false)\n  const [stop, setStop] = useState(false)\n  const [finish, setFinish] = useState(false)\n\n  const stopTimeout = useRef<NodeJS.Timeout | null>(null)\n  const finishTimeout = useRef<NodeJS.Timeout | null>(null)\n\n  useEffect(() => {\n    if (topLoader && !start) {\n      setStart(true)\n    }\n\n    if (!topLoader && start) {\n      setStart(false)\n      setStop(true)\n\n      stopTimeout.current = setTimeout(() => {\n        setFinish(true)\n\n        finishTimeout.current = setTimeout(() => {\n          setStop(false)\n          setFinish(false)\n        }, 100)\n      }, 200)\n    }\n  }, [topLoader, start])\n\n  useEffect(() => {\n    return () => {\n      if (stopTimeout.current) clearTimeout(stopTimeout.current)\n      if (finishTimeout.current) clearTimeout(finishTimeout.current)\n    }\n  }, [])\n\n  return (\n    <div className={classnames({ 'top-loader': true, 'top-loader--enabled': start && !finish })}>\n      <div\n        className={classnames({\n          'top-loader__bar': true,\n          'top-loader__bar--start': start,\n          'top-loader__bar--stop': stop,\n          'top-loader__bar--finish': finish,\n        })}\n      />\n    </div>\n  )\n}\n","import FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport { EXPRESS_NOTIFICATION_FEATURE } from '../../constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getExpressNotifications } from '../../redux/selectors/client'\nimport './ExpressNotifications.scss'\nimport { resetExpressNotificationSuccess } from '../../redux/actions/client'\n\nexport default function ExpressNotifications() {\n  const dispatch = useDispatch()\n  const expressNotifications = useSelector(getExpressNotifications)\n  const handleClear = () => {\n    dispatch(resetExpressNotificationSuccess())\n  }\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={EXPRESS_NOTIFICATION_FEATURE.name} />\n        <div className='feature-page__notifications'>\n          {!!expressNotifications.length ? (\n            <>\n              <div\n                className='notifications__clear-button'\n                onClick={handleClear}\n                title='Clear notifications'\n              >\n                Clear\n              </div>\n              {expressNotifications.map((item, i) => (\n                <div className='notifications__item' key={i}>\n                  {JSON.stringify(item?.data, null, 2)}\n                </div>\n              ))}\n            </>\n          ) : (\n            <div className='feature-page__notifications-placeholder'>\n              New notifications will appear here...\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  )\n}\n","import { createAction } from 'redux-actions'\n\nexport const SET_TOP_LOADER = 'SET_TOP_LOADER'\nexport const SET_MAIN_LOADER = 'SET_MAIN_LOADER'\nexport const SET_REDIRECT_PATH = 'SET_REDIRECT_PATH'\n\nexport const setTopLoader = createAction(SET_TOP_LOADER, (topLoader: boolean) => topLoader)\nexport const setMainLoader = createAction(SET_MAIN_LOADER, (mainLoader: boolean) => mainLoader)\nexport const setRedirectPath = createAction(SET_REDIRECT_PATH, (redirectPath: string) => redirectPath)\n\nexport type setTopLoaderActionType = ReturnType<typeof setTopLoader>\nexport type setMainLoaderActionType = ReturnType<typeof setMainLoader>\nexport type setRedirectPathActionType = ReturnType<typeof setRedirectPath>\n","import FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport { OPEN_SMART_APP_META_FEATURE } from '../../constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\nimport { setRedirectPath } from '../../redux/actions/ui'\nimport { getMeta } from '../../redux/selectors/client'\nimport { setMeta } from '../../redux/actions/client'\n\nexport default function MetaPage() {\n  const dispatch = useDispatch()\n  const meta = useSelector(getMeta)\n\n  useEffect(() => {\n    return () => {\n      dispatch(setRedirectPath(''))\n      dispatch(setMeta(null))\n    }\n  }, [dispatch])\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={OPEN_SMART_APP_META_FEATURE.name} />\n        {meta && (\n          <div className='response-express'>\n            {JSON.stringify(meta.payload, null, 2)}\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n","import { createBrowserHistory } from 'history'\n\n// Create history singleton\nexport const history = createBrowserHistory()\n","import { useEffect, useRef } from 'react'\nimport { Html5QrcodeScanner } from 'html5-qrcode'\nimport './ScanQR.scss'\n\nexport default function ScanQR({\n  onScanSuccess,\n  onScanFailure,\n}: {\n  onScanSuccess: (text: string, result: any) => void\n  onScanFailure: (error: string) => void\n}) {\n  const config = useRef<any>({\n    fps: 10,\n    qrbox: 250,\n    disableFlip: true,\n  })\n\n  useEffect(() => {\n    const html5QrcodeScanner = new Html5QrcodeScanner('reader', config.current, false)\n    html5QrcodeScanner.render(onScanSuccess, onScanFailure)\n\n    return () => {}\n    // eslint-disable-next-line\n  }, [])\n\n  return <div id=\"reader\" />\n}\n","import FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport { SCAN_QR_FEATURE } from '../../constants'\nimport ScanQR from '../scan-qr/ScanQR'\nimport { useState } from 'react'\n\nexport function ScanQRPage() {\n  const [decodedText, setDecodedText] = useState(null)\n  const [decodedResult, setDecodedResult] = useState(null)\n  const [error, setError] = useState(null)\n\n  const handleOnScanSuccess = (text: string, result: any) => {\n    setDecodedText(text)\n    setDecodedResult(result)\n    setError(null)\n    console.log(`Code matched: ${text}`, result)\n  }\n\n  const handleOnScanFailure = err => {\n    setError(err)\n    console.warn(`Code scan error: ${err}`)\n  }\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={SCAN_QR_FEATURE.name} />\n      <ScanQR onScanSuccess={handleOnScanSuccess} onScanFailure={handleOnScanFailure} />\n      {decodedText && (\n        <>\n          <p>Decoded text:</p>\n          <div>{decodedText}</div>\n        </>\n      )}\n      {decodedResult && (\n        <>\n          <p>Decoded result:</p>\n          <div>{JSON.stringify(decodedResult)}</div>\n        </>\n      )}\n      {error && (\n        <>\n          <p>Error:</p>\n          <div>{error}</div>\n        </>\n      )}\n    </div>\n  )\n}\n","import './FeatureSmartapp.scss'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFeaturesMenu } from '../../redux/selectors/bot'\nimport { Link, Route, Switch } from 'react-router-dom'\nimport FeaturePage from '../feature-page/FeaturePage'\nimport { loadFeatures } from '../../redux/actions/bot'\nimport TopLoader from '../top-loader/TopLoader'\nimport { ReactComponent as BotxIcon } from '../../assets/botx-icon.svg'\nimport {\n  EXPRESS_FEATURES,\n  EXPRESS_NOTIFICATION_FEATURE,\n  OPEN_SMART_APP_META_FEATURE,\n  SCAN_QR_FEATURE,\n} from '../../constants'\nimport ExpressNotifications from '../express-notifications/ExpressNotifications'\nimport MetaPage from '../meta-page/MetaPage'\nimport { getRedirectPath } from '../../redux/selectors/ui'\nimport { history } from '../../redux/router'\nimport { ScanQRPage } from '../scan-qr-page/ScanQRPage'\n\nexport default function FeatureSmartapp() {\n  const dispatch = useDispatch()\n  const features = useSelector(getFeaturesMenu)\n  const redirectPath = useSelector(getRedirectPath)\n\n  useEffect(() => {\n    if (!features) dispatch(loadFeatures())\n  }, [dispatch, features])\n\n  useEffect(() => {\n    if (redirectPath) history.push(redirectPath)\n  }, [dispatch, redirectPath])\n\n  return (\n    <div className=\"feature-smartapp\">\n      <div className=\"header\">\n        <span className=\"header__content\">\n          <BotxIcon className=\"header__icon\" height={20} width={20} />\n          <span className=\"header__text\">Feature Smartapp</span>\n        </span>\n      </div>\n      <TopLoader />\n      <section className=\"feature-smartapp__menu\">\n        <Switch>\n          {features?.map(item => (\n            <Route key={`${item.method}-route`} path={`/${item.method}`}>\n              <FeaturePage {...item} />\n            </Route>\n          ))}\n          {EXPRESS_FEATURES.map(item => (\n            <Route key={`${item.method}-route`} path={`/${item.method}`}>\n              <FeaturePage {...item} />\n            </Route>\n          ))}\n          <Route key={`${OPEN_SMART_APP_META_FEATURE.method}-route`} path={`/${OPEN_SMART_APP_META_FEATURE.method}`}>\n            <MetaPage />\n          </Route>\n          <Route key={`${EXPRESS_NOTIFICATION_FEATURE.method}-route`} path={`/${EXPRESS_NOTIFICATION_FEATURE.method}`}>\n            <ExpressNotifications />\n          </Route>\n          <Route key={`${SCAN_QR_FEATURE.method}-route`} path={`/${SCAN_QR_FEATURE.method}`}>\n            <ScanQRPage />\n          </Route>\n          <Route path={'/'}>\n            {features?.map(item => (\n              <Link className=\"menu-item\" key={`${item.method}-link`} to={`/${item.method}`}>\n                {item.name}\n              </Link>\n            ))}\n            {features &&\n              EXPRESS_FEATURES.map(item => (\n                <Link className=\"menu-item\" key={`${item.method}-link`} to={`/${item.method}`}>\n                  {item.name}\n                </Link>\n              ))}\n            {features && (\n              <Link\n                className=\"menu-item\"\n                key={`${EXPRESS_NOTIFICATION_FEATURE.method}-link`}\n                to={`/${EXPRESS_NOTIFICATION_FEATURE.method}`}\n              >\n                {EXPRESS_NOTIFICATION_FEATURE.name}\n              </Link>\n            )}\n            {features && (\n              <Link className=\"menu-item\" key={`${SCAN_QR_FEATURE.method}-link`} to={`/${SCAN_QR_FEATURE.method}`}>\n                {SCAN_QR_FEATURE.name}\n              </Link>\n            )}\n          </Route>\n        </Switch>\n      </section>\n    </div>\n  )\n}\n","import { BotMethodResponse } from '../../types'\nimport './Notifier.scss'\n\nexport default function Notifier({ result, status }: BotMethodResponse['payload']) {\n  return (\n    <div className={'notifier'}>\n      <span className={'notifier__text'}>{result}</span>\n      <span className={'notifier__text'}>Status: {status}</span>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport MainLoader from './main-loader/MainLoader'\nimport FeatureSmartapp from './feature-smartapp/FeatureSmartapp'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BotMethodResponse, EventType, ExpressNotification } from '../types'\nimport { sendReadyEvent, setExpressNotificationSuccess } from '../redux/actions/client'\nimport Notifier from './notifier/Notifier'\nimport { getMainLoader } from '../redux/selectors/ui'\n\nexport default function Main() {\n  const dispatch = useDispatch()\n  const [load, setLoad] = useState(true)\n  const isMainLoader = useSelector(getMainLoader)\n  const [notifier, setNotifier] = useState<BotMethodResponse['payload'] | null>(null)\n\n  useEffect(() => {\n    if (load) {\n      setLoad(false)\n      dispatch(sendReadyEvent())\n    }\n\n    bridge?.onReceive(({ type, payload }) => {\n      if (typeof payload !== 'object') return\n\n      switch (type) {\n        case EventType.SMARTAPP_RPC: {\n          setNotifier(payload as BotMethodResponse['payload'])\n          setTimeout(() => setNotifier(null), 3000)\n          break\n        }\n        case EventType.NOTIFICATION: {\n          dispatch(setExpressNotificationSuccess(payload as ExpressNotification))\n          break\n        }\n      }\n    })\n  }, [dispatch, load])\n\n  return (\n    <>\n      {isMainLoader && <MainLoader />}\n      <FeatureSmartapp />\n      {notifier && <Notifier {...notifier} />}\n    </>\n  )\n}\n","import { handleActions } from 'redux-actions'\nimport { UIState } from '../../types'\nimport {\n  SET_MAIN_LOADER,\n  SET_REDIRECT_PATH,\n  SET_TOP_LOADER,\n  setMainLoaderActionType, setRedirectPathActionType,\n  setTopLoaderActionType,\n} from '../actions/ui'\n\nconst initialState: UIState = {\n  topLoader: false,\n  mainLoader: false,\n  redirectPath: '',\n}\n\nconst reducers = {\n  [SET_TOP_LOADER]: (\n    state: UIState, { payload: topLoader }: setTopLoaderActionType\n  ): UIState => ({\n    ...state, topLoader\n  }),\n  [SET_MAIN_LOADER]: (\n    state: UIState, { payload: mainLoader }: setMainLoaderActionType\n  ): UIState => ({\n    ...state, mainLoader\n  }),\n  [SET_REDIRECT_PATH]: (\n    state: UIState, { payload: redirectPath }: setRedirectPathActionType\n  ): UIState => ({\n    ...state, redirectPath\n  }),\n}\n\nexport const ui = handleActions<UIState, any>(reducers, initialState)\n","import { handleActions } from 'redux-actions'\nimport { BotState } from '../../types'\nimport {\n  LOAD_FEATURES_SUCCESS,\n  loadFeaturesSuccessActionType,\n  RESET_RESPONSE,\n  SEND_FEATURE_BOT_EVENT_SUCCESS,\n} from '../actions/bot'\n\nconst initialState: BotState = {\n  features: null,\n  response: null,\n  notifications: null,\n}\n\nconst reducers = {\n  [LOAD_FEATURES_SUCCESS]: (\n    state: BotState, { payload: features }: loadFeaturesSuccessActionType,\n  ): BotState => ({\n    ...state,\n    features,\n  }),\n  [SEND_FEATURE_BOT_EVENT_SUCCESS]: (\n    state: BotState,\n    { payload: response }: any\n  ): BotState => ({\n    ...state,\n    response,\n  }),\n  [RESET_RESPONSE]: (state: BotState): BotState => ({\n    ...state,\n    response: null,\n  }),\n}\n\nexport const bot = handleActions(reducers, initialState)\n","import { handleActions } from 'redux-actions'\nimport { ClientState } from '../../types'\n\nimport {\n  REMOVE_FILE_SUCCESS,\n  removeFileSuccessActionType,\n  RESET_ATTACHMENTS, RESET_EXPRESS_NOTIFICATION_SUCCESS, RESET_EXPRESS_RESPONSE,\n  SEND_EXPRESS_EVENT_SUCCESS,\n  sendExpressEventSuccessActionType,\n  SET_EXPRESS_NOTIFICATION_SUCCESS, SET_META, setExpressNotificationSuccessActionType, setMetaActionType,\n  UPLOAD_FILE_SUCCESS,\n  UPLOAD_FILES_SUCCESS,\n  uploadFilesSuccessActionType,\n  uploadFileSuccessActionType,\n} from '../actions/client'\n\nconst initialState: ClientState = {\n  attachments: null,\n  response: null,\n  meta: null,\n  notifications: [],\n}\n\nconst reducers = {\n  [UPLOAD_FILE_SUCCESS]: (\n    state: ClientState, { payload: file }: uploadFileSuccessActionType,\n  ): ClientState => ({\n    ...state,\n    attachments: [file],\n  }),\n  [UPLOAD_FILES_SUCCESS]: (\n    state: ClientState,\n    { payload: files }: uploadFilesSuccessActionType,\n  ): ClientState => ({\n    ...state,\n    attachments: [...files],\n  }),\n  [REMOVE_FILE_SUCCESS]: (\n    state: ClientState, { payload: id }: removeFileSuccessActionType,\n  ): ClientState => ({\n    ...state,\n    attachments: state.attachments.filter(attachment => attachment.fileId !== id),\n  }),\n  [RESET_ATTACHMENTS]: (\n    state: ClientState,\n  ): ClientState => ({\n    ...state,\n    attachments: null,\n  }),\n  [SET_EXPRESS_NOTIFICATION_SUCCESS]: (\n    state: ClientState, { payload }: setExpressNotificationSuccessActionType,\n  ): ClientState => ({\n    ...state,\n    notifications: [payload, ...state.notifications],\n  }),\n  [RESET_EXPRESS_NOTIFICATION_SUCCESS]: (\n    state: ClientState\n  ): ClientState => ({\n    ...state,\n    notifications: [],\n  }),\n  [SEND_EXPRESS_EVENT_SUCCESS]: (\n    state: ClientState, response: sendExpressEventSuccessActionType\n  ): ClientState => ({\n    ...state,\n    response\n  }),\n  [RESET_EXPRESS_RESPONSE]: (state: ClientState): ClientState => ({\n    ...state,\n    response: null,\n  }),\n  [SET_META]: (\n    state: ClientState, { payload }: setMetaActionType\n  ): ClientState => ({\n    ...state,\n    meta: payload,\n  }),\n}\n\nexport const client = handleActions<ClientState, any>(reducers, initialState)\n","import { connectRouter } from 'connected-react-router'\nimport { combineReducers } from 'redux'\nimport { history } from '../router'\nimport { ui } from './ui'\nimport { AppState } from '../../types'\nimport { bot } from './bot'\nimport { client } from './client'\n\nexport const rootReducer = combineReducers<AppState>({\n  ui,\n  bot,\n  client,\n  router: connectRouter(history),\n})\n","import { put } from 'redux-saga/effects'\nimport { setMainLoader } from '../actions/ui'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport { BotFeaturesResponse } from '../../types'\nimport { MENU_EVENT } from '../../constants'\nimport { loadFeaturesSuccess } from '../actions/bot'\n\nexport function* loadFeaturesSaga() {\n  try {\n    yield put(setMainLoader(true))\n\n    const response: BotFeaturesResponse = yield bridge.sendBotEvent(MENU_EVENT)\n\n    if (response) yield put(loadFeaturesSuccess(response.payload.result))\n  } catch (e: any) {\n    console.error('loadFeaturesSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n","import { put } from 'redux-saga/effects'\nimport { setMainLoader } from '../actions/ui'\nimport { BotMethodResponse } from '../../types'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport { sendFeatureBotEventSuccess } from '../actions/bot'\n\nexport function* sendFeatureBotEventSaga(action) {\n  try {\n    yield put(setMainLoader(true))\n\n    const response: BotMethodResponse = yield bridge?.sendBotEvent(action.payload)\n\n    yield put(sendFeatureBotEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendFeatureBotEventSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n","import { Bridge as bridge, ready, sendMessage } from '@unlimited/smartapp-sdk'\nimport { ClientEventMethod, ExpressMethodResponse, File } from '../../types'\nimport { put } from 'redux-saga/effects'\nimport {\n  sendExpressEventActionType,\n  sendExpressEventSuccess,\n  sendMessageExpressEventActionType,\n  setMeta,\n  uploadFileActionType,\n  uploadFilesActionType,\n  uploadFilesSuccess,\n  uploadFileSuccess,\n} from '../actions/client'\nimport { setRedirectPath, setTopLoader } from '../actions/ui'\nimport { OPEN_SMART_APP_META_FEATURE } from '../../constants'\n\nexport function* uploadFileSaga({ payload: { type } }: uploadFileActionType) {\n  try {\n    const response = yield bridge?.sendClientEvent({\n      method: ClientEventMethod.UPLOAD_FILE,\n      params: { type },\n    })\n\n    if (!response.payload?.record) return\n\n    const file: File = {\n      ...response.payload.record,\n    }\n\n    yield put(uploadFileSuccess(file))\n  } catch (e) {\n    console.error(`uploadFileSaga error: ${e}`)\n  }\n}\n\nexport function* uploadFilesSaga({ payload: { type } }: uploadFilesActionType) {\n  try {\n    const response = yield bridge?.sendClientEvent({\n      method: ClientEventMethod.UPLOAD_FILES,\n      params: { type },\n    })\n\n    if (!response.payload.records.length) return\n\n    const files: File[] = response.payload.records\n\n    yield put(uploadFilesSuccess(files))\n  } catch (e) {\n    console.error(`uploadFilesSaga error: ${e}`)\n  }\n}\n\nexport function* sendExpressEventSaga(action: sendExpressEventActionType) {\n  try {\n    yield put(setTopLoader(true))\n\n    const response: ExpressMethodResponse = yield bridge?.sendClientEvent(action.payload)\n\n    yield put(sendExpressEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendExpressEventSaga error', e)\n  } finally {\n    yield put(setTopLoader(false))\n  }\n}\n\nexport function* sendMessageExpressEventSaga(action: sendMessageExpressEventActionType) {\n  try {\n    yield put(setTopLoader(true))\n\n    const response: ExpressMethodResponse = yield sendMessage(action.payload)\n\n    yield put(sendExpressEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendMessageExpressEventSaga error', e)\n  } finally {\n    yield put(setTopLoader(false))\n  }\n}\n\nexport function* sendExpressReadyEventSaga() {\n  try {\n    const response = yield ready(300)\n\n    if (response?.payload?.[OPEN_SMART_APP_META_FEATURE.field]) {\n      yield put(setRedirectPath(`/${OPEN_SMART_APP_META_FEATURE.method}`))\n      yield put(setMeta(response))\n    } else {\n      setRedirectPath('/')\n    }\n  } catch (e) {\n    console.error('sendExpressReadyEventSaga', e)\n  }\n}\n","import { all, takeEvery } from 'redux-saga/effects'\nimport { loadFeaturesSaga } from './ui'\nimport { sendFeatureBotEventSaga } from './bot'\nimport { LOAD_FEATURES, SEND_FEATURE_BOT_EVENT } from '../actions/bot'\nimport {\n  sendExpressEventSaga,\n  sendExpressReadyEventSaga,\n  sendMessageExpressEventSaga,\n  uploadFileSaga,\n  uploadFilesSaga,\n} from './client'\nimport {\n  SEND_EXPRESS_EVENT,\n  SEND_EXPRESS_READY_EVENT,\n  SEND_MESSAGE_EXPRESS_EVENT,\n  UPLOAD_FILE,\n  UPLOAD_FILES,\n} from '../actions/client'\n\nfunction* rootSaga() {\n  yield all([\n    takeEvery(LOAD_FEATURES, loadFeaturesSaga),\n    takeEvery(SEND_FEATURE_BOT_EVENT, sendFeatureBotEventSaga),\n    takeEvery(SEND_EXPRESS_EVENT, sendExpressEventSaga),\n    takeEvery(SEND_MESSAGE_EXPRESS_EVENT, sendMessageExpressEventSaga),\n    takeEvery(SEND_EXPRESS_READY_EVENT, sendExpressReadyEventSaga),\n    takeEvery(UPLOAD_FILE, uploadFileSaga),\n    takeEvery(UPLOAD_FILES, uploadFilesSaga),\n  ])\n}\n\nexport default rootSaga\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport Main from './components/Main'\nimport { configureStore } from './redux/configureStore'\nimport { history } from './redux/router'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      {/*@ts-ignore*/}\n      <ConnectedRouter history={history}>\n        <Main />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","import { applyMiddleware, createStore, Store } from 'redux'\nimport { routerMiddleware as createRouterMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { rootReducer } from './reducers'\nimport rootSaga from './sagas'\nimport { history } from './router'\nimport { AppState } from '../types'\n\ntype ApplicationStore = Store<AppState>\n\nexport function configureStore(): ApplicationStore {\n  const sagaMiddleware = createSagaMiddleware()\n  const routerMiddleware = createRouterMiddleware(history)\n\n  const store: ApplicationStore = createStore(\n    rootReducer,\n    undefined,\n    composeWithDevTools(applyMiddleware(sagaMiddleware, routerMiddleware))\n  )\n\n  sagaMiddleware\n    .run(rootSaga)\n    .toPromise()\n    .catch((e: Error) => console.error('Saga error', e))\n\n  return store\n}\n"],"sourceRoot":""}