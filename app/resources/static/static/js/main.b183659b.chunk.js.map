{"version":3,"sources":["components/ui/main-loader/MainLoader.tsx","redux/selectors/bot.ts","types/index.ts","constants.ts","helpers/index.ts","redux/actions/bot.ts","assets/plus.svg","assets/clear-input.svg","assets/file.svg","assets/copy.svg","components/ui/json-editor/JsonViewer.tsx","redux/actions/client.ts","redux/selectors/client.ts","assets/arrow-left.svg","components/ui/feature-page-header/FeaturePageHeader.tsx","containers/feature-page/FeaturePage.tsx","redux/selectors/ui.ts","components/ui/top-loader/TopLoader.tsx","assets/botx-icon.svg","components/express-notifications/ExpressNotifications.tsx","redux/actions/ui.ts","components/meta-page/MetaPage.tsx","redux/history.ts","components/scan-qr/ScanQR.tsx","components/scan-qr-page/ScanQRPage.tsx","components/open-file/OpenFile.tsx","components/open-web-page/OpenWebPage.tsx","components/request-location/RequestLocation.tsx","components/ui/json-viewer/JsonViewer.tsx","components/echo-static-file/EchoStaticFile.tsx","components/ui/version/Version.tsx","components/request-self-profile/RequestSelfProfile.tsx","components/close-smart-app/CloseSmartApp.tsx","components/file-proxy/FileProxy.tsx","components/connection-status/ConnectionIcon.tsx","components/connection-status/ConnectionStatus.tsx","containers/feature-smartapp/FeatureSmartapp.tsx","components/notifier/Notifier.tsx","components/Main.tsx","redux/reducers/ui.ts","redux/reducers/bot.ts","redux/reducers/client.ts","redux/reducers/index.ts","redux/sagas/ui.ts","redux/sagas/bot.ts","redux/sagas/client.ts","redux/sagas/eventBus.ts","redux/sagas/index.ts","index.tsx","redux/configureStore.ts"],"names":["MainLoader","_jsx","className","id","children","_jsxs","getFeaturesMenu","createSelector","state","bot","features","getFeatureBotResponse","response","getStaticFile","staticFile","EventType","BotFeatureMethod","ExpressFeatureMethod","Methods","ExpressFeatureName","ClientEventMethod","InputId","InputLabel","InputType","EXPRESS_NOTIFICATION_FEATURE","method","name","OPEN_SMART_APP_META_FEATURE","field","OPEN_FILE_FEATURE","REQUEST_LOCATION","SCAN_QR_FEATURE","OPEN_WEB_PAGE_FEATURE","REQUEST_SELF_PROFILE_FEATURE","CLOSE_SMART_APP_FEATURE","FILE_PROXY","CONNECTION_STATUS","MENU_ITEM_MESSAGE_META","MENU_EVENT","params","text","INPUT_TYPE","INPUT_TEXT","INPUT_NUMBER","FILE_PICKER","ARRAY_UUID","UUID","EXPRESS_FEATURES","ADD_CONTACT","icon","uiElements","PHONE","label","type","NAME","GET_CONTACT","OPEN_CONTACT_CARD","USER_HUID","SEARCH_CORPORATE_PHONEBOOK","FILTER","CREATE_PERSONAL_CHAT","HUID","OPEN_GROUP_CHAT","GROUP_CHAT_ID","OPEN_SMARTAPP","SMARTAPP_ID","SEND_MESSAGE","MESSAGE","SEND_BOT_COMMAND","BODY","DATA","OPEN_CLIENT_SETTINGS","GET_CHATS","ECHO_STATIC_FILE_FEATURE","ECHO_STATIC_FILE","FILE","GUARANTEED_DELIVERY_FEATURE","ECHO","path","TEXT","getFormInitialValues","reduce","acc","item","undefined","LOAD_FEATURES","LOAD_FEATURES_SUCCESS","RESET_RESPONSE","SEND_FEATURE_BOT_EVENT","SEND_FEATURE_BOT_EVENT_SUCCESS","SET_STATIC_FILE","loadFeatures","createAction","loadFeaturesSuccess","resetFeatures","sendFeatureBotEvent","botEvent","sendFeatureBotEventSuccess","setStaticFile","echoStaticFile","file","_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgPlus","_ref","svgRef","title","titleId","props","xmlns","viewBox","fill","ref","fillRule","d","ForwardRef","SvgClearInput","transform","_g","SvgFile","width","height","x","y","rx","fontSize","fontWeight","SvgCopy","JsonViewer","container","useRef","botResponse","useEffect","editor","JSONEditor","current","mode","enableTransform","set","button","document","createElement","innerHTML","ReactDOMServer","renderToStaticMarkup","CopyIcon","addEventListener","obj","JSON","stringify","body","appendChild","select","execCommand","removeChild","copyToClipboardJson","setAttribute","menu","querySelector","search","insertBefore","destroy","UPLOAD_FILE","UPLOAD_FILE_SUCCESS","UPLOAD_FILES","UPLOAD_FILES_SUCCESS","REMOVE_FILE_SUCCESS","RESET_ATTACHMENTS","SEND_EXPRESS_EVENT","SEND_MESSAGE_EXPRESS_EVENT","SEND_EXPRESS_EVENT_SUCCESS","SET_EXPRESS_NOTIFICATION_SUCCESS","RESET_EXPRESS_NOTIFICATION_SUCCESS","RESET_EXPRESS_RESPONSE","SEND_EXPRESS_READY_EVENT","SET_META","SET_LOCATION","REQUEST_SELF_PROFILE","SET_SELF_PROFILE","CLOSE_SMART_APP","GET_CONNECTION_STATUS","SET_CONNECTION_STATUS","SUBSCRIBE_CONNECTION_STATUS","UNSUBSCRIBE_CONNECTION_STATUS","CONNECTION_STATUS_CHANGED","uploadFile","uploadFileSuccess","uploadFiles","uploadFilesSuccess","files","removeFileSuccess","resetAttachments","sendExpressEvent","expressEvent","sendMessageExpressEvent","payload","sendExpressEventSuccess","setExpressNotificationSuccess","notification","resetExpressNotificationSuccess","setMeta","meta","resetExpressResponse","sendReadyEvent","setLocation","location","requestLocation","requestSelfProfile","setSelfProfile","selfProfile","closeSmartApp","getConnectionStatus","setConnectionStatus","connectionStatus","subscribeConnectionStatus","unsubscribeConnectionStatus","connectionStatusChanged","getAttachments","client","attachments","getExpressResponse","getMeta","getLocation","getExpressNotifications","notifications","getSelfProfile","SvgArrowLeft","FeaturePageHeader","Link","to","ArrowLeft","FeaturePage","dispatch","useDispatch","useSelector","expressResponse","inputs","setInputs","useState","inputError","setInputError","isJSONViewer","setIsJSONViewer","isAllowNewInputs","SEARCH_USERS","isFilesMethod","ECHO_FILE","ECHO_FILES","includes","isUsersMethod","isExpressMethod","values","handleClickPlus","last","next","HUIDS","concat","handleFilesSubmit","handleFormSubmitForExpressMethod","async","formValues","filterFormValues","userHuid","groupChatId","message","messageBody","messageMeta","handleSendMessage","openClientSettings","chats","getChats","filter","handleGetChats","openGroupChat","handleOpenGroupChat","phonebook","searchCorporatePhonebook","handleSearchCorporatePhoneBook","result","sendBotCommand","data","command","handleSendBotCommand","openContactCard","handleOpenContactCard","handleDefault","useMemo","value","handleFormSubmitForBotMethod","event","guaranteed_delivery_required","handleEchoWithGuaranteedDelivery","huids","handleUploadFilesClick","toggleIsJSONViewer","formik","useFormik","initialValues","onSubmit","getIsSubmitButtonDisabled","map","input","index","_Fragment","FILES","onClick","attachment","fileName","RemoveIcon","handleRemoveFile","fileId","classnames","disabled","renderTextMethodComponent","getIsInputError","_ref2","isNotEmpty","uuid","test","phone","handleSubmit","_ref3","inputType","isShowLabel","onChange","handleChange","multiple","min","setFieldValue","PlusIcon","renderBotResponse","_botResponse$payload","_response$replaceAll","_response$replaceAll3","_botResponse$files","ReactMarkdown","replaceAll","FileIcon","getTopLoader","ui","topLoader","getMainLoader","mainLoader","getRedirectPath","redirectPath","TopLoader","start","setStart","stop","setStop","finish","setFinish","stopTimeout","finishTimeout","setTimeout","clearTimeout","SvgBotxIcon","ExpressNotifications","expressNotifications","handleClear","SET_TOP_LOADER","SET_MAIN_LOADER","SET_REDIRECT_PATH","setTopLoader","setMainLoader","setRedirectPath","MetaPage","history","createBrowserHistory","ScanQR","onScanSuccess","onScanFailure","config","fps","qrbox","disableFlip","Html5QrcodeScanner","render","ScanQRPage","decodedText","setDecodedText","decodedResult","setDecodedResult","error","setError","handleOnScanSuccess","console","log","err","warn","OpenFile","inputValue","setInputValue","e","handleClick","parse","bridge","sendClientEvent","OpenWebPage","link","setLink","defaultValue","href","RequestLocation","useLayoutEffect","checked","JsonViewerEditor","json","EchoStaticFile","_attachments$","_botResponse$payload$","_botResponse$payload$2","_staticFile$payload","src","alt","Version","version","RequestSelfProfile","CloseSmartApp","FileProxy","url","setUrl","videoUrl","setVideoUrl","classNames","autoPlay","controls","style","margin","ConnectionIcon","ConnectionStatus","subscribedConnectionStatus","handleGetConnectionStatus","handleSubscribeConnectionStatus","handleUnsubscribeConnectionStatus","FeatureSmartapp","botFeatures","platform","useQuery","handleOpenClientSettings","alert","push","BotxIcon","HashRouter","Switch","Route","Notifier","status","Main","isMainLoader","load","setLoad","notifier","setNotifier","onReceive","SMARTAPP_RPC","NOTIFICATION","reducers","handleActions","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","rootReducer","combineReducers","router","connectRouter","loadFeaturesSaga","put","sendBotEvent","sendFeatureBotEventSaga","action","echoStaticFileSaga","connectionStatusChannel","uploadFileSaga","_response$payload","record","uploadFilesSaga","records","requestLocationSaga","requestSelfProfileSaga","sendExpressEventSaga","sendMessageExpressEventSaga","sendMessage","sendExpressReadyEventSaga","_response$payload2","_response$payload3","ready","_bridge$log","initialData","initiator","closeSmartAppSaga","getConnectionStatusSaga","addConnectionEventListener","eventChannel","emitter","connectionStatusCallback","subscribeClientEvents","SubscriptionEventType","then","unsubscribeClientEvents","subscribeConnectionStatusSaga","take","unsubscribeConnectionStatusSaga","close","emit","watchClientEvents","channel","CLEAN_CACHE","handleCleanCache","unregisterPromises","navigator","serviceWorker","getRegistrations","registration","unregister","cacheDeletionPromises","caches","keys","cache","delete","Promise","all","localStorage","clear","rootEventsBusSaga","rootFeatureSmartAppSaga","takeEvery","rootSaga","fork","ReactDOM","React","StrictMode","Provider","store","sagaMiddleware","createSagaMiddleware","routerMiddleware","createRouterMiddleware","createStore","composeWithDevTools","applyMiddleware","run","toPromise","catch","configureStore","ConnectedRouter","getElementById"],"mappings":"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","file":"static/js/main.b183659b.chunk.js","sourcesContent":["import React from 'react'\nimport './MainLoader.scss'\n\nexport default function MainLoader() {\n  return (\n    <div className='main-loader' id='main-loader'>\n      <div className='main-loader__spinner'>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  )\n}\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getFeaturesMenu = createSelector(\n  [(state: AppState) => state.bot.features],\n  features => features,\n)\n\nexport const getFeatureBotResponse = createSelector(\n  [(state: AppState) => state.bot.response],\n  response => response,\n)\n\nexport const getStaticFile = createSelector(\n  [(state: AppState) => state.bot.staticFile],\n  staticFile => staticFile,\n)\n","import { RouterState } from 'connected-react-router'\n\nexport enum EventType {\n  SMARTAPP_RPC = 'smartapp_rpc',\n  NOTIFICATION = 'notification',\n}\n\nexport enum BotFeatureMethod {\n  ECHO = 'echo',\n  UPDATE_APP_COUNTER = 'update_app_counter',\n  SEND_NOTIFICATION = 'send_notification',\n  ECHO_FILE = 'echo_file',\n  ECHO_FILES = 'echo_files',\n  ECHO_STATIC_FILE = 'echo_static_file',\n  SEARCH_USERS = 'search_users',\n}\n\nexport enum ExpressFeatureMethod {\n  ADD_CONTACT = 'add_contact',\n  CREATE_PERSONAL_CHAT = 'create_personal_chat',\n  SEND_MESSAGE = 'send_message',\n  GET_CONTACT = 'get_contact',\n  OPEN_SMARTAPP = 'open_smart_app',\n  OPEN_CLIENT_SETTINGS = 'open_client_settings',\n  GET_CHATS = 'get_chats',\n  SEARCH_CORPORATE_PHONEBOOK = 'search_corporate_phonebook',\n  OPEN_GROUP_CHAT = 'open_group_chat',\n  SEND_BOT_COMMAND = 'send_bot_command',\n  OPEN_CONTACT_CARD = 'open_contact_card',\n}\n\nexport enum Methods {\n  BACK_PRESSED = 'back_pressed',\n  ROUTING_CHANGED = 'routing_changed',\n  CLEAN_CACHE = 'clean_cache',\n}\n\nexport enum Path {\n  ROOT = 'root',\n  NESTED = 'nested',\n}\n\nexport enum ExpressFeatureName {\n  ADD_CONTACT = 'Add Contact',\n  CREATE_PERSONAL_CHAT = 'Create Personal Chat',\n  SEND_MESSAGE = 'Send Message to Group Chat or User',\n  GET_CONTACT = 'Get Contact',\n  OPEN_SMARTAPP = 'Open SmartApp',\n  OPEN_CLIENT_SETTINGS = 'Open Client Settings',\n  GET_CHATS = 'Get Chats',\n  SEARCH_CORPORATE_PHONEBOOK = 'Search Corporate Phonebook',\n  OPEN_GROUP_CHAT = 'Open Group Chat',\n  SEND_BOT_COMMAND = 'Send Bot Command',\n  OPEN_CONTACT_CARD = 'Open Contact Card',\n}\n\nexport enum ClientEventMethod {\n  UPLOAD_FILE = 'upload_file',\n  UPLOAD_FILES = 'upload_files',\n}\n\nexport type GeneratorFunction = Generator<any, any, any>\n\nexport interface AppEvent {\n  ref?: string | null,\n  type: string,\n  payload: any,\n  files: any[] | null,\n}\n\nexport interface BotEvent {\n  method: BotFeatureMethod | 'menu'\n  params: any\n  files?: File[]\n  timeout?: number\n}\n\nexport interface ExpressEvent {\n  method: ExpressFeatureMethod\n  params: any\n}\n\nexport interface SendMessageActionPayload {\n  userHuid: string | null\n  groupChatId: string | null\n  messageBody: string\n  messageMeta?: {}\n}\n\nexport enum InputId {\n  TEXT = 'text',\n  COUNT = 'count',\n  DELAY = 'delay',\n  FILE = 'file',\n  FILES = 'files',\n  HUIDS = 'huids',\n  PHONE = 'phone',\n  NAME = 'name',\n  HUID = 'huid',\n  SMARTAPP_ID = 'appId',\n  MESSAGE = 'message',\n  GROUP_CHAT_ID = 'groupChatId',\n  USER_HUID = 'userHuid',\n  FILTER = 'filter',\n  BODY = 'body',\n  DATA = 'data',\n}\n\nexport enum InputLabel {\n  TEXT = 'Text',\n  COUNT = 'Count',\n  DELAY = 'Delay',\n  FILE = 'File',\n  FILES = 'Files',\n  HUIDS = 'Huids',\n  PHONE = 'Phone',\n  NAME = 'Name',\n  HUID = 'Huid',\n  SMARTAPP_ID = 'Smartapp ID',\n  MESSAGE = 'Message',\n  GROUP_CHAT_ID = 'Group chat id',\n  USER_HUID = 'User huid',\n  FILTER = 'Filter',\n  BODY = 'Body',\n  DATA = 'Data',\n}\n\nexport enum InputType {\n  INPUT_TEXT = 'INPUT_TEXT',\n  INPUT_NUMBER = 'INPUT_NUMBER',\n  FILE_PICKER = 'FILE_PICKER',\n  ARRAY_UUID = 'ARRAY_UUID',\n  UUID = 'UUID',\n}\n\nexport interface Input {\n  id: InputId | string\n  label: InputLabel\n  type: InputType\n}\n\nexport interface BotFeature {\n  method: BotFeatureMethod\n  name: string\n  uiElements: Input[]\n  icon?: string\n}\n\nexport type ExpressFeature = BotFeature | {\n  method: ExpressFeatureMethod\n  name: ExpressFeatureName\n  uiElements: Input[]\n  icon?: string\n}\n\nexport type BotFeatures = BotFeature[] | null\n\nexport interface BotMethodResponse {\n  type: EventType.SMARTAPP_RPC | string\n  files: File[]\n  payload: {\n    result: string\n    status: 'ok' | 'error'\n  }\n}\n\nexport type BotFeaturesResponse = BotMethodResponse & {\n  payload: {\n    result: BotFeature[]\n  }\n}\n\nexport interface ExpressMethodResponse {\n  ref?: string\n  payload: any\n}\n\nexport interface ExpressNotification {\n  ref: null\n  type: 'notification'\n  data: object\n}\n\nexport interface File {\n  type?: string\n  file?: string\n  fileMimeType?: string\n  fileName?: string\n  filePreview?: string\n  filePreviewHeight?: number\n  filePreviewWidth?: number\n  fileSize: number\n  fileHash?: string\n  fileEncryptionAlgo?: string\n  chunkSize?: number\n  fileId?: any\n  key?: object\n}\n\nexport interface Location {\n  latitude: string | null\n  longitude: string | null\n  timestamp: string | null\n}\n\nexport interface SelfProfile {\n  userHuid: string,\n  name: string,\n  avatar: string | null,\n  avatarPreview: string | null,\n  company: string | null,\n  department: string | null,\n  office: string | null,\n  manager: string | null,\n  managerHuid: string | null,\n  email: string | null,\n  phone: string | null,\n  description: string | null,\n  otherPhone: string | null,\n  ip_phone: string | null,\n  otherIpPhone: string | null,\n}\n\n\nexport interface UIState {\n  topLoader: boolean\n  mainLoader: boolean\n  redirectPath: string\n}\n\nexport interface BotState {\n  features: BotFeatures\n  response: BotMethodResponse | null\n  notifications: BotMethodResponse[] | null\n  staticFile: object\n}\n\nexport interface ClientState {\n  attachments: File[] | null\n  response: ExpressMethodResponse | null\n  meta: ExpressMethodResponse | null\n  notifications: ExpressNotification[] | null\n  location: Location | null\n  selfProfile: SelfProfile | null\n  connectionStatus: string | null\n  subscribedConnectionStatus: string | null\n}\n\nexport interface AppState {\n  ui: UIState\n  bot: BotState\n  client: ClientState\n  router: RouterState\n}\n","import {\n  BotFeature,\n  BotFeatureMethod,\n  ExpressFeature,\n  ExpressFeatureMethod,\n  ExpressFeatureName,\n  InputId,\n  InputLabel,\n  InputType,\n} from './types'\n\nexport const EXPRESS_NOTIFICATION_FEATURE = {\n  method: 'notification',\n  name: 'Express Notification',\n}\n\nexport const OPEN_SMART_APP_META_FEATURE = {\n  name: 'Open Smart App Meta',\n  method: 'open_smart_app',\n  field: 'openSmartAppMeta',\n}\n\nexport const OPEN_FILE_FEATURE = {\n  name: 'Open File',\n  method: 'open_file',\n}\n\nexport const REQUEST_LOCATION = {\n  name: 'Request Location',\n  method: 'request_location',\n}\n\nexport const SCAN_QR_FEATURE = {\n  name: 'Scan QR',\n  method: 'scan_qr',\n}\n\nexport const OPEN_WEB_PAGE_FEATURE = {\n  name: 'Open Web Page',\n  method: 'open-web-page',\n}\n\nexport const REQUEST_SELF_PROFILE_FEATURE = {\n  name: 'Request self profile',\n  method: 'request-self-profile',\n}\n\nexport const CLOSE_SMART_APP_FEATURE = {\n  name: 'Close SmartApp',\n  method: 'close-smartapp',\n}\n\nexport const FILE_PROXY = {\n  name: 'File proxy',\n  method: 'file-proxy',\n}\n\nexport const CONNECTION_STATUS = {\n  name: 'Connection status',\n  method: 'connection-status',\n}\n\nexport const MENU_ITEM_MESSAGE_META = {\n  name: 'Message meta from menu action',\n  method: 'menu-item-message-meta',\n}\n\nexport const MENU_EVENT: any = {\n  method: 'menu',\n  params: {\n    text: 'menu',\n  },\n}\n\nexport const INPUT_TYPE: Record<InputType, string> = {\n  INPUT_TEXT: 'text',\n  INPUT_NUMBER: 'number',\n  FILE_PICKER: 'file',\n  ARRAY_UUID: 'text',\n  UUID: 'text',\n}\n\nexport const EXPRESS_FEATURES: ExpressFeature[] = [\n  {\n    method: ExpressFeatureMethod.ADD_CONTACT,\n    name: ExpressFeatureName.ADD_CONTACT,\n    icon: \"perm_contact_calendar\",\n    uiElements: [\n      {\n        id: InputId.PHONE,\n        label: InputLabel.PHONE,\n        type: InputType.INPUT_TEXT,\n      },\n      {\n        id: InputId.NAME,\n        label: InputLabel.NAME,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.GET_CONTACT,\n    name: ExpressFeatureName.GET_CONTACT,\n    icon: \"perm_contact_calendar\",\n    uiElements: [\n      {\n        id: InputId.PHONE,\n        label: InputLabel.PHONE,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_CONTACT_CARD,\n    name: ExpressFeatureName.OPEN_CONTACT_CARD,\n    icon: \"perm_contact_calendar\",\n    uiElements: [\n      {\n        id: InputId.USER_HUID,\n        label: InputLabel.USER_HUID,\n        type: InputType.UUID,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.SEARCH_CORPORATE_PHONEBOOK,\n    name: ExpressFeatureName.SEARCH_CORPORATE_PHONEBOOK,\n    icon: \"contacts\",\n    uiElements: [\n      {\n        id: InputId.FILTER,\n        label: InputLabel.FILTER,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.CREATE_PERSONAL_CHAT,\n    name: ExpressFeatureName.CREATE_PERSONAL_CHAT,\n    icon: \"chat_bubble_outline\",\n    uiElements: [\n      {\n        id: InputId.HUID,\n        label: InputLabel.HUID,\n        type: InputType.UUID,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_GROUP_CHAT,\n    name: ExpressFeatureName.OPEN_GROUP_CHAT,\n    icon: \"mark_chat_unread\",\n    uiElements: [\n      {\n        id: InputId.GROUP_CHAT_ID,\n        label: InputLabel.GROUP_CHAT_ID,\n        type: InputType.UUID,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_SMARTAPP,\n    name: ExpressFeatureName.OPEN_SMARTAPP,\n    icon: \"open_in_browser\",\n    uiElements: [\n      {\n        id: InputId.SMARTAPP_ID,\n        label: InputLabel.SMARTAPP_ID,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.SEND_MESSAGE,\n    name: ExpressFeatureName.SEND_MESSAGE,\n    icon: \"send\",\n    uiElements: [\n      {\n        id: InputId.MESSAGE,\n        label: InputLabel.MESSAGE,\n        type: InputType.INPUT_TEXT,\n      },\n      {\n        id: InputId.GROUP_CHAT_ID,\n        label: InputLabel.GROUP_CHAT_ID,\n        type: InputType.UUID,\n      },\n      {\n        id: InputId.USER_HUID,\n        label: InputLabel.USER_HUID,\n        type: InputType.UUID,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.SEND_BOT_COMMAND,\n    name: ExpressFeatureName.SEND_BOT_COMMAND,\n    icon: \"send\",\n    uiElements: [\n      {\n        id: InputId.USER_HUID,\n        label: InputLabel.USER_HUID,\n        type: InputType.UUID,\n      },\n      {\n        id: InputId.BODY,\n        label: InputLabel.BODY,\n        type: InputType.INPUT_TEXT,\n      },\n      {\n        id: InputId.DATA,\n        label: InputLabel.DATA,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_CLIENT_SETTINGS,\n    name: ExpressFeatureName.OPEN_CLIENT_SETTINGS,\n    icon: \"settings\",\n    uiElements: [],\n  },\n  {\n    method: ExpressFeatureMethod.GET_CHATS,\n    name: ExpressFeatureName.GET_CHATS,\n    icon: \"chat_bubble_outline\",\n    uiElements: [\n      {\n        id: InputId.FILTER,\n        label: InputLabel.FILTER,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n]\n\nexport const ECHO_STATIC_FILE_FEATURE: BotFeature = {\n  name: 'Echo static file',\n  method: BotFeatureMethod.ECHO_STATIC_FILE,\n  uiElements: [{\n    id: InputId.FILE,\n    type: InputType.FILE_PICKER,\n    label: InputLabel.FILE,\n  }]\n}\n\nexport const GUARANTEED_DELIVERY_FEATURE: BotFeature & { path: string } = {\n  name: 'Echo with guaranteed delivery',\n  method: BotFeatureMethod.ECHO,\n  path: 'guaranteed-delivery',\n  uiElements: [{\n    id: InputId.TEXT,\n    type: InputType.INPUT_TEXT,\n    label: InputLabel.TEXT,\n  }]\n}\n","import { Input } from '../types'\nimport parseISO from 'date-fns/parseISO'\nimport ru from 'date-fns/locale/ru'\nimport format from 'date-fns/format'\n\nexport interface FormValues {\n  [key: string]: string | undefined\n}\n\nexport const getFormInitialValues: (uiElements: Input[]) => FormValues = uiElements => {\n  return uiElements?.reduce((acc: FormValues, item) => {\n    acc[item.id] = undefined\n    return acc\n  }, {})\n}\n\nexport const dateFormat = (timestamp: string) => {\n  if (timestamp) {\n    let toISODate = parseISO(timestamp)\n    return format(toISODate, 'EEEE d LLLL y - H:mm', {\n      locale: ru,\n    })\n  }\n}\n","import { createAction } from 'redux-actions'\nimport { BotEvent, BotFeatures, BotMethodResponse, ExpressMethodResponse, File } from '../../types'\n\nexport const LOAD_FEATURES = 'LOAD_FEATURES'\nexport const LOAD_FEATURES_SUCCESS = 'LOAD_FEATURES_SUCCESS'\nexport const RESET_RESPONSE = 'RESET_RESPONSE'\nexport const SEND_FEATURE_BOT_EVENT = 'SEND_FEATURE_BOT_EVENT'\nexport const SEND_FEATURE_BOT_EVENT_SUCCESS = 'SEND_FEATURE_BOT_EVENT_SUCCESS'\nexport const SET_STATIC_FILE = 'SET_STATIC_FILE'\nexport const ECHO_STATIC_FILE = 'ECHO_STATIC_FILE'\n\nexport const loadFeatures = createAction(LOAD_FEATURES, () => {\n})\nexport const loadFeaturesSuccess = createAction(LOAD_FEATURES_SUCCESS, (features: BotFeatures) => features)\nexport const resetFeatures = createAction(RESET_RESPONSE, () => {\n})\nexport const sendFeatureBotEvent = createAction(SEND_FEATURE_BOT_EVENT, (botEvent: BotEvent) => botEvent)\nexport const sendFeatureBotEventSuccess = createAction(\n  SEND_FEATURE_BOT_EVENT_SUCCESS,\n  (response: BotMethodResponse | ExpressMethodResponse | null) => response,\n)\nexport const setStaticFile = createAction(SET_STATIC_FILE, (staticFile: any) => staticFile)\nexport const echoStaticFile = createAction(ECHO_STATIC_FILE, (file: File) => file)\n\nexport type loadFeaturesSuccessActionType = ReturnType<typeof loadFeaturesSuccess>\nexport type sendFeatureBotEventSuccessActionType = ReturnType<typeof sendFeatureBotEventSuccess>\nexport type setStaticFileActionType = ReturnType<typeof setStaticFile>\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPlus(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M13 11V4h-2v7H4v2h7v7h2v-7h7v-2h-7z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.97a40cd5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgClearInput(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M13 11V3h-2v8H3v2h8v8h2v-8h8v-2h-8z\",\n    transform: \"rotate(45 12 12)\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgClearInput);\nexport default __webpack_public_path__ + \"static/media/clear-input.6a69fb5e.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgFile(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 22 26\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    transform: \"translate(-1)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#595959\",\n    d: \"M5 0C3.73 0 2.44 1.225 2.5 2.407V22.63c-.06 1.784 1.23 3.007 2.5 2.89h15c1.71.117 3-1.106 3-2.89V6.26L16 0H5zm0 24.556c-.298-.117-1.298-.59-1.5-1.445V2.41C3.702 2.148 4.702 1.2 5 .963h10.5v3.852c.01 1.467.903 2.315 2 1.926H22v15.89c-.262.864-.76 1.81-2 1.928H5z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18.5,\n    height: 9.148,\n    x: 1,\n    y: 12.519,\n    fill: \"#5C5C5C\",\n    rx: 2\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    fill: \"#FFF\",\n    fontSize: 5.5,\n    fontWeight: 600\n  }, /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 4.302,\n    y: 19\n  }, \"\\n        FILE\\n      \")))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFile);\nexport default __webpack_public_path__ + \"static/media/file.1a445bcf.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCopy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M10.667.667h-8c-.734 0-1.334.6-1.334 1.333v9.333h1.334V2h8V.667zm2 2.666H5.333C4.6 3.333 4 3.933 4 4.667V14c0 .733.6 1.333 1.333 1.333h7.334c.733 0 1.333-.6 1.333-1.333V4.667c0-.734-.6-1.334-1.333-1.334zm0 10.667H5.333V4.667h7.334V14z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.55b37fcd.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useRef } from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport { ReactComponent as CopyIcon } from '../../../assets/copy.svg'\nimport JSONEditor from 'jsoneditor'\nimport 'jsoneditor/dist/jsoneditor.min.css'\nimport './JsonViewer.scss'\n\nexport default function JsonViewer(props) {\n  const container = useRef(null)\n  const botResponse = props?.botResponse\n\n  const copyToClipboardJson = obj => {\n    const container = document.createElement('textarea')\n\n    container.innerHTML = JSON.stringify(obj, null, '  ')\n    document.body.appendChild(container)\n\n    container.select()\n    document.execCommand('copy')\n    document.body.removeChild(container)\n  }\n\n  useEffect(() => {\n    const editor = new JSONEditor(container.current, { mode: 'view', enableTransform: true })\n\n    if (botResponse) editor.set(botResponse)\n\n    const button = document.createElement('button')\n    button.className = 'copy-to-clipboard'\n    button.innerHTML = ReactDOMServer.renderToStaticMarkup(<CopyIcon height='22' width='22' />)\n    button.addEventListener('click', () => copyToClipboardJson(botResponse))\n    button.setAttribute('title', 'Copy To Clipboard')\n\n    const menu = document.querySelector('.jsoneditor-menu')\n    const search = document.querySelector('.jsoneditor-menu .jsoneditor-search')\n\n    menu.insertBefore(button, search)\n\n    return () => editor.destroy()\n  }, [botResponse])\n\n  return <div className='json-viewer' ref={container} />\n}\n","import { createAction } from 'redux-actions'\nimport {\n  ExpressEvent,\n  ExpressMethodResponse,\n  ExpressNotification,\n  File,\n  Location,\n  SelfProfile,\n  SendMessageActionPayload,\n} from '../../types'\n\nexport const UPLOAD_FILE = 'UPLOAD_FILE'\nexport const UPLOAD_FILE_SUCCESS = 'UPLOAD_FILE_SUCCESS'\nexport const UPLOAD_FILES = 'UPLOAD_FILES'\nexport const UPLOAD_FILES_SUCCESS = 'UPLOAD_FILES_SUCCESS'\nexport const REMOVE_FILE = 'REMOVE_FILE'\nexport const REMOVE_FILE_SUCCESS = 'REMOVE_FILE_SUCCESS'\nexport const RESET_ATTACHMENTS = 'RESET_ATTACHMENTS'\nexport const SEND_EXPRESS_EVENT = 'SEND_EXPRESS_EVENT'\nexport const SEND_MESSAGE_EXPRESS_EVENT = 'SEND_MESSAGE_EXPRESS_EVENT'\nexport const SEND_EXPRESS_EVENT_SUCCESS = 'SEND_EXPRESS_EVENT_SUCCESS'\nexport const SET_EXPRESS_NOTIFICATION_SUCCESS = 'SET_NOTIFICATION_SUCCESS'\nexport const RESET_EXPRESS_NOTIFICATION_SUCCESS = 'RESET_EXPRESS_NOTIFICATION_SUCCESS'\nexport const RESET_EXPRESS_RESPONSE = 'RESET_EXPRESS_RESPONSE'\nexport const SEND_EXPRESS_READY_EVENT = 'SEND_EXPRESS_READY_EVENT'\nexport const SET_META = 'SET_META'\nexport const ECHO_STATIC_FILE = 'ECHO_STATIC_FILE'\nexport const REQUEST_LOCATION = 'REQUEST_LOCATION'\nexport const SET_LOCATION = 'SET_LOCATION'\nexport const REQUEST_SELF_PROFILE = 'REQUEST_SELF_PROFILE'\nexport const SET_SELF_PROFILE = 'SET_SELF_PROFILE'\nexport const CLOSE_SMART_APP = 'CLOSE_SMART_APP'\nexport const GET_CONNECTION_STATUS = 'GET_CONNECTION_STATUS'\nexport const SET_CONNECTION_STATUS = 'SET_CONNECTION_STATUS'\nexport const SUBSCRIBE_CONNECTION_STATUS = 'SUBSCRIBE_CONNECTION_STATUS'\nexport const UNSUBSCRIBE_CONNECTION_STATUS = 'UNSUBSCRIBE_CONNECTION_STATUS'\nexport const CONNECTION_STATUS_CHANGED = 'CONNECTION_STATUS_CHANGED'\n\nexport const uploadFile = createAction(UPLOAD_FILE)\nexport const uploadFileSuccess = createAction(UPLOAD_FILE_SUCCESS, (file: File) => file)\nexport const uploadFiles = createAction(UPLOAD_FILES, (type: string = '') => ({ type }))\nexport const uploadFilesSuccess = createAction(UPLOAD_FILES_SUCCESS, (files: File[]) => files)\nexport const removeFile = createAction(REMOVE_FILE, (id: number) => id)\nexport const removeFileSuccess = createAction(REMOVE_FILE_SUCCESS, (id: number) => id)\nexport const resetAttachments = createAction(RESET_ATTACHMENTS)\nexport const sendExpressEvent = createAction(SEND_EXPRESS_EVENT, (expressEvent: ExpressEvent) => expressEvent)\nexport const sendMessageExpressEvent = createAction(\n  SEND_MESSAGE_EXPRESS_EVENT,\n  (payload: SendMessageActionPayload) => payload\n)\nexport const sendExpressEventSuccess = createAction(\n  SEND_EXPRESS_EVENT_SUCCESS,\n  (response: ExpressMethodResponse | null) => response\n)\nexport const setExpressNotificationSuccess = createAction(\n  SET_EXPRESS_NOTIFICATION_SUCCESS,\n  (notification: ExpressNotification | null) => notification\n)\nexport const resetExpressNotificationSuccess = createAction(RESET_EXPRESS_NOTIFICATION_SUCCESS)\nexport const setMeta = createAction(SET_META, (meta: ExpressMethodResponse | null) => meta)\nexport const resetExpressResponse = createAction(RESET_EXPRESS_RESPONSE)\nexport const sendReadyEvent = createAction(SEND_EXPRESS_READY_EVENT)\nexport const setLocation = createAction(SET_LOCATION, (location: Location) => location)\nexport const requestLocation = createAction(REQUEST_LOCATION)\nexport const echoStaticFile = createAction(ECHO_STATIC_FILE)\nexport const requestSelfProfile = createAction(REQUEST_SELF_PROFILE)\nexport const setSelfProfile = createAction(SET_SELF_PROFILE, (selfProfile: SelfProfile) => selfProfile)\nexport const closeSmartApp = createAction(CLOSE_SMART_APP)\nexport const getConnectionStatus = createAction(GET_CONNECTION_STATUS)\nexport const setConnectionStatus = createAction(SET_CONNECTION_STATUS, (connectionStatus: string) => connectionStatus)\nexport const subscribeConnectionStatus = createAction(SUBSCRIBE_CONNECTION_STATUS)\nexport const unsubscribeConnectionStatus = createAction(UNSUBSCRIBE_CONNECTION_STATUS)\nexport const connectionStatusChanged = createAction(\n  CONNECTION_STATUS_CHANGED,\n  (connectionStatus: string) => connectionStatus\n)\n\nexport type uploadFileActionType = ReturnType<typeof uploadFile>\nexport type uploadFileSuccessActionType = ReturnType<typeof uploadFileSuccess>\nexport type uploadFilesActionType = ReturnType<typeof uploadFiles>\nexport type uploadFilesSuccessActionType = ReturnType<typeof uploadFilesSuccess>\nexport type removeFileActionType = ReturnType<typeof removeFile>\nexport type removeFileSuccessActionType = ReturnType<typeof removeFileSuccess>\nexport type sendExpressEventActionType = ReturnType<typeof sendExpressEvent>\nexport type sendMessageExpressEventActionType = ReturnType<typeof sendMessageExpressEvent>\nexport type sendExpressEventSuccessActionType = ReturnType<typeof sendExpressEventSuccess>\nexport type setExpressNotificationSuccessActionType = ReturnType<typeof setExpressNotificationSuccess>\nexport type setMetaActionType = ReturnType<typeof setMeta>\nexport type setLocationActionType = ReturnType<typeof setLocation>\nexport type setSelfProfileType = ReturnType<typeof setSelfProfile>\nexport type setConnectionStatusType = ReturnType<typeof setConnectionStatus>\nexport type connectionStatusChangedType = ReturnType<typeof connectionStatusChanged>","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getAttachments = createSelector([(state: AppState) => state.client.attachments], features => features)\n\nexport const getExpressResponse = createSelector([(state: AppState) => state.client.response], response => response)\n\nexport const getMeta = createSelector([(state: AppState) => state.client.meta], meta => meta)\n\nexport const getLocation = createSelector(\n  [(state: AppState) => state.client.location],\n\tlocation => location\n)\n\nexport const getExpressNotifications = createSelector(\n  [(state: AppState) => state.client.notifications],\n\tnotifications => notifications\n)\n\nexport const getSelfProfile = createSelector(\n  [(state: AppState) => state.client.selfProfile],\n\tselfProfile => selfProfile\n)\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.828 11l5.586-5.586L12 4l-8 8 8 8 1.414-1.414L7.828 13H20v-2z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.fa74ab51.svg\";\nexport { ForwardRef as ReactComponent };","import { Link } from 'react-router-dom'\nimport { ReactComponent as ArrowLeft } from '../../../assets/arrow-left.svg'\nimport './FeaturePageHeader.scss'\n\nexport default function FeaturePageHeader({ name }) {\n  return (\n    <div className='feature-page__header'>\n      <Link className='btn--arrow-left' to='/' id='back-nav-link'>\n        <ArrowLeft className='icon--arrow-left' height={24} width={24} />\n      </Link>\n      <div className='feature-page__info'>\n        <span className='feature-page__title'>{name} method</span>\n      </div>\n    </div>\n  )\n}\n","import {\n  BotFeature,\n  BotFeatureMethod,\n  ExpressFeature,\n  ExpressFeatureMethod,\n  Input,\n  InputId,\n  InputLabel,\n  InputType,\n} from '../../types'\nimport './FeaturePage.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { GUARANTEED_DELIVERY_FEATURE, INPUT_TYPE } from '../../constants'\nimport { useFormik } from 'formik'\nimport { FormValues, getFormInitialValues } from '../../helpers'\nimport { getFeatureBotResponse } from '../../redux/selectors/bot'\nimport { resetFeatures, sendFeatureBotEvent, sendFeatureBotEventSuccess } from '../../redux/actions/bot'\nimport { useEffect, useMemo, useState } from 'react'\nimport { ReactComponent as PlusIcon } from '../../assets/plus.svg'\nimport { ReactComponent as RemoveIcon } from '../../assets/clear-input.svg'\nimport { ReactComponent as FileIcon } from '../../assets/file.svg'\nimport JsonViewer from '../../components/ui/json-editor/JsonViewer'\nimport classnames from 'classnames'\nimport {\n  removeFileSuccess,\n  resetAttachments,\n  resetExpressResponse,\n  sendExpressEvent,\n  sendExpressEventSuccess,\n  sendMessageExpressEvent,\n  uploadFile,\n  uploadFiles,\n} from '../../redux/actions/client'\nimport { getAttachments, getExpressResponse } from '../../redux/selectors/client'\nimport { ReactMarkdown } from 'react-markdown/lib/react-markdown'\nimport FeaturePageHeader from '../../components/ui/feature-page-header/FeaturePageHeader'\nimport {\n  getChats,\n  openClientSettings,\n  openContactCard,\n  openGroupChat,\n  searchCorporatePhonebook,\n  sendBotCommand,\n} from '@unlimited/smartapp-sdk'\n\nexport default function FeaturePage({ name, method, uiElements = [] }: BotFeature | ExpressFeature) {\n  const dispatch = useDispatch()\n  const botResponse = useSelector(getFeatureBotResponse)\n  const expressResponse = useSelector(getExpressResponse)\n  const attachments = useSelector(getAttachments)\n\n  const [inputs, setInputs] = useState<Input[]>([])\n  const [inputError, setInputError] = useState('')\n  const [isJSONViewer, setIsJSONViewer] = useState(false)\n\n  const isAllowNewInputs = method === BotFeatureMethod.SEARCH_USERS\n  const isFilesMethod = [BotFeatureMethod.ECHO_FILE, BotFeatureMethod.ECHO_FILES].includes(method as BotFeatureMethod)\n  const isUsersMethod = BotFeatureMethod.SEARCH_USERS === method\n  const isExpressMethod = Object.values(ExpressFeatureMethod).includes(method as ExpressFeatureMethod)\n\n  const handleClickPlus = () => {\n    const last = inputs[inputs.length - 1]\n    const { id } = last\n    const next: Input = {\n      ...last,\n      id: id.includes(InputId.HUIDS) ? `${id}${inputs.length}` : id,\n    }\n\n    setInputs(inputs => [...inputs, next])\n  }\n\n  const handleFilesSubmit = () => {\n    if (attachments) {\n      const botFeatureMethod = method as BotFeatureMethod\n\n      dispatch(\n        sendFeatureBotEvent({\n          method: botFeatureMethod,\n          params: {},\n          files: attachments,\n        }),\n      )\n    }\n  }\n\n  const handleOpenGroupChat = async (formValues: FormValues) => {\n    if (!filterFormValues(formValues).length) return\n\n    await openGroupChat({ groupChatId: formValues?.groupChatId })\n  }\n\n  const handleGetChats = async (formValues: FormValues) => {\n    const chats = await getChats({ filter: formValues?.filter })\n    dispatch(sendExpressEventSuccess(chats))\n  }\n\n  const handleSendBotCommand = async (formValues: FormValues) => {\n    const result = await sendBotCommand(\n      {\n        userHuid: formValues?.userHuid,\n        data: formValues?.data ? {\n          command: formValues?.data,\n        } : null,\n        body: formValues?.body,\n      },\n    )\n    dispatch(sendExpressEventSuccess(result))\n  }\n\n  const handleSearchCorporatePhoneBook = async (formValues: FormValues) => {\n    const phonebook = await searchCorporatePhonebook({ filter: formValues?.filter })\n    dispatch(sendExpressEventSuccess(phonebook))\n  }\n\n  const handleOpenContactCard = async (formValues: FormValues) => {\n    const response = await openContactCard({ userHuid: formValues?.userHuid })\n    if (response) dispatch(sendExpressEventSuccess(response))\n  }\n\n  const handleSendMessage = (formValues: FormValues) => {\n    if (!filterFormValues(formValues).length) return\n\n    const { userHuid, groupChatId, message } = formValues\n    dispatch(\n      sendMessageExpressEvent({\n        userHuid,\n        groupChatId,\n        messageBody: message,\n        messageMeta: {},\n      }),\n    )\n  }\n\n  const handleEchoWithGuaranteedDelivery = (formValues: FormValues) => {\n    if (!filterFormValues(formValues).length) return\n\n    const event = {\n      method: BotFeatureMethod.ECHO,\n      params: formValues,\n      guaranteed_delivery_required: true\n    }\n\n    dispatch(sendFeatureBotEvent(event))\n  }\n\n  const handleDefault = (formValues: FormValues) => {\n    if (!filterFormValues(formValues).length) return\n\n    const event = {\n      method: method as ExpressFeatureMethod,\n      params: formValues,\n    }\n\n    dispatch(sendExpressEvent(event))\n  }\n\n  const handleFormSubmitForExpressMethod = async (formValues: FormValues) => {\n    switch (method) {\n      case ExpressFeatureMethod.SEND_MESSAGE:\n        handleSendMessage(formValues)\n        break\n      case ExpressFeatureMethod.OPEN_CLIENT_SETTINGS:\n        openClientSettings()\n        break\n      case ExpressFeatureMethod.GET_CHATS:\n        await handleGetChats(formValues)\n        break\n      case ExpressFeatureMethod.OPEN_GROUP_CHAT: {\n        await handleOpenGroupChat(formValues)\n        break\n      }\n      case ExpressFeatureMethod.SEARCH_CORPORATE_PHONEBOOK: {\n        await handleSearchCorporatePhoneBook(formValues)\n        break\n      }\n      case ExpressFeatureMethod.SEND_BOT_COMMAND: {\n        await handleSendBotCommand(formValues)\n        break\n      }\n      case ExpressFeatureMethod.OPEN_CONTACT_CARD: {\n        await handleOpenContactCard(formValues)\n        break\n      }\n      default:\n        handleDefault(formValues)\n    }\n  }\n\n  const filterFormValues = useMemo(() => (\n    formValues: FormValues) => Object.values(formValues).filter(value => value),\n    [],\n  )\n\n  const handleFormSubmitForBotMethod = (formValues: FormValues) => {\n    const values = filterFormValues(formValues)\n    if (!values.length) return\n\n    if (name === GUARANTEED_DELIVERY_FEATURE.name) {\n      handleEchoWithGuaranteedDelivery(formValues)\n      return\n    }\n\n    const event = {\n      method: method as BotFeatureMethod,\n      params: isUsersMethod ? { huids: values } : formValues,\n    }\n\n    dispatch(sendFeatureBotEvent(event))\n  }\n\n  const handleFormSubmit = (formValues: FormValues) => {\n    if (isExpressMethod) {\n      handleFormSubmitForExpressMethod(formValues)\n    } else {\n      handleFormSubmitForBotMethod(formValues)\n    }\n  }\n\n  const handleUploadFilesClick = () => {\n    if (method === BotFeatureMethod.ECHO_FILE) {\n      dispatch(uploadFile())\n    } else if (method === BotFeatureMethod.ECHO_FILES) {\n      dispatch(uploadFiles())\n    }\n  }\n\n  const handleRemoveFile = (fileId: number) => {\n    dispatch(removeFileSuccess(fileId))\n\n    if (attachments?.length === 1) dispatch(sendFeatureBotEventSuccess(null))\n  }\n\n  const toggleIsJSONViewer = () => setIsJSONViewer(!isJSONViewer)\n\n  const formik = useFormik({\n    initialValues: getFormInitialValues(inputs),\n    onSubmit: handleFormSubmit,\n  })\n\n  const getIsSubmitButtonDisabled = () => {\n    if (method === ExpressFeatureMethod.GET_CHATS) return false\n    return isFilesMethod ? !attachments?.length : !Object.values(formik.values).filter(value => value).length\n  }\n\n  useEffect(() => {\n    const inputs: Input[] = uiElements.map((input, index) => ({\n      ...input,\n      id: input.id.includes(InputId.HUIDS) ? `${input.id}${index}` : input.id,\n    }))\n\n    setInputs(inputs)\n    return () => {\n      dispatch(resetFeatures())\n      dispatch(resetAttachments())\n      dispatch(resetExpressResponse())\n    }\n  }, [uiElements, dispatch])\n\n  const renderFilesMethodComponent = () => (\n    <div className='feature-page__form'>\n      <span className='feature-page__title'>\n        {method === BotFeatureMethod.ECHO_FILE ? InputLabel.FILE : InputLabel.FILES}\n      </span>\n      <button className='btn--attach' onClick={handleUploadFilesClick}>\n        {method === BotFeatureMethod.ECHO_FILE ? 'Attach file' : 'Attach files'}\n      </button>\n      {!!attachments?.length && (\n        <div className='attachments'>\n          {attachments.map(attachment => (\n            <span className='attachments__item' key={attachment.fileId}>\n              <span>{attachment.fileName}</span>\n              <RemoveIcon\n                width={20}\n                height={20}\n                className='btn--remove-attachment'\n                onClick={() => handleRemoveFile(attachment.fileId)}\n              />\n            </span>\n          ))}\n        </div>\n      )}\n      <div className='form-buttons'>\n        <button\n          className={classnames({\n            'btn--submit': true,\n            'btn--submit-disabled': getIsSubmitButtonDisabled(),\n          })}\n          onClick={handleFilesSubmit}\n          disabled={getIsSubmitButtonDisabled()}\n          type='button'\n          id='files-submit'\n        >\n          Submit\n        </button>\n      </div>\n    </div>\n  )\n\n  const renderTextMethodComponent = () => {\n    const getIsInputError = ({ id, type }) => {\n      const isUuid = (uuid: string) => /[0-9a-fA-F-]{36}/.test(uuid)\n\n      const isPhone = (phone: string) =>\n        /(^8|7|\\+7)((\\d{10})|(\\s\\(\\d{3}\\)\\s\\d{3}\\s\\d{2}\\s\\d{2}))/.test(phone)\n\n      const isNotEmpty = formik.values[id]\n\n      if ((isUsersMethod || type === InputType.UUID) && isNotEmpty) {\n        return !isUuid(formik.values[id])\n      } else if (id === InputId.PHONE) {\n        return !isPhone(formik.values[id])\n      }\n    }\n\n    return (\n      !!inputs?.length && (\n        <form className='feature-page__form' onSubmit={formik.handleSubmit}>\n          {inputs.map(({ id, type, label }, index) => {\n            const inputType = INPUT_TYPE[type]\n\n            const isShowLabel = isUsersMethod ? index === 0 : true\n\n            return (\n              <div key={id}>\n                {isShowLabel && <span className='feature-page__title'>{label}</span>}\n                <input\n                  className={classnames({\n                    input: true,\n                    'input--error': getIsInputError({ id, type }),\n                  })}\n                  onChange={formik.handleChange}\n                  value={formik.values[id] || ''}\n                  type={inputType}\n                  multiple={id === InputId.FILES}\n                  id={id}\n                  min={0}\n                />\n                {inputType === INPUT_TYPE.INPUT_TEXT && formik.values[id] && (\n                  <RemoveIcon\n                    className='btn--clear-input'\n                    onClick={() => {\n                      formik.setFieldValue(id, '')\n                      inputError && setInputError('')\n                    }}\n                    height={20}\n                    width={20}\n                    id={`${id}.field-clear`}\n                  />\n                )}\n              </div>\n            )\n          })}\n          <div className='form-buttons'>\n            <button\n              className={classnames({\n                'btn--submit': true,\n                'btn--submit-disabled': getIsSubmitButtonDisabled(),\n              })}\n              disabled={getIsSubmitButtonDisabled()}\n              type='submit'\n              id='submit'\n            >\n              Submit\n            </button>\n            {isAllowNewInputs && (\n              <PlusIcon\n                title='Add new input'\n                className='btn--plus'\n                onClick={handleClickPlus}\n                height={24}\n                width={24}\n              />\n            )}\n          </div>\n        </form>\n      )\n    )\n  }\n\n  const renderBotResponse = () => {\n    const response = botResponse?.payload?.result as any\n\n    return (\n      <>\n        <div className='response-markdown'>\n          <ReactMarkdown>\n            {method === BotFeatureMethod.ECHO ?\n              ('text: ' + response?.replaceAll?.('\\n', '\\n\\r')) ||\n              (response?.replaceAll?.('\\n', '\\n\\r')) + '\\n\\r' +\n              (response?.textLength &&\n                'text length: ' + response?.textLength) :\n              (response?.replaceAll?.('\\n', '\\n\\r'))\n            }\n          </ReactMarkdown>\n        </div>\n        {method === BotFeatureMethod.ECHO_FILES && (\n          <div className='response-files'>\n            Files:\n            {botResponse?.files?.map(() => (\n              <FileIcon className='response-files__file' height={20} width={20} />\n            ))}\n          </div>\n        )}\n        {botResponse && (\n          <JsonViewer\n            isJSONViewer={isJSONViewer}\n            botResponse={botResponse}\n            toggleIsJSONViewer={toggleIsJSONViewer}\n          />\n        )}\n      </>\n    )\n  }\n\n  const renderExpressResponse = () => {\n    return expressResponse && (\n      <div className='response-express' id='response'>\n        {JSON.stringify(expressResponse?.payload, null, 2)}\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"feature-page\">\n        <FeaturePageHeader name={name} />\n        {isFilesMethod ? renderFilesMethodComponent() : renderTextMethodComponent()}\n      </div>\n      {botResponse && renderBotResponse()}\n      {renderExpressResponse()}\n    </>\n  )\n}\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getTopLoader = createSelector(\n  [(state: AppState) => state.ui.topLoader],\n  topLoader => topLoader\n)\n\nexport const getMainLoader = createSelector(\n  [(state: AppState) => state.ui.mainLoader],\n  mainLoader => mainLoader\n)\n\nexport const getRedirectPath = createSelector(\n  [(state: AppState) => state.ui.redirectPath],\n  redirectPath => redirectPath\n)\n","import React, { useEffect, useState, useRef } from 'react'\nimport classnames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport './TopLoader.scss'\nimport { getTopLoader } from '../../../redux/selectors/ui'\n\nexport default function TopLoader() {\n  const topLoader = useSelector(getTopLoader)\n\n  const [start, setStart] = useState(false)\n  const [stop, setStop] = useState(false)\n  const [finish, setFinish] = useState(false)\n\n  const stopTimeout = useRef<NodeJS.Timeout | null>(null)\n  const finishTimeout = useRef<NodeJS.Timeout | null>(null)\n\n  useEffect(() => {\n    if (topLoader && !start) {\n      setStart(true)\n    }\n\n    if (!topLoader && start) {\n      setStart(false)\n      setStop(true)\n\n      stopTimeout.current = setTimeout(() => {\n        setFinish(true)\n\n        finishTimeout.current = setTimeout(() => {\n          setStop(false)\n          setFinish(false)\n        }, 100)\n      }, 200)\n    }\n  }, [topLoader, start])\n\n  useEffect(() => {\n    return () => {\n      if (stopTimeout.current) clearTimeout(stopTimeout.current)\n      if (finishTimeout.current) clearTimeout(finishTimeout.current)\n    }\n  }, [])\n\n  return (\n    <div className={classnames({ 'top-loader': true, 'top-loader--enabled': start && !finish })}>\n      <div\n        className={classnames({\n          'top-loader__bar': true,\n          'top-loader__bar--start': start,\n          'top-loader__bar--stop': stop,\n          'top-loader__bar--finish': finish,\n        })}\n      />\n    </div>\n  )\n}\n","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBotxIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 12 12\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.379 7.017v2.775h-.55A.816.816 0 0 1 0 8.989V7.427c0-.443.371-.803.829-.803h.566c-.01.13-.016.261-.016.393zm9.792-.393c.458 0 .829.36.829.803V8.99a.816.816 0 0 1-.829.803h-.55V7.017c0-.132-.006-.263-.016-.393h.566zM10.047 9.873v-2.82c0-.132-.006-.263-.018-.393C9.857 4.651 8.377 3.043 6.5 2.8h-.997c-1.88.244-3.36 1.853-3.532 3.863-.01.129-.017.26-.017.392v4.754h8.094V9.873zm-5.998-.66c-.608 0-1.101-.522-1.101-1.167 0-.644.493-1.166 1.1-1.166.609 0 1.102.522 1.102 1.166 0 .645-.493 1.167-1.101 1.167zm2.96-1.167c0-.644.493-1.166 1.1-1.166.609 0 1.102.522 1.102 1.166 0 .645-.493 1.167-1.101 1.167s-1.101-.522-1.101-1.167z\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBotxIcon);\nexport default __webpack_public_path__ + \"static/media/botx-icon.cf9274ad.svg\";\nexport { ForwardRef as ReactComponent };","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { EXPRESS_NOTIFICATION_FEATURE } from '../../constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getExpressNotifications } from '../../redux/selectors/client'\nimport './ExpressNotifications.scss'\nimport { resetExpressNotificationSuccess } from '../../redux/actions/client'\n\nexport default function ExpressNotifications() {\n  const dispatch = useDispatch()\n  const expressNotifications = useSelector(getExpressNotifications)\n  const handleClear = () => {\n    dispatch(resetExpressNotificationSuccess())\n  }\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={EXPRESS_NOTIFICATION_FEATURE.name} />\n        <div className='feature-page__notifications'>\n          {!!expressNotifications.length ? (\n            <>\n              <div\n                className='notifications__clear-button'\n                onClick={handleClear}\n                title='Clear notifications'\n              >\n                Clear\n              </div>\n              {expressNotifications.map((item, i) => (\n                <div className='notifications__item' key={i}>\n                  {JSON.stringify(item?.data, null, 2)}\n                </div>\n              ))}\n            </>\n          ) : (\n            <div className='feature-page__notifications-placeholder'>\n              New notifications will appear here...\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  )\n}\n","import { createAction } from 'redux-actions'\n\nexport const SET_TOP_LOADER = 'SET_TOP_LOADER'\nexport const SET_MAIN_LOADER = 'SET_MAIN_LOADER'\nexport const SET_REDIRECT_PATH = 'SET_REDIRECT_PATH'\n\nexport const setTopLoader = createAction(SET_TOP_LOADER, (topLoader: boolean) => topLoader)\nexport const setMainLoader = createAction(SET_MAIN_LOADER, (mainLoader: boolean) => mainLoader)\nexport const setRedirectPath = createAction(SET_REDIRECT_PATH, (redirectPath: string) => redirectPath)\n\nexport type setTopLoaderActionType = ReturnType<typeof setTopLoader>\nexport type setMainLoaderActionType = ReturnType<typeof setMainLoader>\nexport type setRedirectPathActionType = ReturnType<typeof setRedirectPath>\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\nimport { setRedirectPath } from '../../redux/actions/ui'\nimport { getMeta } from '../../redux/selectors/client'\nimport { setMeta } from '../../redux/actions/client'\n\nexport default function MetaPage({ name }) {\n  const dispatch = useDispatch()\n  const meta = useSelector(getMeta)\n\n  useEffect(() => {\n    return () => {\n      dispatch(setRedirectPath(''))\n      dispatch(setMeta(null))\n    }\n  }, [dispatch])\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={name} />\n        {meta && (\n          <div className='response-express'>\n            {JSON.stringify(meta.payload, null, 2)}\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n","import { createBrowserHistory } from 'history'\n\n// Create history singleton\nexport const history = createBrowserHistory()\n","import { useEffect, useRef } from 'react'\nimport { Html5QrcodeScanner } from 'html5-qrcode'\nimport './ScanQR.scss'\n\nexport default function ScanQR({\n  onScanSuccess,\n  onScanFailure,\n}: {\n  onScanSuccess: (text: string, result: any) => void\n  onScanFailure: (error: string) => void\n}) {\n  const config = useRef<any>({\n    fps: 10,\n    qrbox: 250,\n    disableFlip: true,\n  })\n\n  useEffect(() => {\n    const html5QrcodeScanner = new Html5QrcodeScanner('reader', config.current, false)\n    html5QrcodeScanner.render(onScanSuccess, onScanFailure)\n\n    return () => {}\n    // eslint-disable-next-line\n  }, [])\n\n  return <div id=\"reader\" />\n}\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { SCAN_QR_FEATURE } from '../../constants'\nimport ScanQR from '../scan-qr/ScanQR'\nimport { useState } from 'react'\n\nexport function ScanQRPage() {\n  const [decodedText, setDecodedText] = useState(null)\n  const [decodedResult, setDecodedResult] = useState(null)\n  const [error, setError] = useState(null)\n\n  const handleOnScanSuccess = (text: string, result: any) => {\n    setDecodedText(text)\n    setDecodedResult(result)\n    setError(null)\n    console.log(`Code matched: ${text}`, result)\n  }\n\n  const handleOnScanFailure = err => {\n    setError(err)\n    console.warn(`Code scan error: ${err}`)\n  }\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={SCAN_QR_FEATURE.name} />\n      <ScanQR onScanSuccess={handleOnScanSuccess} onScanFailure={handleOnScanFailure} />\n      {decodedText && (\n        <>\n          <p>Decoded text:</p>\n          <div>{decodedText}</div>\n        </>\n      )}\n      {decodedResult && (\n        <>\n          <p>Decoded result:</p>\n          <div>{JSON.stringify(decodedResult)}</div>\n        </>\n      )}\n      {error && (\n        <>\n          <p>Error:</p>\n          <div>{error}</div>\n        </>\n      )}\n    </div>\n  )\n}\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { OPEN_FILE_FEATURE } from '../../constants'\nimport classnames from \"classnames\"\nimport { useState } from \"react\"\nimport { Bridge as bridge } from \"@unlimited/smartapp-sdk\"\n\nexport default function OpenFile() {\n  const [inputValue, setInputValue] = useState('')\n  const handleClick = () => {\n    if (!inputValue) return\n    console.error({inputValue: JSON.parse(inputValue)})\n\n    bridge?.sendClientEvent({\n      method: OPEN_FILE_FEATURE.method,\n      params: JSON.parse(inputValue),\n    })\n  }\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={OPEN_FILE_FEATURE.name} />\n      <input\n        className={classnames({\n          input: true,\n        })}\n        onChange={e => setInputValue(e.target.value)}\n        value={inputValue}\n        type={'text'}\n      />\n      <div className='form-buttons'>\n        <button\n          className={classnames({\n            'btn--submit': true,\n            'btn--submit-disabled': !inputValue,\n          })}\n          disabled={!inputValue}\n          type=\"submit\"\n          onClick={handleClick}\n          id='submit'\n        >\n          Submit\n        </button>\n      </div>\n    </div>\n  )\n}\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { OPEN_WEB_PAGE_FEATURE } from '../../constants'\nimport { useState } from 'react'\nimport './OpenWebPage.scss'\n\nexport default function OpenWebPage() {\n  const [link, setLink] = useState('https://www.tutorialrepublic.com/')\n\n\n  const handleChange = (event: any) => {\n    const { value } = event.target\n    if (value) setLink(value)\n  }\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={OPEN_WEB_PAGE_FEATURE.name} />\n        <div className='open-web-page'>\n          <input\n            className='open-web-page__input'\n            type='url'\n            defaultValue={link}\n            onChange={handleChange}\n          />\n          <a className='open-web-page__link' href={link}>\n            {link}\n          </a>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useLayoutEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getLocation } from '../../redux/selectors/client'\nimport FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { REQUEST_LOCATION } from '../../constants'\nimport { requestLocation, setLocation } from '../../redux/actions/client'\nimport './RequestLocation.scss'\nimport JsonViewer from '../ui/json-editor/JsonViewer'\n\nfunction RequestLocation() {\n  const dispatch = useDispatch()\n  const location = useSelector(getLocation)\n  const [isJSONViewer, setIsJSONViewer] = useState(true)\n\n  const toggleIsJSONViewer = () => setIsJSONViewer(!isJSONViewer)\n\n  const handleSubmit = () => {\n    dispatch(requestLocation())\n  }\n\n  useLayoutEffect(() => {\n    dispatch(setLocation(null))\n  }, [dispatch])\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={REQUEST_LOCATION.name} />\n      <div className='form-buttons'>\n        <button\n          className='btn--submit'\n          onClick={handleSubmit}\n          type='button'\n          id='submit'\n        >\n          Определить\n        </button>\n      </div>\n      <div className='request-location__json-viewer'>\n        {location && (\n          <JsonViewer\n            isJSONViewer={isJSONViewer}\n            botResponse={location}\n            toggleIsJSONViewer={toggleIsJSONViewer}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default RequestLocation\n","import JsonViewerEditor from '../json-editor/JsonViewer'\nimport { BotMethodResponse } from '../../../types'\n\nexport default function JsonViewer(\n  {\n    isJSONViewer,\n    toggleIsJSONViewer,\n    botResponse,\n  }: {\n    isJSONViewer: boolean,\n    toggleIsJSONViewer: () => void,\n    botResponse: BotMethodResponse,\n  },\n) {\n  return (\n    <div>\n      <div className='response-markdown-form'>\n        <input\n          checked={isJSONViewer}\n          className='form-toggler__input'\n          id='form-toggler'\n          type='checkbox'\n          onChange={toggleIsJSONViewer}\n        />\n        <span\n          className='form-toggler'\n          onClick={toggleIsJSONViewer}\n        >\n          Show JSON Viewer\n        </span>\n      </div>\n      {isJSONViewer && (\n        <div className='response-json'>\n          <JsonViewerEditor height={24} json={botResponse} />\n        </div>\n      )}\n    </div>\n  )\n}\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { ECHO_STATIC_FILE_FEATURE } from '../../constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFeatureBotResponse, getStaticFile } from '../../redux/selectors/bot'\nimport './EchoStaticFile.scss'\nimport classnames from 'classnames'\nimport { getAttachments } from '../../redux/selectors/client'\nimport { uploadFile } from '../../redux/actions/client'\nimport { ReactMarkdown } from 'react-markdown/lib/react-markdown'\nimport JsonViewer from '../ui/json-viewer/JsonViewer'\nimport { useState } from 'react'\nimport { echoStaticFile } from '../../redux/actions/bot'\n\nexport default function EchoStaticFile() {\n  const dispatch = useDispatch()\n  const staticFile = useSelector(getStaticFile) as any\n  const attachments = useSelector(getAttachments)\n  const botResponse = useSelector(getFeatureBotResponse)\n  const [isJSONViewer, setIsJSONViewer] = useState(false)\n\n  const handleFilesSubmit = async () => {\n    if (attachments?.length) {\n      dispatch(echoStaticFile(attachments[0]))\n    }\n  }\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={ECHO_STATIC_FILE_FEATURE.name} />\n        <div className='feature-page__echo-static-file'>\n          <div className='feature-page__form'>\n            <button\n              className='btn--attach'\n              onClick={() => dispatch(uploadFile())}\n            >\n              Attach files\n            </button>\n            <p>{attachments?.[0]?.fileName}</p>\n            <div className='form-buttons'>\n              <button\n                className={classnames({\n                  'btn--submit': true,\n                  'btn--submit-disabled': !attachments?.length,\n                })}\n                onClick={handleFilesSubmit}\n                disabled={!attachments?.length}\n                type='button'\n                id='submit'\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <>\n        <div className='response-markdown'>\n          <ReactMarkdown>\n            {botResponse?.payload?.result?.replaceAll?.('\\n', '\\n\\r')}\n          </ReactMarkdown>\n        </div>\n        {staticFile && (\n          <JsonViewer\n            isJSONViewer={isJSONViewer}\n            botResponse={staticFile}\n            toggleIsJSONViewer={() => setIsJSONViewer(!isJSONViewer)}\n          />\n        )}\n      </>\n      <img src={staticFile?.payload?.result} alt='' />\n    </>\n  )\n}\n","import './Version.scss'\nimport { version } from '../../../../package.json'\n\nexport default function Version() {\n  return (\n    <div className=\"version\">\n        SmartApp v{version}\n    </div>\n  )\n}\n\n","import React, { useLayoutEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getSelfProfile } from '../../redux/selectors/client'\nimport FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { REQUEST_SELF_PROFILE_FEATURE } from '../../constants'\nimport { requestSelfProfile, setSelfProfile } from '../../redux/actions/client'\nimport './RequestSelfProfile.scss'\nimport JsonViewer from '../ui/json-editor/JsonViewer'\n\nfunction RequestSelfProfile() {\n  const dispatch = useDispatch()\n  const selfProfile = useSelector(getSelfProfile)\n  const [isJSONViewer, setIsJSONViewer] = useState(true)\n\n  const toggleIsJSONViewer = () => setIsJSONViewer(!isJSONViewer)\n\n  const handleSubmit = () => {\n    dispatch(requestSelfProfile())\n  }\n\n  useLayoutEffect(() => {\n    dispatch(setSelfProfile(null))\n  }, [dispatch])\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={REQUEST_SELF_PROFILE_FEATURE.name} />\n      <div className='form-buttons'>\n        <button\n          className='btn--submit'\n          onClick={handleSubmit}\n          type='button'\n          id='submit'\n        >\n          Запросить свой профиль\n        </button>\n      </div>\n      <div className='request-self-profile__json-viewer'>\n        {selfProfile && (\n          <JsonViewer\n            isJSONViewer={isJSONViewer}\n            botResponse={selfProfile}\n            toggleIsJSONViewer={toggleIsJSONViewer}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default RequestSelfProfile\n","import { useDispatch } from 'react-redux'\nimport FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { CLOSE_SMART_APP_FEATURE } from '../../constants'\nimport { closeSmartApp } from '../../redux/actions/client'\nimport './CloseSmartApp.scss'\n\nfunction CloseSmartApp() {\n  const dispatch = useDispatch()\n\n  const handleSubmit = () => {\n    dispatch(closeSmartApp())\n  }\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={CLOSE_SMART_APP_FEATURE.name} />\n      <div className='form-buttons'>\n        <button\n          className='btn--submit'\n          onClick={handleSubmit}\n          type='button'\n          id='submit'\n        >\n          Закрыть SmartApp\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default CloseSmartApp\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { FILE_PROXY } from '../../constants'\nimport classNames from 'classnames'\nimport { useState } from 'react'\n\nfunction FileProxy() {\n  const [url, setUrl] = useState('https://cts3dev.ccsteam.ru/api/v1/smartapp_proxy/zgubb4kz4xvqgcwi/upload/iblock/523/cf32v2zoh1rxzriy9xt3iqqtbg4dl254.mp4')\n  const [videoUrl, setVideoUrl] = useState(url)\n\n  const handleInputChange = e => setUrl(e.target.value)\n\n  const handleSubmit = () => setVideoUrl(url)\n\n  return (\n    <div className=\"feature-page file-proxy\">\n      <FeaturePageHeader name={FILE_PROXY.name} />\n      <div>\n        <b>Формат</b><br/>\n        <sup>\n            https://<u>cts</u>/api/v1/smartapp_proxy/<u>host_id</u>/<u>path_to_video</u>\n        </sup>\n      </div>\n      <div className='form-buttons'>\n        <input\n          className={classNames({\n            input: true,\n          })}\n          onChange={handleInputChange}\n          value={url}\n          type={'text'}\n          id=\"url\"\n        />\n        </div>\n      <div className='form-buttons'>\n        <button\n          className={classNames({ 'btn--submit': true })}\n          type=\"submit\"\n          onClick={handleSubmit}\n          id=\"submit\"\n        >\n          Play\n        </button>\n      </div>\n      <video src={videoUrl} autoPlay controls width=\"100%\" style={{ margin: \"40px 0 0 0\" }} />\n    </div>\n  )\n}\n\nexport default FileProxy\n","import 'material-icons/iconfont/material-icons.css'\nimport './ConnectionIcon.scss'\n\nexport function ConnectionIcon({ connectionStatus }) {\n  switch (connectionStatus) {\n    case null:\n      return (\n        <div className='connection-status'>\n          <span className=\"material-icons\">question_mark</span>\n          Статус подключения не определен\n        </div>\n      )\n    case 'connected':\n      return (\n        <div className='connection-status connection-status--connected'>\n          <span className=\"material-icons\">wifi</span>\n          Связь с сервером есть\n        </div>\n      )\n    case 'disconnected':\n      return (\n        <div className='connection-status connection-status--disconnected'>\n          <span className=\"material-icons\">wifi_off</span>\n          Нет связи с сервером\n        </div>\n      )\n    default:\n      return (\n        <div className='connection-status'>\n          <span className=\"material-icons\">question_mark</span>\n          Что то пошло не так\n        </div>\n      )\n  }\n}\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { CONNECTION_STATUS } from '../../constants'\nimport classNames from 'classnames'\nimport { AppState } from '../../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ConnectionIcon } from './ConnectionIcon'\nimport { getConnectionStatus, subscribeConnectionStatus, unsubscribeConnectionStatus } from '../../redux/actions/client'\n\nfunction ConnectionStatus() {\n  const dispatch = useDispatch()\n\n  const connectionStatus = useSelector<AppState>(state => state.client.connectionStatus)\n  const subscribedConnectionStatus = useSelector<AppState>(state => state.client.subscribedConnectionStatus)\n\n  const handleGetConnectionStatus = () => dispatch(getConnectionStatus())\n\n  const handleSubscribeConnectionStatus = () => dispatch(subscribeConnectionStatus())\n\n  const handleUnsubscribeConnectionStatus = () => dispatch(unsubscribeConnectionStatus())\n\n  return (\n    <div className=\"feature-page file-proxy\">\n      <FeaturePageHeader name={CONNECTION_STATUS.name} />\n      <h4>Запрос статуса</h4>\n      <div className=\"form-buttons\" id=\"get-status-txt\">\n        <ConnectionIcon connectionStatus={connectionStatus} />\n      </div>\n      <div className=\"form-buttons\">\n        <button\n          className={classNames({ 'btn--submit': true })}\n          type=\"submit\"\n          onClick={handleGetConnectionStatus}\n          id=\"get-status-btn\"\n        >\n          Проверить статус\n        </button>\n      </div>\n      <br />\n      <h4>Подписка на изменение статуса</h4>\n      <div className=\"form-buttons\" id=\"subscription-status-txt\">\n        <ConnectionIcon connectionStatus={subscribedConnectionStatus} />\n      </div>\n      <div className=\"form-buttons\">\n        <button\n          className={classNames({ 'btn--submit': true })}\n          type=\"submit\"\n          onClick={handleSubscribeConnectionStatus}\n          id=\"subscribe-btn\"\n        >\n          Подписаться\n        </button>\n        <button\n          className={classNames({ 'btn--submit': true })}\n          type=\"submit\"\n          onClick={handleUnsubscribeConnectionStatus}\n          id=\"unsubscribe-btn\"\n        >\n          Отписаться\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default ConnectionStatus\n","import './FeatureSmartapp.scss'\nimport 'material-icons/iconfont/material-icons.css'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFeaturesMenu } from '../../redux/selectors/bot'\nimport { Link, Route, Switch, HashRouter } from 'react-router-dom'\nimport FeaturePage from '../feature-page/FeaturePage'\nimport { loadFeatures } from '../../redux/actions/bot'\nimport TopLoader from '../../components/ui/top-loader/TopLoader'\nimport { ReactComponent as BotxIcon } from '../../assets/botx-icon.svg'\nimport {\n  CLOSE_SMART_APP_FEATURE,\n  CONNECTION_STATUS,\n  ECHO_STATIC_FILE_FEATURE,\n  EXPRESS_FEATURES,\n  EXPRESS_NOTIFICATION_FEATURE,\n  FILE_PROXY,\n  GUARANTEED_DELIVERY_FEATURE,\n  MENU_ITEM_MESSAGE_META,\n  OPEN_FILE_FEATURE,\n  OPEN_SMART_APP_META_FEATURE,\n  OPEN_WEB_PAGE_FEATURE,\n  REQUEST_LOCATION,\n  REQUEST_SELF_PROFILE_FEATURE,\n  SCAN_QR_FEATURE,\n} from '../../constants'\nimport ExpressNotifications from '../../components/express-notifications/ExpressNotifications'\nimport MetaPage from '../../components/meta-page/MetaPage'\nimport { getRedirectPath } from '../../redux/selectors/ui'\nimport { history } from '../../redux/history'\nimport { ScanQRPage } from '../../components/scan-qr-page/ScanQRPage'\nimport OpenFile from '../../components/open-file/OpenFile'\nimport { BotFeatureMethod, ExpressFeatureMethod } from '../../types'\nimport { openClientSettings, useQuery } from '@unlimited/smartapp-sdk'\nimport OpenWebPage from '../../components/open-web-page/OpenWebPage'\nimport RequestLocation from '../../components/request-location/RequestLocation'\nimport EchoStaticFile from '../../components/echo-static-file/EchoStaticFile'\nimport Version from '../../components/ui/version/Version'\nimport RequestSelfProfile from '../../components/request-self-profile/RequestSelfProfile'\nimport CloseSmartApp from '../../components/close-smart-app/CloseSmartApp'\nimport FileProxy from '../../components/file-proxy/FileProxy'\nimport ConnectionStatus from '../../components/connection-status/ConnectionStatus'\n\nexport default function FeatureSmartapp() {\n  const dispatch = useDispatch()\n  const botFeatures = useSelector(getFeaturesMenu)\n  const redirectPath = useSelector(getRedirectPath)\n  const { platform } = useQuery()\n\n  const handleOpenClientSettings = () => {\n    if (platform !== 'web') {\n      openClientSettings()\n    } else {\n      alert('Feature is unavailable on web client')\n    }\n  }\n\n  useEffect(() => {\n    if (redirectPath) history.push(redirectPath)\n\n    if (!botFeatures) dispatch(loadFeatures())\n  }, [dispatch, redirectPath, botFeatures])\n\n  return (\n    <div className='feature-smartapp'>\n      <div className='header'>\n        <span className='header__content'>\n          <BotxIcon className='header__icon' height={20} width={20} />\n          <span className='header__text' id='toolbar-title'>Feature Smartapp</span>\n        </span>\n      </div>\n      <TopLoader />\n      <section className='feature-smartapp__menu'>\n        <HashRouter>\n          <Switch>\n            {botFeatures?.length && botFeatures.map(item => {\n              return item.name === ECHO_STATIC_FILE_FEATURE.name ? (\n                <Route\n                  key={`${BotFeatureMethod.ECHO_STATIC_FILE}-route`}\n                  path={`/${BotFeatureMethod.ECHO_STATIC_FILE}`}\n                >\n                  <EchoStaticFile />\n                </Route>\n              ) : (\n                <Route\n                  key={`${item.method}-route`}\n                  path={`/${item.method}`}\n                >\n                  <FeaturePage {...item} />\n                </Route>\n              )\n            })}\n            <Route\n              key={`${GUARANTEED_DELIVERY_FEATURE.path}-route`}\n              path={`/${GUARANTEED_DELIVERY_FEATURE.path}`}\n            >\n              <FeaturePage\n                name={GUARANTEED_DELIVERY_FEATURE.name}\n                method={GUARANTEED_DELIVERY_FEATURE.method}\n                uiElements={GUARANTEED_DELIVERY_FEATURE.uiElements}\n              />\n            </Route>\n            {EXPRESS_FEATURES.map(item => (\n              <Route\n                key={`${item.method}-route`}\n                path={`/${item.method}`}\n              >\n                <FeaturePage {...item} />\n              </Route>\n            ))}\n            <Route\n              key={`${OPEN_SMART_APP_META_FEATURE.method}-route`}\n              path={`/${OPEN_SMART_APP_META_FEATURE.method}`}\n            >\n              <MetaPage name={OPEN_SMART_APP_META_FEATURE.name} />\n            </Route>\n            <Route\n              key={`${EXPRESS_NOTIFICATION_FEATURE.method}-route`}\n              path={`/${EXPRESS_NOTIFICATION_FEATURE.method}`}\n            >\n              <ExpressNotifications />\n            </Route>\n            <Route\n              key={`${SCAN_QR_FEATURE.method}-route`}\n              path={`/${SCAN_QR_FEATURE.method}`}\n            >\n              <ScanQRPage />\n            </Route>\n            <Route\n              key={`${OPEN_FILE_FEATURE.method}-route`}\n              path={`/${OPEN_FILE_FEATURE.method}`}\n            >\n              <OpenFile />\n            </Route>\n            <Route\n              key={`${OPEN_WEB_PAGE_FEATURE.method}-route`}\n              path={`/${OPEN_WEB_PAGE_FEATURE.method}`}\n            >\n              <OpenWebPage />\n            </Route>\n            <Route\n              key={`${REQUEST_LOCATION.method}-route`}\n              path={`/${REQUEST_LOCATION.method}`}\n            >\n              <RequestLocation />\n            </Route>\n            <Route\n              key={`${REQUEST_SELF_PROFILE_FEATURE.method}-route`}\n              path={`/${REQUEST_SELF_PROFILE_FEATURE.method}`}\n            >\n              <RequestSelfProfile />\n            </Route>\n            <Route\n              key={`${CLOSE_SMART_APP_FEATURE.method}-route`}\n              path={`/${CLOSE_SMART_APP_FEATURE.method}`}\n            >\n              <CloseSmartApp />\n            </Route>\n            <Route\n              key={`${FILE_PROXY.method}-route`}\n              path={`/${FILE_PROXY.method}`}\n            >\n              <FileProxy />\n            </Route>\n            <Route\n              key={`${CONNECTION_STATUS.method}-route`}\n              path={`/${CONNECTION_STATUS.method}`}\n            >\n              <ConnectionStatus />\n            </Route>\n            <Route\n              key={`${MENU_ITEM_MESSAGE_META.method}-route`}\n              path={`/${MENU_ITEM_MESSAGE_META.method}`}\n            >\n              <MetaPage name={MENU_ITEM_MESSAGE_META.name} />\n            </Route>\n            <Route path={'/'}>\n              {botFeatures?.length && (\n                <span className={'feature-smartapp__menu-title'}>Bot methods</span>\n              )}\n              {botFeatures?.length && botFeatures?.map(item => (\n                <Link\n                  className='feature-smartapp__menu-item'\n                  key={`${item.method}-link`}\n                  to={`/${item.method}`}\n                >\n                  <span className=\"material-icons\">send</span>\n                  {item.name}\n                </Link>\n              ))}\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${GUARANTEED_DELIVERY_FEATURE.path}-link`}\n                to={`/${GUARANTEED_DELIVERY_FEATURE.path}`}\n              >\n                <span className=\"material-icons\">delivery_dining</span>\n                {GUARANTEED_DELIVERY_FEATURE.name}\n              </Link>\n              <span className={'feature-smartapp__menu-title'}>\n                Client methods\n              </span>\n              {EXPRESS_FEATURES.map(item => (\n                  item.method === ExpressFeatureMethod.OPEN_CLIENT_SETTINGS ? (\n                    <div\n                      key={`${item.method}-route`}\n                      className='feature-smartapp__menu-item'\n                      onClick={handleOpenClientSettings}\n                    >\n                      <span className=\"material-icons\">{item.icon}</span>\n                      {item.name}\n                    </div>\n                  ) : (\n                    <Link\n                      className='feature-smartapp__menu-item'\n                      key={`${item.method}-link`}\n                      to={`/${item.method}`}\n                    >\n                      <span className=\"material-icons\">{item.icon}</span>\n                      {item.name}\n                    </Link>\n                  )\n                ),\n              )}\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${EXPRESS_NOTIFICATION_FEATURE.method}-link`}\n                to={`/${EXPRESS_NOTIFICATION_FEATURE.method}`}\n              >\n                <span className=\"material-icons\">notifications_none</span>\n                {EXPRESS_NOTIFICATION_FEATURE.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${SCAN_QR_FEATURE.method}-link`}\n                to={`/${SCAN_QR_FEATURE.method}`}\n              >\n                <span className=\"material-icons\">qr_code</span>\n                {SCAN_QR_FEATURE.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${OPEN_WEB_PAGE_FEATURE.method}-link`}\n                to={`/${OPEN_WEB_PAGE_FEATURE.method}`}\n              >\n                <span className=\"material-icons\">open_in_new</span>\n                {OPEN_WEB_PAGE_FEATURE.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${REQUEST_LOCATION.method}-link`}\n                to={`/${REQUEST_LOCATION.method}`}\n              >\n                <span className=\"material-icons\">my_location</span>\n                {REQUEST_LOCATION.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${REQUEST_SELF_PROFILE_FEATURE.method}-link`}\n                to={`/${REQUEST_SELF_PROFILE_FEATURE.method}`}\n              >\n                <span className=\"material-icons\">face</span>\n                {REQUEST_SELF_PROFILE_FEATURE.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${CLOSE_SMART_APP_FEATURE.method}-link`}\n                to={`/${CLOSE_SMART_APP_FEATURE.method}`}\n              >\n                <span className=\"material-icons\">close</span>\n                {CLOSE_SMART_APP_FEATURE.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${FILE_PROXY.method}-link`}\n                to={`/${FILE_PROXY.method}`}\n              >\n                <span className=\"material-icons\">drive_file_move</span>\n                {FILE_PROXY.name}\n              </Link>\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${CONNECTION_STATUS.method}-link`}\n                to={`/${CONNECTION_STATUS.method}`}\n              >\n                <span className=\"material-icons\">wifi_off</span>\n                {CONNECTION_STATUS.name}\n              </Link>\n            </Route>\n          </Switch>\n        </HashRouter>\n      </section>\n      <Version/>\n    </div>\n  )\n}\n","import { BotMethodResponse } from '../../types'\nimport './Notifier.scss'\n\nexport default function Notifier({ result, status }: BotMethodResponse['payload']) {\n  return (\n    <div className={'notifier'}>\n      <span className={'notifier__text'}>{result}</span>\n      <span className={'notifier__text'}>Status: {status}</span>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport MainLoader from './ui/main-loader/MainLoader'\nimport FeatureSmartapp from '../containers/feature-smartapp/FeatureSmartapp'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BotMethodResponse, EventType, ExpressNotification } from '../types'\nimport { sendReadyEvent, setExpressNotificationSuccess } from '../redux/actions/client'\nimport Notifier from './notifier/Notifier'\nimport { getMainLoader } from '../redux/selectors/ui'\n\nexport default function Main() {\n  const dispatch = useDispatch()\n  const isMainLoader = useSelector(getMainLoader)\n  const [load, setLoad] = useState(true)\n  const [notifier, setNotifier] = useState<BotMethodResponse['payload'] | null>(null)\n\n  useEffect(() => {\n    if (load) {\n      setLoad(false)\n      dispatch(sendReadyEvent())\n    }\n\n    bridge?.onReceive(({ type, payload }) => {\n      if (typeof payload !== 'object') return\n\n      switch (type) {\n        case EventType.SMARTAPP_RPC: {\n          setNotifier(payload as BotMethodResponse['payload'])\n          setTimeout(() => setNotifier(null), 3000)\n          break\n        }\n        case EventType.NOTIFICATION: {\n          dispatch(setExpressNotificationSuccess(payload as ExpressNotification))\n          break\n        }\n        default: \n          break\n      }\n    })\n  }, [dispatch, load])\n\n  return (\n    <>\n      {isMainLoader && <MainLoader />}\n      <FeatureSmartapp />\n      {notifier && <Notifier {...notifier} />}\n    </>\n  )\n}\n","import { handleActions } from 'redux-actions'\nimport { UIState } from '../../types'\nimport {\n  SET_MAIN_LOADER,\n  SET_REDIRECT_PATH,\n  SET_TOP_LOADER,\n  setMainLoaderActionType, setRedirectPathActionType,\n  setTopLoaderActionType,\n} from '../actions/ui'\n\nconst initialState: UIState = {\n  topLoader: false,\n  mainLoader: false,\n  redirectPath: '',\n}\n\nconst reducers = {\n  [SET_TOP_LOADER]: (\n    state: UIState, { payload: topLoader }: setTopLoaderActionType\n  ): UIState => ({\n    ...state, topLoader\n  }),\n  [SET_MAIN_LOADER]: (\n    state: UIState, { payload: mainLoader }: setMainLoaderActionType\n  ): UIState => ({\n    ...state, mainLoader\n  }),\n  [SET_REDIRECT_PATH]: (\n    state: UIState, { payload: redirectPath }: setRedirectPathActionType\n  ): UIState => ({\n    ...state, redirectPath\n  }),\n}\n\nexport const ui = handleActions<UIState, any>(reducers, initialState)\n","import { handleActions } from 'redux-actions'\nimport { BotState } from '../../types'\nimport {\n  LOAD_FEATURES_SUCCESS,\n  loadFeaturesSuccessActionType,\n  RESET_RESPONSE,\n  SEND_FEATURE_BOT_EVENT_SUCCESS,\n  SET_STATIC_FILE,\n  setStaticFileActionType,\n} from '../actions/bot'\n\nconst initialState: BotState = {\n  features: null,\n  response: null,\n  notifications: null,\n  staticFile: null,\n}\n\nconst reducers = {\n  [LOAD_FEATURES_SUCCESS]: (\n    state: BotState, { payload: features }: loadFeaturesSuccessActionType,\n  ): BotState => ({\n    ...state,\n    features,\n  }),\n  [SEND_FEATURE_BOT_EVENT_SUCCESS]: (state: BotState, { payload: response }: any): BotState => ({\n    ...state,\n    response,\n  }),\n  [RESET_RESPONSE]: (state: BotState): BotState => ({\n    ...state,\n    response: null,\n  }),\n  [SET_STATIC_FILE]: (\n    state: BotState, { payload: staticFile }: setStaticFileActionType\n  ): BotState => ({\n    ...state,\n    staticFile,\n  }),\n}\n\nexport const bot = handleActions(reducers, initialState)\n","import { handleActions } from 'redux-actions'\nimport { ClientState } from '../../types'\n\nimport {\n  REMOVE_FILE_SUCCESS,\n  removeFileSuccessActionType,\n  RESET_ATTACHMENTS,\n  RESET_EXPRESS_NOTIFICATION_SUCCESS,\n  RESET_EXPRESS_RESPONSE,\n  SEND_EXPRESS_EVENT_SUCCESS,\n  sendExpressEventSuccessActionType,\n  SET_EXPRESS_NOTIFICATION_SUCCESS,\n  SET_LOCATION,\n  SET_META,\n  SET_SELF_PROFILE,\n  setExpressNotificationSuccessActionType,\n  setLocationActionType,\n  setMetaActionType,\n  setSelfProfileType,\n  UPLOAD_FILE_SUCCESS,\n  UPLOAD_FILES_SUCCESS,\n  uploadFilesSuccessActionType,\n  uploadFileSuccessActionType,\n  SET_CONNECTION_STATUS,\n  setConnectionStatusType,\n  CONNECTION_STATUS_CHANGED,\n  connectionStatusChangedType,\n} from '../actions/client'\n\nconst initialState: ClientState = {\n  attachments: null,\n  response: null,\n  meta: null,\n  notifications: [],\n  location: null,\n  selfProfile: null,\n  connectionStatus: null,\n  subscribedConnectionStatus: null,\n}\n\nconst reducers = {\n  [UPLOAD_FILE_SUCCESS]: (state: ClientState, { payload: file }: uploadFileSuccessActionType): ClientState => ({\n    ...state,\n    attachments: [file],\n  }),\n  [UPLOAD_FILES_SUCCESS]: (state: ClientState, { payload: files }: uploadFilesSuccessActionType): ClientState => ({\n    ...state,\n    attachments: [...files],\n  }),\n  [REMOVE_FILE_SUCCESS]: (state: ClientState, { payload: id }: removeFileSuccessActionType): ClientState => ({\n    ...state,\n    attachments: state.attachments.filter(attachment => attachment.fileId !== id),\n  }),\n  [RESET_ATTACHMENTS]: (state: ClientState): ClientState => ({\n    ...state,\n    attachments: null,\n  }),\n  [SET_EXPRESS_NOTIFICATION_SUCCESS]: (\n    state: ClientState,\n    { payload }: setExpressNotificationSuccessActionType\n  ): ClientState => ({\n    ...state,\n    notifications: [payload, ...state.notifications],\n  }),\n  [RESET_EXPRESS_NOTIFICATION_SUCCESS]: (state: ClientState): ClientState => ({\n    ...state,\n    notifications: [],\n  }),\n  [SEND_EXPRESS_EVENT_SUCCESS]: (state: ClientState, response: sendExpressEventSuccessActionType): ClientState => ({\n    ...state,\n    response,\n  }),\n  [RESET_EXPRESS_RESPONSE]: (state: ClientState): ClientState => ({\n    ...state,\n    response: null,\n  }),\n  [SET_META]: (state: ClientState, { payload }: setMetaActionType): ClientState => ({\n    ...state,\n    meta: payload,\n  }),\n  [SET_LOCATION]: (state: ClientState, { payload }: setLocationActionType): ClientState => ({\n    ...state,\n    location: payload,\n  }),\n  [SET_SELF_PROFILE]: (state: ClientState, { payload }: setSelfProfileType): ClientState => ({\n    ...state,\n    selfProfile: payload,\n  }),\n  [SET_CONNECTION_STATUS]: (state: ClientState, { payload }: setConnectionStatusType): ClientState => ({\n    ...state,\n    connectionStatus: payload,\n  }),\n  [CONNECTION_STATUS_CHANGED]: (state: ClientState, { payload }: connectionStatusChangedType): ClientState => ({\n    ...state,\n    subscribedConnectionStatus: payload,\n  }),\n}\n\nexport const client = handleActions<ClientState, any>(reducers, initialState)\n","import { connectRouter } from 'connected-react-router'\nimport { combineReducers } from 'redux'\nimport { history } from '../history'\nimport { ui } from './ui'\nimport { AppState } from '../../types'\nimport { bot } from './bot'\nimport { client } from './client'\n\nexport const rootReducer = combineReducers<AppState>({\n  ui,\n  bot,\n  client,\n  router: connectRouter(history),\n})\n","import { put } from 'redux-saga/effects'\nimport { setMainLoader } from '../actions/ui'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport { BotFeaturesResponse } from '../../types'\nimport { MENU_EVENT } from '../../constants'\nimport { loadFeaturesSuccess } from '../actions/bot'\n\nexport function* loadFeaturesSaga() {\n  try {\n    yield put(setMainLoader(true))\n\n    const response: BotFeaturesResponse = yield bridge.sendBotEvent(MENU_EVENT)\n\n    if (response) yield put(loadFeaturesSuccess(response.payload.result))\n  } catch (e: any) {\n    console.error('loadFeaturesSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n","import { put } from 'redux-saga/effects'\nimport { setMainLoader } from '../actions/ui'\nimport { BotFeatureMethod, BotMethodResponse } from '../../types'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport { sendFeatureBotEventSuccess, setStaticFile } from '../actions/bot'\n\nexport function* sendFeatureBotEventSaga(action) {\n  try {\n    yield put(setMainLoader(true))\n\n    const response: BotMethodResponse = yield bridge?.sendBotEvent(action.payload)\n\n    yield put(sendFeatureBotEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendFeatureBotEventSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n\nexport function* echoStaticFileSaga(action) {\n  try {\n    yield put(setMainLoader(true))\n    const staticFile = yield bridge?.sendBotEvent({\n      method: BotFeatureMethod.ECHO_STATIC_FILE,\n      params: {},\n      files: [action.payload],\n    })\n    console.error(staticFile)\n\n    yield put(setStaticFile(staticFile))\n\n  } catch (e: any) {\n    console.error('echoStaticFileSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n","import {\n  Bridge as bridge,\n  ready,\n  requestLocation,\n  sendMessage,\n  requestSelfProfile,\n  closeSmartApp,\n  getConnectionStatus,\n  subscribeClientEvents,\n  unsubscribeClientEvents,\n} from '@unlimited/smartapp-sdk'\nimport { ClientEventMethod, ExpressMethodResponse, File } from '../../types'\nimport { call, put, take } from 'redux-saga/effects'\nimport {\n  connectionStatusChanged,\n  sendExpressEventActionType,\n  sendExpressEventSuccess,\n  sendMessageExpressEventActionType,\n  setConnectionStatus,\n  setLocation,\n  setMeta,\n  setSelfProfile,\n  uploadFilesActionType,\n  uploadFilesSuccess,\n  uploadFileSuccess,\n} from '../actions/client'\nimport { setRedirectPath, setTopLoader } from '../actions/ui'\nimport { OPEN_SMART_APP_META_FEATURE } from '../../constants'\nimport { GetConnectionStatusResponse, SubscriptionEventType } from '@unlimited/smartapp-sdk/build/main/types'\nimport { eventChannel } from 'redux-saga'\n\nlet connectionStatusChannel = null\n\nexport function* uploadFileSaga() {\n  try {\n    const response = yield bridge?.sendClientEvent({\n      method: ClientEventMethod.UPLOAD_FILE,\n      params: { type: '' },\n    })\n\n    if (!response.payload?.record) return\n\n    const file: File = {\n      ...response.payload.record,\n    }\n\n    yield put(uploadFileSuccess(file))\n  } catch (e) {\n    console.error(`uploadFileSaga error: ${e}`)\n  }\n}\n\nexport function* uploadFilesSaga({ payload: { type } }: uploadFilesActionType) {\n  try {\n    const response = yield bridge?.sendClientEvent({\n      method: ClientEventMethod.UPLOAD_FILES,\n      params: { type },\n    })\n\n    if (!response.payload.records.length) return\n\n    const files: File[] = response.payload.records\n\n    yield put(uploadFilesSuccess(files))\n  } catch (e) {\n    console.error(`uploadFilesSaga error: ${e}`)\n  }\n}\n\nexport function* requestLocationSaga() {\n  try {\n    yield put(setTopLoader(true))\n    const response = yield requestLocation()\n\n    if (response) {\n      yield put(setLocation(response))\n    }\n  } catch (e) {\n    console.error(`uploadFileSaga error: ${e}`)\n  } finally {\n    yield put(setTopLoader(false))\n  }\n}\n\nexport function* requestSelfProfileSaga() {\n  try {\n    yield put(setTopLoader(true))\n    const response = yield requestSelfProfile()\n\n    if (response) {\n      yield put(setSelfProfile(response))\n    }\n  } catch (e) {\n    console.error(`requestSelfProfileSaga error: ${e}`)\n  } finally {\n    yield put(setTopLoader(false))\n  }\n}\n\nexport function* sendExpressEventSaga(action: sendExpressEventActionType) {\n  try {\n    yield put(setTopLoader(true))\n\n    const response: ExpressMethodResponse = yield bridge?.sendClientEvent(action.payload)\n\n    yield put(sendExpressEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendExpressEventSaga error', e)\n  } finally {\n    yield put(setTopLoader(false))\n  }\n}\n\nexport function* sendMessageExpressEventSaga(action: sendMessageExpressEventActionType) {\n  try {\n    yield put(setTopLoader(true))\n\n    const response: ExpressMethodResponse = yield sendMessage(action.payload)\n\n    yield put(sendExpressEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendMessageExpressEventSaga error', e)\n  } finally {\n    yield put(setTopLoader(false))\n  }\n}\n\nexport function* sendExpressReadyEventSaga() {\n  try {\n    const response = yield ready(300)\n    const meta = response?.payload?.[OPEN_SMART_APP_META_FEATURE.field]\n\n    if (meta) {\n      bridge?.log?.({ response })\n      yield put(setRedirectPath(`/${OPEN_SMART_APP_META_FEATURE.method}`))\n      yield put(setMeta(response))\n      return\n    }\n\n    const initialData = response?.payload?.initialData\n\n    if (initialData?.initiator) {\n      yield put(setRedirectPath(`/${OPEN_SMART_APP_META_FEATURE.method}`))\n      yield put(setMeta(initialData))\n      return\n    }\n\n    setRedirectPath('/')\n  } catch (e) {\n    console.error('sendExpressReadyEventSaga', e)\n  }\n}\n\nexport function* closeSmartAppSaga() {\n  try {\n    yield closeSmartApp()\n  } catch (e) {\n    console.error(`closeSmartAppSaga error: ${e}`)\n  }\n}\n\nexport function* getConnectionStatusSaga() {\n  try {\n    const response: GetConnectionStatusResponse = yield getConnectionStatus()\n\n    console.log(response)\n\n    yield put(setConnectionStatus(response.payload.connectionStatus))\n  } catch (e) {\n    console.error(`getConnectionStatusSaga error: ${e}`)\n  }\n}\n\nfunction addConnectionEventListener() {\n  return eventChannel(emitter => {\n    const connectionStatusCallback = (event: any) => {\n      console.log('Subscription event', JSON.stringify(event))\n      emitter(event.payload.connectionStatus)\n    }\n\n    subscribeClientEvents(SubscriptionEventType.CONNECTION_STATUS, connectionStatusCallback).then(() => {\n      console.log('Subscribed ' + SubscriptionEventType.CONNECTION_STATUS)\n    })\n\n    return () => unsubscribeClientEvents(SubscriptionEventType.CONNECTION_STATUS, connectionStatusCallback)\n  })\n}\n\nexport function* subscribeConnectionStatusSaga() {\n  try {\n    connectionStatusChannel = yield call(addConnectionEventListener)\n\n    while (true) {\n      const connectionStatus = yield take(connectionStatusChannel)\n      yield put(connectionStatusChanged(connectionStatus))\n    }\n  } catch (e) {\n    console.error(`subscribeConnectionStatusSaga error: ${e}`)\n  }\n}\n\nexport function unsubscribeConnectionStatusSaga() {\n  if (connectionStatusChannel) {\n    connectionStatusChannel.close()\n    connectionStatusChannel = null\n  }\n}\n","import { all, call, take } from 'redux-saga/effects'\nimport { eventChannel, EventChannel } from 'redux-saga'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport { AppEvent, Methods } from '../../types'\n\nexport function subscribeClientEvents(): EventChannel<AppEvent> {\n  return eventChannel(emit => {\n    bridge?.onReceive((event) => emit(event as any))\n    return () => {\n    }\n  })\n}\n\nexport function* watchClientEvents() {\n  const channel: EventChannel<AppEvent> = yield call(subscribeClientEvents)\n\n  while (true) {\n    const event: AppEvent = yield take(channel)\n\n    switch (event.type) {\n      case Methods.CLEAN_CACHE:\n        yield call(handleCleanCache)\n        break\n      default:\n        break\n    }\n  }\n}\n\nexport function* handleCleanCache() {\n  const registrations: ServiceWorkerRegistration[] = yield navigator.serviceWorker.getRegistrations()\n  const unregisterPromises = registrations.map(registration => registration.unregister())\n\n  const allCaches: string[] = yield caches.keys()\n  const cacheDeletionPromises = allCaches.map(cache => caches.delete(cache))\n\n  yield Promise.all([...unregisterPromises, ...cacheDeletionPromises])\n\n  localStorage.clear()\n}\n\nexport function* rootEventsBusSaga() {\n  yield all([\n    watchClientEvents(),\n  ])\n}\n","import { all, fork, takeEvery } from 'redux-saga/effects'\nimport { loadFeaturesSaga } from './ui'\nimport { echoStaticFileSaga, sendFeatureBotEventSaga } from './bot'\nimport {\n  closeSmartAppSaga,\n  requestLocationSaga,\n  requestSelfProfileSaga,\n  sendExpressEventSaga,\n  sendExpressReadyEventSaga,\n  sendMessageExpressEventSaga,\n  uploadFileSaga,\n  uploadFilesSaga,\n  getConnectionStatusSaga,\n  subscribeConnectionStatusSaga,\n  unsubscribeConnectionStatusSaga,\n} from './client'\nimport {\n  CLOSE_SMART_APP,\n  ECHO_STATIC_FILE,\n  GET_CONNECTION_STATUS,\n  REQUEST_LOCATION,\n  REQUEST_SELF_PROFILE,\n  SEND_EXPRESS_EVENT,\n  SEND_EXPRESS_READY_EVENT,\n  SEND_MESSAGE_EXPRESS_EVENT,\n  SUBSCRIBE_CONNECTION_STATUS,\n  UNSUBSCRIBE_CONNECTION_STATUS,\n  UPLOAD_FILE,\n  UPLOAD_FILES,\n} from '../actions/client'\nimport { LOAD_FEATURES, SEND_FEATURE_BOT_EVENT } from '../actions/bot'\nimport { rootEventsBusSaga } from './eventBus'\n\nfunction* rootFeatureSmartAppSaga() {\n  yield all([\n    takeEvery(LOAD_FEATURES, loadFeaturesSaga),\n    takeEvery(SEND_FEATURE_BOT_EVENT, sendFeatureBotEventSaga),\n    takeEvery(ECHO_STATIC_FILE, echoStaticFileSaga),\n    takeEvery(SEND_EXPRESS_EVENT, sendExpressEventSaga),\n    takeEvery(SEND_MESSAGE_EXPRESS_EVENT, sendMessageExpressEventSaga),\n    takeEvery(SEND_EXPRESS_READY_EVENT, sendExpressReadyEventSaga),\n    takeEvery(UPLOAD_FILE, uploadFileSaga),\n    takeEvery(UPLOAD_FILES, uploadFilesSaga),\n    takeEvery(REQUEST_LOCATION, requestLocationSaga),\n    takeEvery(REQUEST_SELF_PROFILE, requestSelfProfileSaga),\n    takeEvery(CLOSE_SMART_APP, closeSmartAppSaga),\n    takeEvery(GET_CONNECTION_STATUS, getConnectionStatusSaga),\n    takeEvery(SUBSCRIBE_CONNECTION_STATUS, subscribeConnectionStatusSaga),\n    takeEvery(UNSUBSCRIBE_CONNECTION_STATUS, unsubscribeConnectionStatusSaga),\n  ])\n}\n\nfunction* rootSaga() {\n  yield all([\n    fork(rootFeatureSmartAppSaga),\n    fork(rootEventsBusSaga),\n  ])\n}\n\nexport default rootSaga\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport Main from './components/Main'\nimport { configureStore } from './redux/configureStore'\nimport { history } from './redux/history'\nimport './index.scss'\n\nif ((module as any).hot) (module as any).hot.accept()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      {/* @ts-ignore */}\n      <ConnectedRouter history={history}>\n        <Main />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)","import { applyMiddleware, createStore, Store } from 'redux'\nimport { routerMiddleware as createRouterMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { rootReducer } from './reducers'\nimport rootSaga from './sagas'\nimport { history } from './history'\nimport { AppState } from '../types'\n\ntype ApplicationStore = Store<AppState>\n\nexport function configureStore(): ApplicationStore {\n  const sagaMiddleware = createSagaMiddleware()\n  const routerMiddleware = createRouterMiddleware(history)\n\n  const store: ApplicationStore = createStore(\n    rootReducer,\n    undefined,\n    composeWithDevTools(applyMiddleware(sagaMiddleware, routerMiddleware))\n  )\n\n  sagaMiddleware\n    .run(rootSaga)\n    .toPromise()\n    .catch((e: Error) => console.error('Saga error', e))\n\n  return store\n}\n"],"sourceRoot":""}