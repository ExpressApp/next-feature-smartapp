{"version":3,"sources":["components/ui/main-loader/MainLoader.tsx","redux/selectors/bot.ts","types/index.ts","constants.ts","helpers/index.ts","redux/actions/bot.ts","assets/plus.svg","assets/clear-input.svg","assets/file.svg","assets/copy.svg","components/ui/json-editor/JsonViewer.tsx","redux/actions/client.ts","redux/selectors/client.ts","assets/arrow-left.svg","components/ui/feature-page-header/FeaturePageHeader.tsx","containers/feature-page/FeaturePage.tsx","redux/selectors/ui.ts","components/ui/top-loader/TopLoader.tsx","assets/botx-icon.svg","components/express-notifications/ExpressNotifications.tsx","redux/actions/ui.ts","components/meta-page/MetaPage.tsx","redux/router.ts","components/scan-qr/ScanQR.tsx","components/scan-qr-page/ScanQRPage.tsx","components/open-file/OpenFile.tsx","components/open-web-page/OpenWebPage.tsx","components/request-geolocation/RequestGeolocation.tsx","components/ui/json-viewer/JsonViewer.tsx","components/echo-static-file/EchoStaticFile.tsx","containers/feature-smartapp/FeatureSmartapp.tsx","components/notifier/Notifier.tsx","components/Main.tsx","redux/reducers/ui.ts","redux/reducers/bot.ts","redux/reducers/client.ts","redux/reducers/index.ts","redux/sagas/ui.ts","redux/sagas/bot.ts","redux/sagas/client.ts","redux/sagas/index.ts","index.tsx","redux/configureStore.ts"],"names":["MainLoader","_jsx","className","children","_jsxs","getFeaturesMenu","createSelector","state","bot","features","getFeatureBotResponse","response","getStaticFile","staticFile","EventType","BotFeatureMethod","ExpressFeatureMethod","ExpressFeatureName","ClientEventMethod","InputId","InputLabel","InputType","EXPRESS_NOTIFICATION_FEATURE","method","name","OPEN_SMART_APP_META_FEATURE","field","OPEN_FILE_FEATURE","REQUEST_LOCATION","SCAN_QR_FEATURE","OPEN_WEB_PAGE_FEATURE","MENU_EVENT","params","text","INPUT_TYPE","INPUT_TEXT","INPUT_NUMBER","FILE_PICKER","ARRAY_UUID","UUID","EXPRESS_FEATURES","ADD_CONTACT","uiElements","id","PHONE","label","type","NAME","CREATE_PERSONAL_CHAT","HUID","GET_CONTACT","OPEN_SMARTAPP","SMARTAPP_ID","SEND_MESSAGE","MESSAGE","GROUP_CHAT_ID","USER_HUID","OPEN_CLIENT_SETTINGS","GET_CHATS","FILTER","SEARCH_CORPORATE_PHONEBOOK","OPEN_GROUP_CHAT","SEND_BOT_COMMAND","BODY","DATA","OPEN_CONTACT_CARD","ECHO_STATIC_FILE_FEATURE","ECHO_STATIC_FILE","FILE","getFormInitialValues","reduce","acc","item","undefined","LOAD_FEATURES","LOAD_FEATURES_SUCCESS","RESET_RESPONSE","SEND_FEATURE_BOT_EVENT","SEND_FEATURE_BOT_EVENT_SUCCESS","SET_STATIC_FILE","loadFeatures","createAction","loadFeaturesSuccess","resetFeatures","sendFeatureBotEvent","botEvent","sendFeatureBotEventSuccess","setStaticFile","echoStaticFile","file","_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgPlus","_ref","svgRef","title","titleId","props","xmlns","viewBox","fill","ref","fillRule","d","ForwardRef","SvgClearInput","transform","_g","SvgFile","width","height","x","y","rx","fontSize","fontWeight","SvgCopy","JsonViewer","container","useRef","botResponse","useEffect","editor","JSONEditor","current","mode","enableTransform","set","button","document","createElement","innerHTML","ReactDOMServer","renderToStaticMarkup","CopyIcon","addEventListener","obj","JSON","stringify","body","appendChild","select","execCommand","removeChild","copyToClipboardJson","setAttribute","menu","querySelector","search","insertBefore","destroy","UPLOAD_FILE","UPLOAD_FILE_SUCCESS","UPLOAD_FILES","UPLOAD_FILES_SUCCESS","REMOVE_FILE_SUCCESS","RESET_ATTACHMENTS","SEND_EXPRESS_EVENT","SEND_MESSAGE_EXPRESS_EVENT","SEND_EXPRESS_EVENT_SUCCESS","SET_EXPRESS_NOTIFICATION_SUCCESS","RESET_EXPRESS_NOTIFICATION_SUCCESS","RESET_EXPRESS_RESPONSE","SEND_EXPRESS_READY_EVENT","SET_META","REQUEST_GEOLOCATION","SET_GEOLOCATION","uploadFile","uploadFileSuccess","uploadFiles","uploadFilesSuccess","files","removeFileSuccess","resetAttachments","sendExpressEvent","expressEvent","sendMessageExpressEvent","payload","sendExpressEventSuccess","setExpressNotificationSuccess","notification","resetExpressNotificationSuccess","setMeta","meta","resetExpressResponse","sendReadyEvent","setGeolocation","geolocation","requestGeolocation","getAttachments","client","attachments","getExpressResponse","getMeta","getGeolocation","getExpressNotifications","notifications","notificaions","SvgArrowLeft","FeaturePageHeader","Link","to","ArrowLeft","FeaturePage","dispatch","useDispatch","useSelector","expressResponse","inputs","setInputs","useState","inputError","setInputError","isJSONViewer","setIsJSONViewer","isAllowNewInputs","SEARCH_USERS","isFilesMethod","ECHO_FILE","ECHO_FILES","includes","isUsersMethod","isExpressMethod","values","handleClickPlus","last","next","HUIDS","concat","handleFilesSubmit","handleFormSubmitForExpressMethod","async","formValues","filterFormValues","userHuid","groupChatId","message","messageBody","messageMeta","handleSendMessage","openClientSettings","chats","getChats","filter","handleGetChats","openGroupChat","handleOpenGroupChat","phonebook","searchCorporatePhonebook","handleSearchCorporatePhoneBook","result","sendBotCommand","data","command","handleSendBotCommand","openContactCard","handleOpenContactCard","handleDefault","useMemo","value","handleUploadFilesClick","toggleIsJSONViewer","formik","useFormik","initialValues","onSubmit","huids","handleFormSubmitForBotMethod","getIsSubmitButtonDisabled","map","input","index","_Fragment","FILES","onClick","attachment","fileName","RemoveIcon","handleRemoveFile","fileId","classnames","disabled","renderTextMethodComponent","getIsInputError","_ref2","isNotEmpty","uuid","test","phone","handleSubmit","_ref3","inputType","isShowLabel","onChange","handleChange","multiple","min","setFieldValue","PlusIcon","renderBotResponse","_botResponse$payload","_response$replaceAll","_response$replaceAll3","_botResponse$files","ReactMarkdown","ECHO","replaceAll","FileIcon","getTopLoader","ui","topLoader","getMainLoader","mainLoader","getRedirectPath","redirectPath","TopLoader","start","setStart","stop","setStop","finish","setFinish","stopTimeout","finishTimeout","setTimeout","clearTimeout","SvgBotxIcon","ExpressNotifications","expressNotifications","handleClear","SET_TOP_LOADER","SET_MAIN_LOADER","SET_REDIRECT_PATH","setTopLoader","setMainLoader","setRedirectPath","MetaPage","history","createBrowserHistory","ScanQR","onScanSuccess","onScanFailure","config","fps","qrbox","disableFlip","Html5QrcodeScanner","render","ScanQRPage","decodedText","setDecodedText","decodedResult","setDecodedResult","error","setError","handleOnScanSuccess","console","log","err","warn","OpenFile","inputValue","setInputValue","e","handleClick","parse","bridge","sendClientEvent","OpenWebPage","link","setLink","defaultValue","event","href","RequestGeolocation","useLayoutEffect","latitude","longitude","timestamp","checked","JsonViewerEditor","json","EchoStaticFile","_attachments$","_botResponse$payload$","_botResponse$payload$2","_staticFile$payload","src","alt","FeatureSmartapp","botFeatures","platform","useQuery","handleOpenClientSettings","alert","push","BotxIcon","Switch","Route","path","Notifier","status","Main","load","setLoad","isMainLoader","notifier","setNotifier","onReceive","SMARTAPP_RPC","NOTIFICATION","reducers","handleActions","_ref4","_ref5","_ref6","rootReducer","combineReducers","router","connectRouter","loadFeaturesSaga","put","sendBotEvent","sendFeatureBotEventSaga","action","echoStaticFileSaga","uploadFileSaga","_response$payload","record","uploadFilesSaga","records","requestGeolocationSaga","_response$payload2","requestLocation","sendExpressEventSaga","sendMessageExpressEventSaga","sendMessage","sendExpressReadyEventSaga","_response$payload3","ready","_bridge$log","rootSaga","all","takeEvery","ReactDOM","React","StrictMode","Provider","store","sagaMiddleware","createSagaMiddleware","routerMiddleware","createRouterMiddleware","createStore","composeWithDevTools","applyMiddleware","run","toPromise","catch","configureStore","ConnectedRouter","getElementById"],"mappings":"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","file":"static/js/main.90e84d30.chunk.js","sourcesContent":["import React from 'react'\nimport './MainLoader.scss'\n\nexport default function MainLoader() {\n  return (\n    <div className='main-loader'>\n      <div className='main-loader__spinner'>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  )\n}\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getFeaturesMenu = createSelector(\n  [(state: AppState) => state.bot.features],\n  features => features,\n)\n\nexport const getFeatureBotResponse = createSelector(\n  [(state: AppState) => state.bot.response],\n  response => response,\n)\n\nexport const getStaticFile = createSelector(\n  [(state: AppState) => state.bot.staticFile],\n  staticFile => staticFile,\n)\n","import { RouterState } from 'connected-react-router'\n\nexport enum EventType {\n  SMARTAPP_RPC = 'smartapp_rpc',\n  NOTIFICATION = 'notification',\n}\n\nexport enum BotFeatureMethod {\n  ECHO = 'echo',\n  UPDATE_APP_COUNTER = 'update_app_counter',\n  SEND_NOTIFICATION = 'send_notification',\n  ECHO_FILE = 'echo_file',\n  ECHO_FILES = 'echo_files',\n  ECHO_STATIC_FILE = 'echo_static_file',\n  SEARCH_USERS = 'search_users',\n}\n\nexport enum ExpressFeatureMethod {\n  ADD_CONTACT = 'add_contact',\n  CREATE_PERSONAL_CHAT = 'create_personal_chat',\n  SEND_MESSAGE = 'send_message',\n  GET_CONTACT = 'get_contact',\n  OPEN_SMARTAPP = 'open_smart_app',\n  OPEN_CLIENT_SETTINGS = 'open_client_settings',\n  GET_CHATS = 'get_chats',\n  SEARCH_CORPORATE_PHONEBOOK = 'search_corporate_phonebook',\n  OPEN_GROUP_CHAT = 'open_group_chat',\n  SEND_BOT_COMMAND = 'send_bot_command',\n  OPEN_CONTACT_CARD = 'open_contact_card',\n}\n\nexport enum ExpressFeatureName {\n  ADD_CONTACT = 'Add Contact',\n  CREATE_PERSONAL_CHAT = 'Create Personal Chat',\n  SEND_MESSAGE = 'Send Message to Group Chat or User',\n  GET_CONTACT = 'Get Contact',\n  OPEN_SMARTAPP = 'Open SmartApp',\n  OPEN_CLIENT_SETTINGS = 'Open Client Settings',\n  GET_CHATS = 'Get Chats',\n  SEARCH_CORPORATE_PHONEBOOK = 'Search Corporate Phonebook',\n  OPEN_GROUP_CHAT = 'Open Group Chat',\n  SEND_BOT_COMMAND = 'Send Bot Command',\n  OPEN_CONTACT_CARD = 'Open Contact Card',\n}\n\nexport enum ClientEventMethod {\n  UPLOAD_FILE = 'upload_file',\n  UPLOAD_FILES = 'upload_files',\n}\n\nexport interface BotEvent {\n  method: BotFeatureMethod | 'menu'\n  params: any\n  files?: File[]\n  timeout?: number\n}\n\nexport interface ExpressEvent {\n  method: ExpressFeatureMethod\n  params: any\n}\n\nexport interface SendMessageActionPayload {\n  userHuid: string | null\n  groupChatId: string | null\n  messageBody: string\n  messageMeta?: {}\n}\n\nexport enum InputId {\n  TEXT = 'text',\n  COUNT = 'count',\n  DELAY = 'delay',\n  FILE = 'file',\n  FILES = 'files',\n  HUIDS = 'huids',\n  PHONE = 'phone',\n  NAME = 'name',\n  HUID = 'huid',\n  SMARTAPP_ID = 'appId',\n  MESSAGE = 'message',\n  GROUP_CHAT_ID = 'groupChatId',\n  USER_HUID = 'userHuid',\n  FILTER = 'filter',\n  BODY = 'body',\n  DATA = 'data',\n}\n\nexport enum InputLabel {\n  TEXT = 'Text',\n  COUNT = 'Count',\n  DELAY = 'Delay',\n  FILE = 'File',\n  FILES = 'Files',\n  HUIDS = 'Huids',\n  PHONE = 'Phone',\n  NAME = 'Name',\n  HUID = 'Huid',\n  SMARTAPP_ID = 'Smartapp ID',\n  MESSAGE = 'Message',\n  GROUP_CHAT_ID = 'Group chat id',\n  USER_HUID = 'User huid',\n  FILTER = 'Filter',\n  BODY = 'Body',\n  DATA = 'Data',\n}\n\nexport enum InputType {\n  INPUT_TEXT = 'INPUT_TEXT',\n  INPUT_NUMBER = 'INPUT_NUMBER',\n  FILE_PICKER = 'FILE_PICKER',\n  ARRAY_UUID = 'ARRAY_UUID',\n  UUID = 'UUID',\n}\n\nexport interface Input {\n  id: InputId | string\n  label: InputLabel\n  type: InputType\n}\n\nexport interface BotFeature {\n  method: BotFeatureMethod\n  name: string\n  uiElements: Input[]\n}\n\nexport type ExpressFeature =\n  | BotFeature\n  | {\n      method: ExpressFeatureMethod\n      name: ExpressFeatureName\n      uiElements: Input[]\n    }\n\nexport type BotFeatures = BotFeature[] | null\n\nexport interface BotMethodResponse {\n  type: EventType.SMARTAPP_RPC | string\n  files: File[]\n  payload: {\n    result: string\n    status: 'ok' | 'error'\n  }\n}\n\nexport type BotFeaturesResponse = BotMethodResponse & {\n  payload: {\n    result: BotFeature[]\n  }\n}\n\nexport interface ExpressMethodResponse {\n  ref?: string\n  payload: any\n}\n\nexport interface ExpressNotification {\n  ref: null\n  type: 'notification'\n  data: object\n}\n\nexport interface File {\n  type?: string\n  file?: string\n  fileMimeType?: string\n  fileName?: string\n  filePreview?: string\n  filePreviewHeight?: number\n  filePreviewWidth?: number\n  fileSize: number\n  fileHash?: string\n  fileEncryptionAlgo?: string\n  chunkSize?: number\n  fileId?: any\n  key?: object\n}\n\nexport interface Geolocation {\n  latitude: string | null\n  longitude: string | null\n  timestamp: string | null\n}\n\nexport interface UIState {\n  topLoader: boolean\n  mainLoader: boolean\n  redirectPath: string\n}\n\nexport interface BotState {\n  features: BotFeatures\n  response: BotMethodResponse | null\n  notifications: BotMethodResponse[] | null\n  staticFile: object\n}\n\nexport interface ClientState {\n  attachments: File[] | null\n  response: ExpressMethodResponse | null\n  meta: ExpressMethodResponse | null\n  notifications: ExpressNotification[] | null\n  geolocation: Geolocation | null\n}\n\nexport interface AppState {\n  ui: UIState\n  bot: BotState\n  client: ClientState\n  router: RouterState\n}\n","import {\n  BotFeature,\n  BotFeatureMethod,\n  ExpressFeature,\n  ExpressFeatureMethod,\n  ExpressFeatureName,\n  InputId,\n  InputLabel,\n  InputType,\n} from './types'\n\nexport const EXPRESS_NOTIFICATION_FEATURE = {\n  method: 'notification',\n  name: 'Express Notification',\n}\n\nexport const OPEN_SMART_APP_META_FEATURE = {\n  name: 'Open Smart App Meta',\n  method: 'open_smart_app',\n  field: 'openSmartAppMeta',\n}\n\nexport const OPEN_FILE_FEATURE = {\n  name: 'Open File',\n  method: 'open_file',\n}\n\nexport const REQUEST_LOCATION = {\n  name: 'Request Location',\n  method: 'request_location',\n}\n\nexport const SCAN_QR_FEATURE = {\n  name: 'Scan QR',\n  method: 'scan_qr',\n}\n\nexport const OPEN_WEB_PAGE_FEATURE = {\n  name: 'Open Web Page',\n  method: 'open-web-page',\n}\n\nexport const MENU_EVENT: any = {\n  method: 'menu',\n  params: {\n    text: 'menu',\n  },\n}\n\nexport const INPUT_TYPE: Record<InputType, string> = {\n  INPUT_TEXT: 'text',\n  INPUT_NUMBER: 'number',\n  FILE_PICKER: 'file',\n  ARRAY_UUID: 'text',\n  UUID: 'text',\n}\n\nexport const EXPRESS_FEATURES: ExpressFeature[] = [\n  {\n    method: ExpressFeatureMethod.ADD_CONTACT,\n    name: ExpressFeatureName.ADD_CONTACT,\n    uiElements: [\n      {\n        id: InputId.PHONE,\n        label: InputLabel.PHONE,\n        type: InputType.INPUT_TEXT,\n      },\n      {\n        id: InputId.NAME,\n        label: InputLabel.NAME,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.CREATE_PERSONAL_CHAT,\n    name: ExpressFeatureName.CREATE_PERSONAL_CHAT,\n    uiElements: [\n      {\n        id: InputId.HUID,\n        label: InputLabel.HUID,\n        type: InputType.UUID,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.GET_CONTACT,\n    name: ExpressFeatureName.GET_CONTACT,\n    uiElements: [\n      {\n        id: InputId.PHONE,\n        label: InputLabel.PHONE,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_SMARTAPP,\n    name: ExpressFeatureName.OPEN_SMARTAPP,\n    uiElements: [\n      {\n        id: InputId.SMARTAPP_ID,\n        label: InputLabel.SMARTAPP_ID,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.SEND_MESSAGE,\n    name: ExpressFeatureName.SEND_MESSAGE,\n    uiElements: [\n      {\n        id: InputId.MESSAGE,\n        label: InputLabel.MESSAGE,\n        type: InputType.INPUT_TEXT,\n      },\n      {\n        id: InputId.GROUP_CHAT_ID,\n        label: InputLabel.GROUP_CHAT_ID,\n        type: InputType.UUID,\n      },\n      {\n        id: InputId.USER_HUID,\n        label: InputLabel.USER_HUID,\n        type: InputType.UUID,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_CLIENT_SETTINGS,\n    name: ExpressFeatureName.OPEN_CLIENT_SETTINGS,\n    uiElements: [],\n  },\n  {\n    method: ExpressFeatureMethod.GET_CHATS,\n    name: ExpressFeatureName.GET_CHATS,\n    uiElements: [\n      {\n        id: InputId.FILTER,\n        label: InputLabel.FILTER,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.SEARCH_CORPORATE_PHONEBOOK,\n    name: ExpressFeatureName.SEARCH_CORPORATE_PHONEBOOK,\n    uiElements: [\n      {\n        id: InputId.FILTER,\n        label: InputLabel.FILTER,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_GROUP_CHAT,\n    name: ExpressFeatureName.OPEN_GROUP_CHAT,\n    uiElements: [\n      {\n        id: InputId.GROUP_CHAT_ID,\n        label: InputLabel.GROUP_CHAT_ID,\n        type: InputType.UUID,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.SEND_BOT_COMMAND,\n    name: ExpressFeatureName.SEND_BOT_COMMAND,\n    uiElements: [\n      {\n        id: InputId.USER_HUID,\n        label: InputLabel.USER_HUID,\n        type: InputType.UUID,\n      },\n      {\n        id: InputId.BODY,\n        label: InputLabel.BODY,\n        type: InputType.INPUT_TEXT,\n      },\n      {\n        id: InputId.DATA,\n        label: InputLabel.DATA,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_CONTACT_CARD,\n    name: ExpressFeatureName.OPEN_CONTACT_CARD,\n    uiElements: [\n      {\n        id: InputId.USER_HUID,\n        label: InputLabel.USER_HUID,\n        type: InputType.UUID,\n      },\n    ],\n  },\n]\n\nexport const ECHO_STATIC_FILE_FEATURE: BotFeature = {\n  name: 'Echo static file',\n  method: BotFeatureMethod.ECHO_STATIC_FILE,\n  uiElements: [{\n    id: InputId.FILE,\n    type: InputType.FILE_PICKER,\n    label: InputLabel.FILE,\n  }]\n}\n","import { Input } from '../types'\nimport parseISO from 'date-fns/parseISO'\nimport ru from 'date-fns/locale/ru'\nimport format from 'date-fns/format'\n\nexport interface FormValues {\n  [key: string]: string | undefined\n}\n\nexport const getFormInitialValues: (uiElements: Input[]) => FormValues = uiElements => {\n  return uiElements?.reduce((acc: FormValues, item) => {\n    acc[item.id] = undefined\n    return acc\n  }, {})\n}\n\nexport const dateFormat = (timestamp: string) => {\n  if (timestamp) {\n    let toISODate = parseISO(timestamp)\n    return format(toISODate, 'EEEE d LLLL y - H:mm', {\n      locale: ru,\n    })\n  }\n}\n","import { createAction } from 'redux-actions'\nimport { BotEvent, BotFeatures, BotMethodResponse, ExpressMethodResponse, File } from '../../types'\n\nexport const LOAD_FEATURES = 'LOAD_FEATURES'\nexport const LOAD_FEATURES_SUCCESS = 'LOAD_FEATURES_SUCCESS'\nexport const RESET_RESPONSE = 'RESET_RESPONSE'\nexport const SEND_FEATURE_BOT_EVENT = 'SEND_FEATURE_BOT_EVENT'\nexport const SEND_FEATURE_BOT_EVENT_SUCCESS = 'SEND_FEATURE_BOT_EVENT_SUCCESS'\nexport const SET_STATIC_FILE = 'SET_STATIC_FILE'\nexport const ECHO_STATIC_FILE = 'ECHO_STATIC_FILE'\n\nexport const loadFeatures = createAction(LOAD_FEATURES, () => {\n})\nexport const loadFeaturesSuccess = createAction(LOAD_FEATURES_SUCCESS, (features: BotFeatures) => features)\nexport const resetFeatures = createAction(RESET_RESPONSE, () => {\n})\nexport const sendFeatureBotEvent = createAction(SEND_FEATURE_BOT_EVENT, (botEvent: BotEvent) => botEvent)\nexport const sendFeatureBotEventSuccess = createAction(\n  SEND_FEATURE_BOT_EVENT_SUCCESS,\n  (response: BotMethodResponse | ExpressMethodResponse | null) => response,\n)\nexport const setStaticFile = createAction(SET_STATIC_FILE, (staticFile: any) => staticFile)\nexport const echoStaticFile = createAction(ECHO_STATIC_FILE, (file: File) => file)\n\nexport type loadFeaturesSuccessActionType = ReturnType<typeof loadFeaturesSuccess>\nexport type sendFeatureBotEventSuccessActionType = ReturnType<typeof sendFeatureBotEventSuccess>\nexport type setStaticFileActionType = ReturnType<typeof setStaticFile>\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPlus(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M13 11V4h-2v7H4v2h7v7h2v-7h7v-2h-7z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.97a40cd5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgClearInput(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M13 11V3h-2v8H3v2h8v8h2v-8h8v-2h-8z\",\n    transform: \"rotate(45 12 12)\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgClearInput);\nexport default __webpack_public_path__ + \"static/media/clear-input.6a69fb5e.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgFile(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 22 26\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    transform: \"translate(-1)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#595959\",\n    d: \"M5 0C3.73 0 2.44 1.225 2.5 2.407V22.63c-.06 1.784 1.23 3.007 2.5 2.89h15c1.71.117 3-1.106 3-2.89V6.26L16 0H5zm0 24.556c-.298-.117-1.298-.59-1.5-1.445V2.41C3.702 2.148 4.702 1.2 5 .963h10.5v3.852c.01 1.467.903 2.315 2 1.926H22v15.89c-.262.864-.76 1.81-2 1.928H5z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18.5,\n    height: 9.148,\n    x: 1,\n    y: 12.519,\n    fill: \"#5C5C5C\",\n    rx: 2\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    fill: \"#FFF\",\n    fontSize: 5.5,\n    fontWeight: 600\n  }, /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 4.302,\n    y: 19\n  }, \"\\n        FILE\\n      \")))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFile);\nexport default __webpack_public_path__ + \"static/media/file.1a445bcf.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCopy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M10.667.667h-8c-.734 0-1.334.6-1.334 1.333v9.333h1.334V2h8V.667zm2 2.666H5.333C4.6 3.333 4 3.933 4 4.667V14c0 .733.6 1.333 1.333 1.333h7.334c.733 0 1.333-.6 1.333-1.333V4.667c0-.734-.6-1.334-1.333-1.334zm0 10.667H5.333V4.667h7.334V14z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.55b37fcd.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useRef } from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport { ReactComponent as CopyIcon } from '../../../assets/copy.svg'\nimport JSONEditor from 'jsoneditor'\nimport 'jsoneditor/dist/jsoneditor.min.css'\nimport './JsonViewer.scss'\n\nexport default function JsonViewer(props) {\n  const container = useRef(null)\n  const botResponse = props?.botResponse\n\n  const copyToClipboardJson = obj => {\n    const container = document.createElement('textarea')\n\n    container.innerHTML = JSON.stringify(obj, null, '  ')\n    document.body.appendChild(container)\n\n    container.select()\n    document.execCommand('copy')\n    document.body.removeChild(container)\n  }\n\n  useEffect(() => {\n    const editor = new JSONEditor(container.current, { mode: 'view', enableTransform: true })\n\n    if (botResponse) editor.set(botResponse)\n\n    const button = document.createElement('button')\n    button.className = 'copy-to-clipboard'\n    button.innerHTML = ReactDOMServer.renderToStaticMarkup(<CopyIcon height='22' width='22' />)\n    button.addEventListener('click', () => copyToClipboardJson(botResponse))\n    button.setAttribute('title', 'Copy To Clipboard')\n\n    const menu = document.querySelector('.jsoneditor-menu')\n    const search = document.querySelector('.jsoneditor-menu .jsoneditor-search')\n\n    menu.insertBefore(button, search)\n\n    return () => editor.destroy()\n  }, [botResponse])\n\n  return <div className='json-viewer' ref={container} />\n}\n","import { createAction } from 'redux-actions'\nimport {\n  ExpressEvent,\n  ExpressMethodResponse,\n  ExpressNotification,\n  File,\n  Geolocation,\n  SendMessageActionPayload,\n} from '../../types'\n\nexport const UPLOAD_FILE = 'UPLOAD_FILE'\nexport const UPLOAD_FILE_SUCCESS = 'UPLOAD_FILE_SUCCESS'\nexport const UPLOAD_FILES = 'UPLOAD_FILES'\nexport const UPLOAD_FILES_SUCCESS = 'UPLOAD_FILES_SUCCESS'\nexport const REMOVE_FILE = 'REMOVE_FILE'\nexport const REMOVE_FILE_SUCCESS = 'REMOVE_FILE_SUCCESS'\nexport const RESET_ATTACHMENTS = 'RESET_ATTACHMENTS'\nexport const SEND_EXPRESS_EVENT = 'SEND_EXPRESS_EVENT'\nexport const SEND_MESSAGE_EXPRESS_EVENT = 'SEND_MESSAGE_EXPRESS_EVENT'\nexport const SEND_EXPRESS_EVENT_SUCCESS = 'SEND_EXPRESS_EVENT_SUCCESS'\nexport const SET_EXPRESS_NOTIFICATION_SUCCESS = 'SET_NOTIFICATION_SUCCESS'\nexport const RESET_EXPRESS_NOTIFICATION_SUCCESS = 'RESET_EXPRESS_NOTIFICATION_SUCCESS'\nexport const RESET_EXPRESS_RESPONSE = 'RESET_EXPRESS_RESPONSE'\nexport const SEND_EXPRESS_READY_EVENT = 'SEND_EXPRESS_READY_EVENT'\nexport const SET_META = 'SET_META'\nexport const ECHO_STATIC_FILE = 'ECHO_STATIC_FILE'\nexport const REQUEST_GEOLOCATION = 'REQUEST_GEOLOCATION'\nexport const SET_GEOLOCATION = 'SET_GEOLOCATION'\n\nexport const uploadFile = createAction(UPLOAD_FILE)\nexport const uploadFileSuccess = createAction(UPLOAD_FILE_SUCCESS, (file: File) => (file))\nexport const uploadFiles = createAction(UPLOAD_FILES, (type: string = '') => ({ type }))\nexport const uploadFilesSuccess = createAction(UPLOAD_FILES_SUCCESS, (files: File[]) => files)\nexport const removeFile = createAction(REMOVE_FILE, (id: number) => id)\nexport const removeFileSuccess = createAction(REMOVE_FILE_SUCCESS, (id: number) => id)\nexport const resetAttachments = createAction(RESET_ATTACHMENTS)\nexport const sendExpressEvent = createAction(SEND_EXPRESS_EVENT, (expressEvent: ExpressEvent) => expressEvent)\nexport const sendMessageExpressEvent = createAction(SEND_MESSAGE_EXPRESS_EVENT,\n  (payload: SendMessageActionPayload) => payload,\n)\nexport const sendExpressEventSuccess = createAction(SEND_EXPRESS_EVENT_SUCCESS,\n  (response: ExpressMethodResponse | null) => response,\n)\nexport const setExpressNotificationSuccess = createAction(SET_EXPRESS_NOTIFICATION_SUCCESS,\n  (notification: ExpressNotification | null) => notification,\n)\nexport const resetExpressNotificationSuccess = createAction(RESET_EXPRESS_NOTIFICATION_SUCCESS)\nexport const setMeta = createAction(SET_META, (meta: ExpressMethodResponse | null) => meta)\nexport const resetExpressResponse = createAction(RESET_EXPRESS_RESPONSE)\nexport const sendReadyEvent = createAction(SEND_EXPRESS_READY_EVENT)\nexport const setGeolocation = createAction(SET_GEOLOCATION, (geolocation: Geolocation) => geolocation)\nexport const requestGeolocation = createAction(REQUEST_GEOLOCATION)\nexport const echoStaticFile = createAction(ECHO_STATIC_FILE)\n\nexport type uploadFileActionType = ReturnType<typeof uploadFile>\nexport type uploadFileSuccessActionType = ReturnType<typeof uploadFileSuccess>\nexport type uploadFilesActionType = ReturnType<typeof uploadFiles>\nexport type uploadFilesSuccessActionType = ReturnType<typeof uploadFilesSuccess>\nexport type removeFileActionType = ReturnType<typeof removeFile>\nexport type removeFileSuccessActionType = ReturnType<typeof removeFileSuccess>\nexport type sendExpressEventActionType = ReturnType<typeof sendExpressEvent>\nexport type sendMessageExpressEventActionType = ReturnType<typeof sendMessageExpressEvent>\nexport type sendExpressEventSuccessActionType = ReturnType<typeof sendExpressEventSuccess>\nexport type setExpressNotificationSuccessActionType = ReturnType<typeof setExpressNotificationSuccess>\nexport type setMetaActionType = ReturnType<typeof setMeta>\nexport type setGeolocationActionType = ReturnType<typeof setGeolocation>\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getAttachments = createSelector([(state: AppState) => state.client.attachments], features => features)\n\nexport const getExpressResponse = createSelector([(state: AppState) => state.client.response], response => response)\n\nexport const getMeta = createSelector([(state: AppState) => state.client.meta], meta => meta)\n\nexport const getGeolocation = createSelector(\n  [(state: AppState) => state.client.geolocation],\n  geolocation => geolocation\n)\n\nexport const getExpressNotifications = createSelector(\n  [(state: AppState) => state.client.notifications],\n  notificaions => notificaions\n)\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.828 11l5.586-5.586L12 4l-8 8 8 8 1.414-1.414L7.828 13H20v-2z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.fa74ab51.svg\";\nexport { ForwardRef as ReactComponent };","import { Link } from 'react-router-dom'\nimport { ReactComponent as ArrowLeft } from '../../../assets/arrow-left.svg'\nimport './FeaturePageHeader.scss'\n\nexport default function FeaturePageHeader({ name }) {\n  return (\n    <div className='feature-page__header'>\n      <Link className='btn--arrow-left' to='/'>\n        <ArrowLeft className='icon--arrow-left' height={24} width={24} />\n      </Link>\n      <div className='feature-page__info'>\n        <span className='feature-page__title'>{name} method</span>\n      </div>\n    </div>\n  )\n}\n","import {\n  BotFeature,\n  BotFeatureMethod,\n  ExpressFeature,\n  ExpressFeatureMethod,\n  Input,\n  InputId,\n  InputLabel,\n  InputType,\n} from '../../types'\nimport './FeaturePage.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { INPUT_TYPE } from '../../constants'\nimport { useFormik } from 'formik'\nimport { FormValues, getFormInitialValues } from '../../helpers'\nimport { getFeatureBotResponse } from '../../redux/selectors/bot'\nimport { resetFeatures, sendFeatureBotEvent, sendFeatureBotEventSuccess } from '../../redux/actions/bot'\nimport { useEffect, useMemo, useState } from 'react'\nimport { ReactComponent as PlusIcon } from '../../assets/plus.svg'\nimport { ReactComponent as RemoveIcon } from '../../assets/clear-input.svg'\nimport { ReactComponent as FileIcon } from '../../assets/file.svg'\nimport JsonViewer from '../../components/ui/json-editor/JsonViewer'\nimport classnames from 'classnames'\nimport {\n  removeFileSuccess,\n  resetAttachments,\n  resetExpressResponse,\n  sendExpressEvent,\n  sendExpressEventSuccess,\n  sendMessageExpressEvent,\n  uploadFile,\n  uploadFiles,\n} from '../../redux/actions/client'\nimport { getAttachments, getExpressResponse } from '../../redux/selectors/client'\nimport { ReactMarkdown } from 'react-markdown/lib/react-markdown'\nimport FeaturePageHeader from '../../components/ui/feature-page-header/FeaturePageHeader'\nimport {\n  getChats,\n  openClientSettings,\n  openContactCard,\n  openGroupChat,\n  searchCorporatePhonebook,\n  sendBotCommand,\n} from '@unlimited/smartapp-sdk'\n\nexport default function FeaturePage({ name, method, uiElements = [] }: BotFeature | ExpressFeature) {\n  const dispatch = useDispatch()\n  const botResponse = useSelector(getFeatureBotResponse)\n  const expressResponse = useSelector(getExpressResponse)\n  const attachments = useSelector(getAttachments)\n\n  const [inputs, setInputs] = useState<Input[]>([])\n  const [inputError, setInputError] = useState('')\n  const [isJSONViewer, setIsJSONViewer] = useState(false)\n\n  const isAllowNewInputs = method === BotFeatureMethod.SEARCH_USERS\n  const isFilesMethod = [BotFeatureMethod.ECHO_FILE, BotFeatureMethod.ECHO_FILES].includes(method as BotFeatureMethod)\n  const isUsersMethod = BotFeatureMethod.SEARCH_USERS === method\n  const isExpressMethod = Object.values(ExpressFeatureMethod).includes(method as ExpressFeatureMethod)\n\n  const handleClickPlus = () => {\n    const last = inputs[inputs.length - 1]\n    const { id } = last\n    const next: Input = {\n      ...last,\n      id: id.includes(InputId.HUIDS) ? `${id}${inputs.length}` : id,\n    }\n\n    setInputs(inputs => [...inputs, next])\n  }\n\n  const handleFilesSubmit = () => {\n    if (attachments) {\n      const botFeatureMethod = method as BotFeatureMethod\n\n      dispatch(\n        sendFeatureBotEvent({\n          method: botFeatureMethod,\n          params: {},\n          files: attachments,\n        }),\n      )\n    }\n  }\n\n  const handleOpenGroupChat = async (formValues: FormValues) => {\n    if (!filterFormValues(formValues).length) return\n\n    await openGroupChat({ groupChatId: formValues?.groupChatId })\n  }\n\n  const handleGetChats = async (formValues: FormValues) => {\n    const chats = await getChats({ filter: formValues?.filter })\n    dispatch(sendExpressEventSuccess(chats))\n  }\n\n  const handleSendBotCommand = async (formValues: FormValues) => {\n    const result = await sendBotCommand(\n      {\n        userHuid: formValues?.userHuid,\n        data: formValues?.data ? {\n          command: formValues?.data,\n        } : null,\n        body: formValues?.body,\n      },\n    )\n    dispatch(sendExpressEventSuccess(result))\n  }\n\n  const handleSearchCorporatePhoneBook = async (formValues: FormValues) => {\n    const phonebook = await searchCorporatePhonebook({ filter: formValues?.filter })\n    dispatch(sendExpressEventSuccess(phonebook))\n  }\n\n  const handleOpenContactCard = async (formValues: FormValues) => {\n    await openContactCard({ userHuid: formValues?.userHuid })\n  }\n\n  const handleSendMessage = (formValues: FormValues) => {\n    if (!filterFormValues(formValues).length) return\n\n    const { userHuid, groupChatId, message } = formValues\n    dispatch(\n      sendMessageExpressEvent({\n        userHuid,\n        groupChatId,\n        messageBody: message,\n        messageMeta: {},\n      }),\n    )\n  }\n\n  const handleDefault = (formValues: FormValues) => {\n    if (!filterFormValues(formValues).length) return\n\n    const event = {\n      method: method as ExpressFeatureMethod,\n      params: formValues,\n    }\n\n    dispatch(sendExpressEvent(event))\n  }\n\n  const handleFormSubmitForExpressMethod = async (formValues: FormValues) => {\n    switch (method) {\n      case ExpressFeatureMethod.SEND_MESSAGE:\n        handleSendMessage(formValues)\n        break\n      case ExpressFeatureMethod.OPEN_CLIENT_SETTINGS:\n        openClientSettings()\n        break\n      case ExpressFeatureMethod.GET_CHATS:\n        await handleGetChats(formValues)\n        break\n      case ExpressFeatureMethod.OPEN_GROUP_CHAT: {\n        await handleOpenGroupChat(formValues)\n        break\n      }\n      case ExpressFeatureMethod.SEARCH_CORPORATE_PHONEBOOK: {\n        await handleSearchCorporatePhoneBook(formValues)\n        break\n      }\n      case ExpressFeatureMethod.SEND_BOT_COMMAND: {\n        await handleSendBotCommand(formValues)\n        break\n      }\n      case ExpressFeatureMethod.OPEN_CONTACT_CARD: {\n        await handleOpenContactCard(formValues)\n        break\n      }\n      default:\n        handleDefault(formValues)\n    }\n  }\n\n  const filterFormValues = useMemo(() => (\n    formValues: FormValues) => Object.values(formValues).filter(value => value),\n    [],\n  )\n\n  const handleFormSubmitForBotMethod = (formValues: FormValues) => {\n    const values = filterFormValues(formValues)\n    if (!values.length) return\n\n    const event = {\n      method: method as BotFeatureMethod,\n      params: isUsersMethod ? { huids: values } : formValues,\n    }\n\n    dispatch(sendFeatureBotEvent(event))\n  }\n\n  const handleFormSubmit = (formValues: FormValues) => {\n    if (isExpressMethod) {\n      handleFormSubmitForExpressMethod(formValues)\n    } else {\n      handleFormSubmitForBotMethod(formValues)\n    }\n  }\n\n  const handleUploadFilesClick = () => {\n    if (method === BotFeatureMethod.ECHO_FILE) {\n      dispatch(uploadFile())\n    } else if (method === BotFeatureMethod.ECHO_FILES) {\n      dispatch(uploadFiles())\n    }\n  }\n\n  const handleRemoveFile = (fileId: number) => {\n    dispatch(removeFileSuccess(fileId))\n\n    if (attachments?.length === 1) dispatch(sendFeatureBotEventSuccess(null))\n  }\n\n  const toggleIsJSONViewer = () => setIsJSONViewer(!isJSONViewer)\n\n  const formik = useFormik({\n    initialValues: getFormInitialValues(inputs),\n    onSubmit: handleFormSubmit,\n  })\n\n  const getIsSubmitButtonDisabled = () => {\n    if (method === ExpressFeatureMethod.GET_CHATS) return false\n    return isFilesMethod ? !attachments?.length : !Object.values(formik.values).filter(value => value).length\n  }\n\n  useEffect(() => {\n    const inputs: Input[] = uiElements.map((input, index) => ({\n      ...input,\n      id: input.id.includes(InputId.HUIDS) ? `${input.id}${index}` : input.id,\n    }))\n\n    setInputs(inputs)\n    return () => {\n      dispatch(resetFeatures())\n      dispatch(resetAttachments())\n      dispatch(resetExpressResponse())\n    }\n  }, [uiElements, dispatch])\n\n  const renderFilesMethodComponent = () => (\n    <div className='feature-page__form'>\n      <span className='feature-page__title'>\n        {method === BotFeatureMethod.ECHO_FILE ? InputLabel.FILE : InputLabel.FILES}\n      </span>\n      <button className='btn--attach' onClick={handleUploadFilesClick}>\n        {method === BotFeatureMethod.ECHO_FILE ? 'Attach file' : 'Attach files'}\n      </button>\n      {!!attachments?.length && (\n        <div className='attachments'>\n          {attachments.map(attachment => (\n            <span className='attachments__item' key={attachment.fileId}>\n              <span>{attachment.fileName}</span>\n              <RemoveIcon\n                width={20}\n                height={20}\n                className='btn--remove-attachment'\n                onClick={() => handleRemoveFile(attachment.fileId)}\n              />\n            </span>\n          ))}\n        </div>\n      )}\n      <div className='form-buttons'>\n        <button\n          className={classnames({\n            'btn--submit': true,\n            'btn--submit-disabled': getIsSubmitButtonDisabled(),\n          })}\n          onClick={handleFilesSubmit}\n          disabled={getIsSubmitButtonDisabled()}\n          type='button'\n        >\n          Submit\n        </button>\n      </div>\n    </div>\n  )\n\n  const renderTextMethodComponent = () => {\n    const getIsInputError = ({ id, type }) => {\n      const isUuid = (uuid: string) => /[0-9a-fA-F-]{36}/.test(uuid)\n\n      const isPhone = (phone: string) =>\n        /(^8|7|\\+7)((\\d{10})|(\\s\\(\\d{3}\\)\\s\\d{3}\\s\\d{2}\\s\\d{2}))/.test(phone)\n\n      const isNotEmpty = formik.values[id]\n\n      if ((isUsersMethod || type === InputType.UUID) && isNotEmpty) {\n        return !isUuid(formik.values[id])\n      } else if (id === InputId.PHONE) {\n        return !isPhone(formik.values[id])\n      }\n    }\n\n    return (\n      !!inputs?.length && (\n        <form className='feature-page__form' onSubmit={formik.handleSubmit}>\n          {inputs.map(({ id, type, label }, index) => {\n            const inputType = INPUT_TYPE[type]\n\n            const isShowLabel = isUsersMethod ? index === 0 : true\n\n            return (\n              <div key={id}>\n                {isShowLabel && <span className='feature-page__title'>{label}</span>}\n                <input\n                  className={classnames({\n                    input: true,\n                    'input--error': getIsInputError({ id, type }),\n                  })}\n                  onChange={formik.handleChange}\n                  value={formik.values[id] || ''}\n                  type={inputType}\n                  multiple={id === InputId.FILES}\n                  id={id}\n                  min={0}\n                />\n                {inputType === INPUT_TYPE.INPUT_TEXT && formik.values[id] && (\n                  <RemoveIcon\n                    className='btn--clear-input'\n                    onClick={() => {\n                      formik.setFieldValue(id, '')\n                      inputError && setInputError('')\n                    }}\n                    height={20}\n                    width={20}\n                  />\n                )}\n              </div>\n            )\n          })}\n          <div className='form-buttons'>\n            <button\n              className={classnames({\n                'btn--submit': true,\n                'btn--submit-disabled': getIsSubmitButtonDisabled(),\n              })}\n              disabled={getIsSubmitButtonDisabled()}\n              type='submit'\n            >\n              Submit\n            </button>\n            {isAllowNewInputs && (\n              <PlusIcon\n                title='Add new input'\n                className='btn--plus'\n                onClick={handleClickPlus}\n                height={24}\n                width={24}\n              />\n            )}\n          </div>\n        </form>\n      )\n    )\n  }\n\n  const renderBotResponse = () => {\n    const response = botResponse?.payload?.result as any\n\n    return (\n      <>\n        <div className='response-markdown'>\n          <ReactMarkdown>\n            {method === BotFeatureMethod.ECHO ?\n              ('text: ' + response?.replaceAll?.('\\n', '\\n\\r')) ||\n              (response?.replaceAll?.('\\n', '\\n\\r')) + '\\n\\r' +\n              (response?.textLength &&\n                'text length: ' + response?.textLength) :\n              (response?.replaceAll?.('\\n', '\\n\\r'))\n            }\n          </ReactMarkdown>\n        </div>\n        {method === BotFeatureMethod.ECHO_FILES && (\n          <div className='response-files'>\n            Files:\n            {botResponse?.files?.map(() => (\n              <FileIcon className='response-files__file' height={20} width={20} />\n            ))}\n          </div>\n        )}\n        {botResponse && (\n          <JsonViewer\n            isJSONViewer={isJSONViewer}\n            botResponse={botResponse}\n            toggleIsJSONViewer={toggleIsJSONViewer}\n          />\n        )}\n      </>\n    )\n  }\n\n  const renderExpressResponse = () => {\n    return expressResponse && (\n      <div className='response-express'>\n        {JSON.stringify(expressResponse?.payload, null, 2)}\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"feature-page\">\n        <FeaturePageHeader name={name} />\n        {isFilesMethod ? renderFilesMethodComponent() : renderTextMethodComponent()}\n      </div>\n      {botResponse && renderBotResponse()}\n      {renderExpressResponse()}\n    </>\n  )\n}\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getTopLoader = createSelector(\n  [(state: AppState) => state.ui.topLoader],\n  topLoader => topLoader\n)\n\nexport const getMainLoader = createSelector(\n  [(state: AppState) => state.ui.mainLoader],\n  mainLoader => mainLoader\n)\n\nexport const getRedirectPath = createSelector(\n  [(state: AppState) => state.ui.redirectPath],\n  redirectPath => redirectPath\n)\n","import React, { useEffect, useState, useRef } from 'react'\nimport classnames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport './TopLoader.scss'\nimport { getTopLoader } from '../../../redux/selectors/ui'\n\nexport default function TopLoader() {\n  const topLoader = useSelector(getTopLoader)\n\n  const [start, setStart] = useState(false)\n  const [stop, setStop] = useState(false)\n  const [finish, setFinish] = useState(false)\n\n  const stopTimeout = useRef<NodeJS.Timeout | null>(null)\n  const finishTimeout = useRef<NodeJS.Timeout | null>(null)\n\n  useEffect(() => {\n    if (topLoader && !start) {\n      setStart(true)\n    }\n\n    if (!topLoader && start) {\n      setStart(false)\n      setStop(true)\n\n      stopTimeout.current = setTimeout(() => {\n        setFinish(true)\n\n        finishTimeout.current = setTimeout(() => {\n          setStop(false)\n          setFinish(false)\n        }, 100)\n      }, 200)\n    }\n  }, [topLoader, start])\n\n  useEffect(() => {\n    return () => {\n      if (stopTimeout.current) clearTimeout(stopTimeout.current)\n      if (finishTimeout.current) clearTimeout(finishTimeout.current)\n    }\n  }, [])\n\n  return (\n    <div className={classnames({ 'top-loader': true, 'top-loader--enabled': start && !finish })}>\n      <div\n        className={classnames({\n          'top-loader__bar': true,\n          'top-loader__bar--start': start,\n          'top-loader__bar--stop': stop,\n          'top-loader__bar--finish': finish,\n        })}\n      />\n    </div>\n  )\n}\n","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBotxIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 12 12\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.379 7.017v2.775h-.55A.816.816 0 0 1 0 8.989V7.427c0-.443.371-.803.829-.803h.566c-.01.13-.016.261-.016.393zm9.792-.393c.458 0 .829.36.829.803V8.99a.816.816 0 0 1-.829.803h-.55V7.017c0-.132-.006-.263-.016-.393h.566zM10.047 9.873v-2.82c0-.132-.006-.263-.018-.393C9.857 4.651 8.377 3.043 6.5 2.8h-.997c-1.88.244-3.36 1.853-3.532 3.863-.01.129-.017.26-.017.392v4.754h8.094V9.873zm-5.998-.66c-.608 0-1.101-.522-1.101-1.167 0-.644.493-1.166 1.1-1.166.609 0 1.102.522 1.102 1.166 0 .645-.493 1.167-1.101 1.167zm2.96-1.167c0-.644.493-1.166 1.1-1.166.609 0 1.102.522 1.102 1.166 0 .645-.493 1.167-1.101 1.167s-1.101-.522-1.101-1.167z\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBotxIcon);\nexport default __webpack_public_path__ + \"static/media/botx-icon.cf9274ad.svg\";\nexport { ForwardRef as ReactComponent };","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { EXPRESS_NOTIFICATION_FEATURE } from '../../constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getExpressNotifications } from '../../redux/selectors/client'\nimport './ExpressNotifications.scss'\nimport { resetExpressNotificationSuccess } from '../../redux/actions/client'\n\nexport default function ExpressNotifications() {\n  const dispatch = useDispatch()\n  const expressNotifications = useSelector(getExpressNotifications)\n  const handleClear = () => {\n    dispatch(resetExpressNotificationSuccess())\n  }\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={EXPRESS_NOTIFICATION_FEATURE.name} />\n        <div className='feature-page__notifications'>\n          {!!expressNotifications.length ? (\n            <>\n              <div\n                className='notifications__clear-button'\n                onClick={handleClear}\n                title='Clear notifications'\n              >\n                Clear\n              </div>\n              {expressNotifications.map((item, i) => (\n                <div className='notifications__item' key={i}>\n                  {JSON.stringify(item?.data, null, 2)}\n                </div>\n              ))}\n            </>\n          ) : (\n            <div className='feature-page__notifications-placeholder'>\n              New notifications will appear here...\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  )\n}\n","import { createAction } from 'redux-actions'\n\nexport const SET_TOP_LOADER = 'SET_TOP_LOADER'\nexport const SET_MAIN_LOADER = 'SET_MAIN_LOADER'\nexport const SET_REDIRECT_PATH = 'SET_REDIRECT_PATH'\n\nexport const setTopLoader = createAction(SET_TOP_LOADER, (topLoader: boolean) => topLoader)\nexport const setMainLoader = createAction(SET_MAIN_LOADER, (mainLoader: boolean) => mainLoader)\nexport const setRedirectPath = createAction(SET_REDIRECT_PATH, (redirectPath: string) => redirectPath)\n\nexport type setTopLoaderActionType = ReturnType<typeof setTopLoader>\nexport type setMainLoaderActionType = ReturnType<typeof setMainLoader>\nexport type setRedirectPathActionType = ReturnType<typeof setRedirectPath>\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { OPEN_SMART_APP_META_FEATURE } from '../../constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\nimport { setRedirectPath } from '../../redux/actions/ui'\nimport { getMeta } from '../../redux/selectors/client'\nimport { setMeta } from '../../redux/actions/client'\n\nexport default function MetaPage() {\n  const dispatch = useDispatch()\n  const meta = useSelector(getMeta)\n\n  useEffect(() => {\n    return () => {\n      dispatch(setRedirectPath(''))\n      dispatch(setMeta(null))\n    }\n  }, [dispatch])\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={OPEN_SMART_APP_META_FEATURE.name} />\n        {meta && (\n          <div className='response-express'>\n            {JSON.stringify(meta.payload, null, 2)}\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n","import { createBrowserHistory } from 'history'\n\n// Create history singleton\nexport const history = createBrowserHistory()\n","import { useEffect, useRef } from 'react'\nimport { Html5QrcodeScanner } from 'html5-qrcode'\nimport './ScanQR.scss'\n\nexport default function ScanQR({\n  onScanSuccess,\n  onScanFailure,\n}: {\n  onScanSuccess: (text: string, result: any) => void\n  onScanFailure: (error: string) => void\n}) {\n  const config = useRef<any>({\n    fps: 10,\n    qrbox: 250,\n    disableFlip: true,\n  })\n\n  useEffect(() => {\n    const html5QrcodeScanner = new Html5QrcodeScanner('reader', config.current, false)\n    html5QrcodeScanner.render(onScanSuccess, onScanFailure)\n\n    return () => {}\n    // eslint-disable-next-line\n  }, [])\n\n  return <div id=\"reader\" />\n}\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { SCAN_QR_FEATURE } from '../../constants'\nimport ScanQR from '../scan-qr/ScanQR'\nimport { useState } from 'react'\n\nexport function ScanQRPage() {\n  const [decodedText, setDecodedText] = useState(null)\n  const [decodedResult, setDecodedResult] = useState(null)\n  const [error, setError] = useState(null)\n\n  const handleOnScanSuccess = (text: string, result: any) => {\n    setDecodedText(text)\n    setDecodedResult(result)\n    setError(null)\n    console.log(`Code matched: ${text}`, result)\n  }\n\n  const handleOnScanFailure = err => {\n    setError(err)\n    console.warn(`Code scan error: ${err}`)\n  }\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={SCAN_QR_FEATURE.name} />\n      <ScanQR onScanSuccess={handleOnScanSuccess} onScanFailure={handleOnScanFailure} />\n      {decodedText && (\n        <>\n          <p>Decoded text:</p>\n          <div>{decodedText}</div>\n        </>\n      )}\n      {decodedResult && (\n        <>\n          <p>Decoded result:</p>\n          <div>{JSON.stringify(decodedResult)}</div>\n        </>\n      )}\n      {error && (\n        <>\n          <p>Error:</p>\n          <div>{error}</div>\n        </>\n      )}\n    </div>\n  )\n}\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { OPEN_FILE_FEATURE } from '../../constants'\nimport classnames from \"classnames\"\nimport { useState } from \"react\"\nimport { Bridge as bridge } from \"@unlimited/smartapp-sdk\"\n\nexport default function OpenFile() {\n  const [inputValue, setInputValue] = useState('')\n  const handleClick = () => {\n    if (!inputValue) return\n    console.error({inputValue: JSON.parse(inputValue)})\n\n    bridge?.sendClientEvent({\n      method: OPEN_FILE_FEATURE.method,\n      params: JSON.parse(inputValue),\n    })\n  }\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={OPEN_FILE_FEATURE.name} />\n      <input\n        className={classnames({\n          input: true,\n        })}\n        onChange={e => setInputValue(e.target.value)}\n        value={inputValue}\n        type={'text'}\n      />\n      <div className='form-buttons'>\n        <button\n          className={classnames({\n            'btn--submit': true,\n            'btn--submit-disabled': !inputValue,\n          })}\n          disabled={!inputValue}\n          type=\"submit\"\n          onClick={handleClick}\n        >\n          Submit\n        </button>\n      </div>\n    </div>\n  )\n}\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { OPEN_WEB_PAGE_FEATURE } from '../../constants'\nimport { useState } from 'react'\nimport './OpenWebPage.scss'\n\nexport default function OpenWebPage() {\n  const [link, setLink] = useState('https://www.tutorialrepublic.com/')\n\n\n  const handleChange = (event: any) => {\n    const { value } = event.target\n    if (value) setLink(value)\n  }\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={OPEN_WEB_PAGE_FEATURE.name} />\n        <div className='open-web-page'>\n          <input\n            className='open-web-page__input'\n            type='url'\n            defaultValue={link}\n            onChange={handleChange}\n          />\n          <a className='open-web-page__link' href={link}>\n            {link}\n          </a>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useLayoutEffect } from 'react'\nimport './RequestGeolocation.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getGeolocation } from '../../redux/selectors/client'\nimport FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { REQUEST_LOCATION } from '../../constants'\nimport { requestGeolocation, setGeolocation } from '../../redux/actions/client'\nimport { dateFormat } from '../../helpers'\n\nfunction RequestGeolocation() {\n  const dispatch = useDispatch()\n  const geolocation = useSelector(getGeolocation)\n  useLayoutEffect(() => {\n    dispatch(setGeolocation(null))\n  }, [dispatch])\n\n  const handleSubmit = () => {\n    dispatch(requestGeolocation())\n  }\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={REQUEST_LOCATION.name} />\n      <div className=\"request-geolocation\">\n        <p className=\"request-geolocation__title\">Координаты</p>\n        <div className=\"request-geolocation__info\">\n          <div className=\"request-geolocation__info--latitude-longitude\">{geolocation?.latitude}</div>\n          <div className=\"request-geolocation__info--latitude-longitude\">{geolocation?.longitude}</div>\n          <button onClick={handleSubmit} className=\"request-geolocation__info--button\">\n            Определить\n          </button>\n        </div>\n        <div className=\"request-geolocation__timestamp\">\n          Timestamp: {geolocation?.timestamp}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RequestGeolocation\n","import JsonViewerEditor from '../json-editor/JsonViewer'\nimport { BotMethodResponse } from '../../../types'\n\nexport default function JsonViewer(\n  {\n    isJSONViewer,\n    toggleIsJSONViewer,\n    botResponse,\n  }: {\n    isJSONViewer: boolean,\n    toggleIsJSONViewer: () => void,\n    botResponse: BotMethodResponse,\n  },\n) {\n  return (\n    <div>\n      <div className='response-markdown-form'>\n        <input\n          checked={isJSONViewer}\n          className='form-toggler__input'\n          id='form-toggler'\n          type='checkbox'\n          onChange={toggleIsJSONViewer}\n        />\n        <span\n          className='form-toggler'\n          onClick={toggleIsJSONViewer}\n        >\n          Show JSON Viewer\n        </span>\n      </div>\n      {isJSONViewer && (\n        <div className='response-json'>\n          <JsonViewerEditor height={24} json={botResponse} />\n        </div>\n      )}\n    </div>\n  )\n}\n","import FeaturePageHeader from '../ui/feature-page-header/FeaturePageHeader'\nimport { ECHO_STATIC_FILE_FEATURE } from '../../constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFeatureBotResponse, getStaticFile } from '../../redux/selectors/bot'\nimport './EchoStaticFile.scss'\nimport classnames from 'classnames'\nimport { getAttachments } from '../../redux/selectors/client'\nimport { uploadFile } from '../../redux/actions/client'\nimport { ReactMarkdown } from 'react-markdown/lib/react-markdown'\nimport JsonViewer from '../ui/json-viewer/JsonViewer'\nimport { useState } from 'react'\nimport { echoStaticFile } from '../../redux/actions/bot'\n\nexport default function EchoStaticFile() {\n  const dispatch = useDispatch()\n  const staticFile = useSelector(getStaticFile) as any\n  const attachments = useSelector(getAttachments)\n  const botResponse = useSelector(getFeatureBotResponse)\n  const [isJSONViewer, setIsJSONViewer] = useState(false)\n\n  const handleFilesSubmit = async () => {\n    if (attachments?.length) {\n      dispatch(echoStaticFile(attachments[0]))\n    }\n  }\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={ECHO_STATIC_FILE_FEATURE.name} />\n        <div className='feature-page__echo-static-file'>\n          <div className='feature-page__form'>\n            <button\n              className='btn--attach'\n              onClick={() => dispatch(uploadFile())}\n            >\n              Attach files\n            </button>\n            <p>{attachments?.[0]?.fileName}</p>\n            <div className='form-buttons'>\n              <button\n                className={classnames({\n                  'btn--submit': true,\n                  'btn--submit-disabled': !attachments?.length,\n                })}\n                onClick={handleFilesSubmit}\n                disabled={!attachments?.length}\n                type='button'\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <>\n        <div className='response-markdown'>\n          <ReactMarkdown>\n            {botResponse?.payload?.result?.replaceAll?.('\\n', '\\n\\r')}\n          </ReactMarkdown>\n        </div>\n        {staticFile && (\n          <JsonViewer\n            isJSONViewer={isJSONViewer}\n            botResponse={staticFile}\n            toggleIsJSONViewer={() => setIsJSONViewer(!isJSONViewer)}\n          />\n        )}\n      </>\n      <img src={staticFile?.payload?.result} alt='' />\n    </>\n  )\n}\n","import './FeatureSmartapp.scss'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFeaturesMenu } from '../../redux/selectors/bot'\nimport { Link, Route, Switch } from 'react-router-dom'\nimport FeaturePage from '../feature-page/FeaturePage'\nimport { loadFeatures } from '../../redux/actions/bot'\nimport TopLoader from '../../components/ui/top-loader/TopLoader'\nimport { ReactComponent as BotxIcon } from '../../assets/botx-icon.svg'\nimport {\n  ECHO_STATIC_FILE_FEATURE,\n  EXPRESS_FEATURES,\n  EXPRESS_NOTIFICATION_FEATURE,\n  OPEN_FILE_FEATURE,\n  OPEN_SMART_APP_META_FEATURE,\n  OPEN_WEB_PAGE_FEATURE,\n  REQUEST_LOCATION,\n  SCAN_QR_FEATURE,\n} from '../../constants'\nimport ExpressNotifications from '../../components/express-notifications/ExpressNotifications'\nimport MetaPage from '../../components/meta-page/MetaPage'\nimport { getRedirectPath } from '../../redux/selectors/ui'\nimport { history } from '../../redux/router'\nimport { ScanQRPage } from '../../components/scan-qr-page/ScanQRPage'\nimport OpenFile from '../../components/open-file/OpenFile'\nimport { BotFeatureMethod, ExpressFeatureMethod } from '../../types'\nimport { openClientSettings, useQuery } from '@unlimited/smartapp-sdk'\nimport OpenWebPage from '../../components/open-web-page/OpenWebPage'\nimport RequestGeolocation from '../../components/request-geolocation/RequestGeolocation'\nimport EchoStaticFile from '../../components/echo-static-file/EchoStaticFile'\n\nexport default function FeatureSmartapp() {\n  const dispatch = useDispatch()\n  const botFeatures = useSelector(getFeaturesMenu)\n  const redirectPath = useSelector(getRedirectPath)\n  const { platform } = useQuery()\n\n  const handleOpenClientSettings = () => {\n    if (platform !== 'web') {\n      openClientSettings()\n    } else {\n      alert('Feature is unavailable on web client')\n    }\n  }\n\n  useEffect(() => {\n    if (redirectPath) history.push(redirectPath)\n\n    if (!botFeatures) dispatch(loadFeatures())\n  }, [dispatch, redirectPath, botFeatures])\n\n  return (\n    <div className='feature-smartapp'>\n      <div className='header'>\n        <span className='header__content'>\n          <BotxIcon className='header__icon' height={20} width={20} />\n          <span className='header__text'>Feature Smartapp</span>\n        </span>\n      </div>\n      <TopLoader />\n      <section className='feature-smartapp__menu'>\n        <Switch>\n          {botFeatures?.length && botFeatures.map(item => {\n            return item.name === ECHO_STATIC_FILE_FEATURE.name ? (\n              <Route\n                key={`${BotFeatureMethod.ECHO_STATIC_FILE}-route`}\n                path={`/${BotFeatureMethod.ECHO_STATIC_FILE}`}>\n                <EchoStaticFile />\n              </Route>\n            ) : (\n              <Route key={`${item.method}-route`} path={`/${item.method}`}>\n                <FeaturePage {...item} />\n              </Route>\n            )\n          })}\n          {EXPRESS_FEATURES.map(item => (\n            <Route\n              key={`${item.method}-route`}\n              path={`/${item.method}`}\n            >\n              <FeaturePage {...item} />\n            </Route>\n          ))}\n          <Route\n            key={`${OPEN_SMART_APP_META_FEATURE.method}-route`}\n            path={`/${OPEN_SMART_APP_META_FEATURE.method}`}\n          >\n            <MetaPage />\n          </Route>\n          <Route\n            key={`${EXPRESS_NOTIFICATION_FEATURE.method}-route`}\n            path={`/${EXPRESS_NOTIFICATION_FEATURE.method}`}\n          >\n            <ExpressNotifications />\n          </Route>\n          <Route\n            key={`${SCAN_QR_FEATURE.method}-route`}\n            path={`/${SCAN_QR_FEATURE.method}`}\n          >\n            <ScanQRPage />\n          </Route>\n          <Route\n            key={`${OPEN_FILE_FEATURE.method}-route`}\n            path={`/${OPEN_FILE_FEATURE.method}`}\n          >\n            <OpenFile />\n          </Route>\n          <Route\n            key={`${OPEN_WEB_PAGE_FEATURE.method}-route`}\n            path={`/${OPEN_WEB_PAGE_FEATURE.method}`}\n          >\n            <OpenWebPage />\n          </Route>\n          <Route\n            key={`${REQUEST_LOCATION.method}-route`}\n            path={`/${REQUEST_LOCATION.method}`}\n          >\n            <RequestGeolocation />\n          </Route>\n          <Route path={'/'}>\n            {botFeatures?.length && (\n              <span className={'feature-smartapp__menu-title'}>Bot methods</span>\n            )}\n            {botFeatures?.map(item => (\n              <Link\n                className='feature-smartapp__menu-item'\n                key={`${item.method}-link`}\n                to={`/${item.method}`}\n              >\n                {item.name}\n              </Link>\n            ))}\n            <span className={'feature-smartapp__menu-title'}>\n              Client methods\n            </span>\n            {EXPRESS_FEATURES.map(item => (\n                item.method === ExpressFeatureMethod.OPEN_CLIENT_SETTINGS ? (\n                  <div className='feature-smartapp__menu-item' onClick={handleOpenClientSettings}>\n                    {item.name}\n                  </div>\n                ) : (\n                  <Link\n                    className='feature-smartapp__menu-item'\n                    key={`${item.method}-link`}\n                    to={`/${item.method}`}\n                  >\n                    {item.name}\n                  </Link>\n                )\n              ),\n            )}\n            <Link\n              className='feature-smartapp__menu-item'\n              key={`${EXPRESS_NOTIFICATION_FEATURE.method}-link`}\n              to={`/${EXPRESS_NOTIFICATION_FEATURE.method}`}\n            >\n              {EXPRESS_NOTIFICATION_FEATURE.name}\n            </Link>\n            <Link\n              className='feature-smartapp__menu-item'\n              key={`${SCAN_QR_FEATURE.method}-link`}\n              to={`/${SCAN_QR_FEATURE.method}`}\n            >\n              {SCAN_QR_FEATURE.name}\n            </Link>\n            <Link\n              className='feature-smartapp__menu-item'\n              key={`${OPEN_WEB_PAGE_FEATURE.method}-link`}\n              to={`/${OPEN_WEB_PAGE_FEATURE.method}`}\n            >\n              {OPEN_WEB_PAGE_FEATURE.name}\n            </Link>\n            <Link\n              className='feature-smartapp__menu-item'\n              key={`${REQUEST_LOCATION.method}-link`}\n              to={`/${REQUEST_LOCATION.method}`}\n            >\n              {REQUEST_LOCATION.name}\n            </Link>\n          </Route>\n        </Switch>\n      </section>\n    </div>\n  )\n}\n","import { BotMethodResponse } from '../../types'\nimport './Notifier.scss'\n\nexport default function Notifier({ result, status }: BotMethodResponse['payload']) {\n  return (\n    <div className={'notifier'}>\n      <span className={'notifier__text'}>{result}</span>\n      <span className={'notifier__text'}>Status: {status}</span>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport MainLoader from './ui/main-loader/MainLoader'\nimport FeatureSmartapp from '../containers/feature-smartapp/FeatureSmartapp'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BotMethodResponse, EventType, ExpressNotification } from '../types'\nimport { sendReadyEvent, setExpressNotificationSuccess } from '../redux/actions/client'\nimport Notifier from './notifier/Notifier'\nimport { getMainLoader } from '../redux/selectors/ui'\n\nexport default function Main() {\n  const dispatch = useDispatch()\n  const [load, setLoad] = useState(true)\n  const isMainLoader = useSelector(getMainLoader)\n  const [notifier, setNotifier] = useState<BotMethodResponse['payload'] | null>(null)\n\n  useEffect(() => {\n    if (load) {\n      setLoad(false)\n      dispatch(sendReadyEvent())\n    }\n\n    bridge?.onReceive(({ type, payload }) => {\n      if (typeof payload !== 'object') return\n\n      switch (type) {\n        case EventType.SMARTAPP_RPC: {\n          setNotifier(payload as BotMethodResponse['payload'])\n          setTimeout(() => setNotifier(null), 3000)\n          break\n        }\n        case EventType.NOTIFICATION: {\n          dispatch(setExpressNotificationSuccess(payload as ExpressNotification))\n          break\n        }\n        default: {\n          console.error({type, payload})\n        }\n      }\n    })\n  }, [dispatch, load])\n\n  return (\n    <>\n      {isMainLoader && <MainLoader />}\n      <FeatureSmartapp />\n      {notifier && <Notifier {...notifier} />}\n    </>\n  )\n}\n","import { handleActions } from 'redux-actions'\nimport { UIState } from '../../types'\nimport {\n  SET_MAIN_LOADER,\n  SET_REDIRECT_PATH,\n  SET_TOP_LOADER,\n  setMainLoaderActionType, setRedirectPathActionType,\n  setTopLoaderActionType,\n} from '../actions/ui'\n\nconst initialState: UIState = {\n  topLoader: false,\n  mainLoader: false,\n  redirectPath: '',\n}\n\nconst reducers = {\n  [SET_TOP_LOADER]: (\n    state: UIState, { payload: topLoader }: setTopLoaderActionType\n  ): UIState => ({\n    ...state, topLoader\n  }),\n  [SET_MAIN_LOADER]: (\n    state: UIState, { payload: mainLoader }: setMainLoaderActionType\n  ): UIState => ({\n    ...state, mainLoader\n  }),\n  [SET_REDIRECT_PATH]: (\n    state: UIState, { payload: redirectPath }: setRedirectPathActionType\n  ): UIState => ({\n    ...state, redirectPath\n  }),\n}\n\nexport const ui = handleActions<UIState, any>(reducers, initialState)\n","import { handleActions } from 'redux-actions'\nimport { BotState } from '../../types'\nimport {\n  LOAD_FEATURES_SUCCESS,\n  loadFeaturesSuccessActionType,\n  RESET_RESPONSE,\n  SEND_FEATURE_BOT_EVENT_SUCCESS,\n  SET_STATIC_FILE,\n  setStaticFileActionType,\n} from '../actions/bot'\n\nconst initialState: BotState = {\n  features: null,\n  response: null,\n  notifications: null,\n  staticFile: null,\n}\n\nconst reducers = {\n  [LOAD_FEATURES_SUCCESS]: (\n    state: BotState, { payload: features }: loadFeaturesSuccessActionType,\n  ): BotState => ({\n    ...state,\n    features,\n  }),\n  [SEND_FEATURE_BOT_EVENT_SUCCESS]: (state: BotState, { payload: response }: any): BotState => ({\n    ...state,\n    response,\n  }),\n  [RESET_RESPONSE]: (state: BotState): BotState => ({\n    ...state,\n    response: null,\n  }),\n  [SET_STATIC_FILE]: (\n    state: BotState, { payload: staticFile }: setStaticFileActionType\n  ): BotState => ({\n    ...state,\n    staticFile,\n  }),\n}\n\nexport const bot = handleActions(reducers, initialState)\n","import { handleActions } from 'redux-actions'\nimport { ClientState } from '../../types'\n\nimport {\n  REMOVE_FILE_SUCCESS,\n  removeFileSuccessActionType,\n  RESET_ATTACHMENTS,\n  RESET_EXPRESS_NOTIFICATION_SUCCESS,\n  RESET_EXPRESS_RESPONSE,\n  SEND_EXPRESS_EVENT_SUCCESS,\n  sendExpressEventSuccessActionType,\n  SET_EXPRESS_NOTIFICATION_SUCCESS,\n  SET_GEOLOCATION,\n  SET_META,\n  setExpressNotificationSuccessActionType,\n  setGeolocationActionType,\n  setMetaActionType,\n  UPLOAD_FILE_SUCCESS,\n  UPLOAD_FILES_SUCCESS,\n  uploadFilesSuccessActionType,\n  uploadFileSuccessActionType,\n} from '../actions/client'\n\nconst initialState: ClientState = {\n  attachments: null,\n  response: null,\n  meta: null,\n  notifications: [],\n  geolocation: null,\n}\n\nconst reducers = {\n  [UPLOAD_FILE_SUCCESS]: (state: ClientState, { payload: file }: uploadFileSuccessActionType): ClientState => ({\n    ...state,\n    attachments: [file],\n  }),\n  [UPLOAD_FILES_SUCCESS]: (state: ClientState, { payload: files }: uploadFilesSuccessActionType): ClientState => ({\n    ...state,\n    attachments: [...files],\n  }),\n  [REMOVE_FILE_SUCCESS]: (state: ClientState, { payload: id }: removeFileSuccessActionType): ClientState => ({\n    ...state,\n    attachments: state.attachments.filter(attachment => attachment.fileId !== id),\n  }),\n  [RESET_ATTACHMENTS]: (state: ClientState): ClientState => ({\n    ...state,\n    attachments: null,\n  }),\n  [SET_EXPRESS_NOTIFICATION_SUCCESS]: (\n    state: ClientState,\n    { payload }: setExpressNotificationSuccessActionType\n  ): ClientState => ({\n    ...state,\n    notifications: [payload, ...state.notifications],\n  }),\n  [RESET_EXPRESS_NOTIFICATION_SUCCESS]: (state: ClientState): ClientState => ({\n    ...state,\n    notifications: [],\n  }),\n  [SEND_EXPRESS_EVENT_SUCCESS]: (state: ClientState, response: sendExpressEventSuccessActionType): ClientState => ({\n    ...state,\n    response,\n  }),\n  [RESET_EXPRESS_RESPONSE]: (state: ClientState): ClientState => ({\n    ...state,\n    response: null,\n  }),\n  [SET_META]: (state: ClientState, { payload }: setMetaActionType): ClientState => ({\n    ...state,\n    meta: payload,\n  }),\n  [SET_GEOLOCATION]: (state: ClientState, { payload }: setGeolocationActionType): ClientState => ({\n    ...state,\n    geolocation: payload,\n  }),\n}\n\nexport const client = handleActions<ClientState, any>(reducers, initialState)\n","import { connectRouter } from 'connected-react-router'\nimport { combineReducers } from 'redux'\nimport { history } from '../router'\nimport { ui } from './ui'\nimport { AppState } from '../../types'\nimport { bot } from './bot'\nimport { client } from './client'\n\nexport const rootReducer = combineReducers<AppState>({\n  ui,\n  bot,\n  client,\n  router: connectRouter(history),\n})\n","import { put } from 'redux-saga/effects'\nimport { setMainLoader } from '../actions/ui'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport { BotFeaturesResponse } from '../../types'\nimport { MENU_EVENT } from '../../constants'\nimport { loadFeaturesSuccess } from '../actions/bot'\n\nexport function* loadFeaturesSaga() {\n  try {\n    yield put(setMainLoader(true))\n\n    const response: BotFeaturesResponse = yield bridge.sendBotEvent(MENU_EVENT)\n\n    if (response) yield put(loadFeaturesSuccess(response.payload.result))\n  } catch (e: any) {\n    console.error('loadFeaturesSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n","import { put } from 'redux-saga/effects'\nimport { setMainLoader } from '../actions/ui'\nimport { BotFeatureMethod, BotMethodResponse } from '../../types'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport { sendFeatureBotEventSuccess, setStaticFile } from '../actions/bot'\n\nexport function* sendFeatureBotEventSaga(action) {\n  try {\n    yield put(setMainLoader(true))\n\n    const response: BotMethodResponse = yield bridge?.sendBotEvent(action.payload)\n\n    yield put(sendFeatureBotEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendFeatureBotEventSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n\nexport function* echoStaticFileSaga(action) {\n  try {\n    yield put(setMainLoader(true))\n    const staticFile = yield bridge?.sendBotEvent({\n      method: BotFeatureMethod.ECHO_STATIC_FILE,\n      params: {},\n      files: [action.payload],\n    })\n    console.error(staticFile)\n\n    yield put(setStaticFile(staticFile))\n\n  } catch (e: any) {\n    console.error('echoStaticFileSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n","import { Bridge as bridge, ready, requestLocation, sendMessage } from '@unlimited/smartapp-sdk'\nimport { ClientEventMethod, ExpressMethodResponse, File } from '../../types'\nimport { put } from 'redux-saga/effects'\nimport {\n  sendExpressEventActionType,\n  sendExpressEventSuccess,\n  sendMessageExpressEventActionType,\n  setGeolocation,\n  setMeta,\n  uploadFilesActionType,\n  uploadFilesSuccess,\n  uploadFileSuccess,\n} from '../actions/client'\nimport { setRedirectPath, setTopLoader } from '../actions/ui'\nimport { OPEN_SMART_APP_META_FEATURE } from '../../constants'\n\nexport function* uploadFileSaga() {\n  try {\n    const response = yield bridge?.sendClientEvent({\n      method: ClientEventMethod.UPLOAD_FILE,\n      params: { type: '' },\n    })\n\n    if (!response.payload?.record) return\n\n    const file: File = {\n      ...response.payload.record,\n    }\n\n    yield put(uploadFileSuccess(file))\n  } catch (e) {\n    console.error(`uploadFileSaga error: ${e}`)\n  }\n}\n\nexport function* uploadFilesSaga({ payload: { type } }: uploadFilesActionType) {\n  try {\n    const response = yield bridge?.sendClientEvent({\n      method: ClientEventMethod.UPLOAD_FILES,\n      params: { type },\n    })\n\n    if (!response.payload.records.length) return\n\n    const files: File[] = response.payload.records\n\n    yield put(uploadFilesSuccess(files))\n  } catch (e) {\n    console.error(`uploadFilesSaga error: ${e}`)\n  }\n}\n\nexport function* requestGeolocationSaga() {\n  try {\n    yield put(setTopLoader(true))\n    const response = yield requestLocation()\n\n    const result = response?.payload?.data\n    if (result) {\n      yield put(setGeolocation(result))\n    }\n  } catch (e) {\n    console.error(`uploadFileSaga error: ${e}`)\n  } finally {\n    yield put(setTopLoader(false))\n  }\n}\n\nexport function* sendExpressEventSaga(action: sendExpressEventActionType) {\n  try {\n    yield put(setTopLoader(true))\n\n    const response: ExpressMethodResponse = yield bridge?.sendClientEvent(action.payload)\n\n    yield put(sendExpressEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendExpressEventSaga error', e)\n  } finally {\n    yield put(setTopLoader(false))\n  }\n}\n\nexport function* sendMessageExpressEventSaga(action: sendMessageExpressEventActionType) {\n  try {\n    yield put(setTopLoader(true))\n\n    const response: ExpressMethodResponse = yield sendMessage(action.payload)\n\n    yield put(sendExpressEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendMessageExpressEventSaga error', e)\n  } finally {\n    yield put(setTopLoader(false))\n  }\n}\n\nexport function* sendExpressReadyEventSaga() {\n  try {\n    const response = yield ready(300)\n    const meta = response?.payload?.[OPEN_SMART_APP_META_FEATURE.field]\n\n    if (meta) {\n      bridge?.log?.({ response })\n      yield put(setRedirectPath(`/${OPEN_SMART_APP_META_FEATURE.method}`))\n      yield put(setMeta(response))\n    } else {\n      setRedirectPath('/')\n    }\n  } catch (e) {\n    console.error('sendExpressReadyEventSaga', e)\n  }\n}\n","import { all, takeEvery } from 'redux-saga/effects'\nimport { loadFeaturesSaga } from './ui'\nimport { echoStaticFileSaga, sendFeatureBotEventSaga } from './bot'\nimport {\n  requestGeolocationSaga,\n  sendExpressEventSaga,\n  sendExpressReadyEventSaga,\n  sendMessageExpressEventSaga,\n  uploadFileSaga,\n  uploadFilesSaga,\n} from './client'\nimport {\n  ECHO_STATIC_FILE,\n  REQUEST_GEOLOCATION,\n  SEND_EXPRESS_EVENT,\n  SEND_EXPRESS_READY_EVENT,\n  SEND_MESSAGE_EXPRESS_EVENT,\n  UPLOAD_FILE,\n  UPLOAD_FILES,\n} from '../actions/client'\nimport { LOAD_FEATURES, SEND_FEATURE_BOT_EVENT } from '../actions/bot'\n\nfunction* rootSaga() {\n  yield all([\n    takeEvery(LOAD_FEATURES, loadFeaturesSaga),\n    takeEvery(SEND_FEATURE_BOT_EVENT, sendFeatureBotEventSaga),\n    takeEvery(ECHO_STATIC_FILE, echoStaticFileSaga),\n    takeEvery(SEND_EXPRESS_EVENT, sendExpressEventSaga),\n    takeEvery(SEND_MESSAGE_EXPRESS_EVENT, sendMessageExpressEventSaga),\n    takeEvery(SEND_EXPRESS_READY_EVENT, sendExpressReadyEventSaga),\n    takeEvery(UPLOAD_FILE, uploadFileSaga),\n    takeEvery(UPLOAD_FILES, uploadFilesSaga),\n    takeEvery(REQUEST_GEOLOCATION, requestGeolocationSaga),\n  ])\n}\n\nexport default rootSaga\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport Main from './components/Main'\nimport { configureStore } from './redux/configureStore'\nimport { history } from './redux/router'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      {/* @ts-ignore */}\n      <ConnectedRouter history={history}>\n        <Main />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","import { applyMiddleware, createStore, Store } from 'redux'\nimport { routerMiddleware as createRouterMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { rootReducer } from './reducers'\nimport rootSaga from './sagas'\nimport { history } from './router'\nimport { AppState } from '../types'\n\ntype ApplicationStore = Store<AppState>\n\nexport function configureStore(): ApplicationStore {\n  const sagaMiddleware = createSagaMiddleware()\n  const routerMiddleware = createRouterMiddleware(history)\n\n  const store: ApplicationStore = createStore(\n    rootReducer,\n    undefined,\n    composeWithDevTools(applyMiddleware(sagaMiddleware, routerMiddleware))\n  )\n\n  sagaMiddleware\n    .run(rootSaga)\n    .toPromise()\n    .catch((e: Error) => console.error('Saga error', e))\n\n  return store\n}\n"],"sourceRoot":""}