{"version":3,"sources":["components/main-loader/MainLoader.tsx","redux/selectors/bot.ts","types/index.ts","constants.ts","helpers/index.ts","redux/actions/bot.ts","assets/plus.svg","assets/clear-input.svg","assets/file.svg","assets/copy.svg","components/json-editor/JsonViewer.tsx","redux/actions/client.ts","redux/selectors/client.ts","assets/arrow-left.svg","components/feature-page-header/FeaturePageHeader.tsx","components/feature-page/FeaturePage.tsx","redux/selectors/ui.ts","components/top-loader/TopLoader.tsx","assets/botx-icon.svg","components/express-notifications/ExpressNotifications.tsx","redux/actions/ui.ts","components/meta-page/MetaPage.tsx","redux/router.ts","components/scan-qr/ScanQR.tsx","components/scan-qr-page/ScanQRPage.tsx","components/open-file/OpenFile.tsx","components/open-web-page/OpenWebPage.tsx","components/request-geolocation/RequestGeolocation.tsx","components/feature-smartapp/FeatureSmartapp.tsx","components/notifier/Notifier.tsx","components/Main.tsx","redux/reducers/ui.ts","redux/reducers/bot.ts","redux/reducers/client.ts","redux/reducers/index.ts","redux/sagas/ui.ts","redux/sagas/bot.ts","redux/sagas/client.ts","redux/sagas/index.ts","index.tsx","redux/configureStore.ts"],"names":["MainLoader","_jsx","className","children","_jsxs","getFeaturesMenu","createSelector","state","bot","features","getFeatureBotResponse","response","EventType","BotFeatureMethod","ExpressFeatureMethod","ExpressFeatureName","ClientEventMethod","InputId","InputLabel","InputType","EXPRESS_NOTIFICATION_FEATURE","method","name","OPEN_SMART_APP_META_FEATURE","field","OPEN_FILE_FEATURE","REQUEST_GEOLOCATION","SCAN_QR_FEATURE","OPEN_WEB_PAGE_FEATURE","MENU_EVENT","params","text","INPUT_TYPE","INPUT_TEXT","INPUT_NUMBER","FILE_PICKER","ARRAY_UUID","UUID","EXPRESS_FEATURES","ADD_CONTACT","uiElements","id","PHONE","label","type","NAME","CREATE_PERSONAL_CHAT","HUID","GET_CONTACT","OPEN_SMARTAPP","SMARTAPP_ID","SEND_MESSAGE","MESSAGE","GROUP_CHAT_ID","USER_HUID","OPEN_CLIENT_SETTINGS","GET_CHATS","FILTER","SEARCH_CORPORATE_PHONEBOOK","OPEN_GROUP_CHAT","SEND_BOT_COMMAND","BODY","DATA","getFormInitialValues","reduce","acc","item","undefined","dateFormat","timestamp","toISODate","parseISO","format","locale","ru","LOAD_FEATURES","LOAD_FEATURES_SUCCESS","RESET_RESPONSE","SEND_FEATURE_BOT_EVENT","SEND_FEATURE_BOT_EVENT_SUCCESS","loadFeatures","createAction","loadFeaturesSuccess","resetFeatures","sendFeatureBotEvent","botEvent","sendFeatureBotEventSuccess","_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgPlus","_ref","svgRef","title","titleId","props","xmlns","viewBox","fill","ref","fillRule","d","ForwardRef","SvgClearInput","transform","_g","SvgFile","width","height","x","y","rx","fontSize","fontWeight","SvgCopy","JsonViewer","container","useRef","useEffect","editor","JSONEditor","current","mode","enableTransform","json","set","button","document","createElement","innerHTML","ReactDOMServer","renderToStaticMarkup","CopyIcon","addEventListener","obj","JSON","stringify","body","appendChild","select","execCommand","removeChild","copyToClipboardJson","setAttribute","menu","querySelector","search","insertBefore","destroy","UPLOAD_FILE","UPLOAD_FILE_SUCCESS","UPLOAD_FILES","UPLOAD_FILES_SUCCESS","REMOVE_FILE_SUCCESS","RESET_ATTACHMENTS","SEND_EXPRESS_EVENT","SEND_MESSAGE_EXPRESS_EVENT","SEND_EXPRESS_EVENT_SUCCESS","SET_EXPRESS_NOTIFICATION_SUCCESS","RESET_EXPRESS_NOTIFICATION_SUCCESS","RESET_EXPRESS_RESPONSE","SEND_EXPRESS_READY_EVENT","SET_META","SET_GEOLOCATION","uploadFile","uploadFileSuccess","file","uploadFiles","uploadFilesSuccess","files","removeFileSuccess","resetAttachments","sendExpressEvent","expressEvent","sendMessageExpressEvent","payload","sendExpressEventSuccess","setExpressNotificationSuccess","notification","resetExpressNotificationSuccess","setMeta","meta","setGeolocation","geolocation","requestGeolocation","resetExpressResponse","sendReadyEvent","getAttachments","client","attachments","getExpressResponse","getMeta","getGeolocation","getExpressNotifications","notifications","notificaions","SvgArrowLeft","FeaturePageHeader","Link","to","ArrowLeft","FeaturePage","_text","_text$replaceAll","_botResponse$payload","_botResponse$payload7","_botResponse$payload8","_botResponse$payload9","_botResponse$files","dispatch","useDispatch","botResponse","useSelector","expressResponse","inputs","setInputs","useState","inputError","setInputError","isJSONViewer","setIsJSONViewer","isAllowNewInputs","SEARCH_USERS","isFilesMethod","ECHO_FILE","ECHO_FILES","includes","isUsersMethod","isExpressMethod","values","isMobile","test","window","navigator","userAgent","filterFormValues","useMemo","formValues","filter","value","toggleIsJSONViewer","formik","useFormik","initialValues","onSubmit","async","userHuid","groupChatId","message","action","messageBody","messageMeta","bridge","disableRenameParams","enableRenameParams","openClientSettings","chats","getChats","openGroupChat","phonebook","searchCorporatePhonebook","sendBotCommand","data","command","result","event","sendExpressEventAction","handleFormSubmitForExpressMethod","huids","handleFormSubmitForBotMethod","getIsSubmitButtonDisabled","map","input","index","HUIDS","concat","_Fragment","FILE","FILES","onClick","handleUploadFilesClick","attachment","fileName","RemoveIcon","handleRemoveFile","fileId","classnames","handleFilesSubmit","disabled","handleSubmit","_ref2","inputType","isShowLabel","getIsInputError","isNotEmpty","uuid","phone","onChange","handleChange","multiple","min","setFieldValue","PlusIcon","handleClickPlus","last","next","ReactMarkdown","ECHO","replaceAll","FileIcon","checked","getTopLoader","ui","topLoader","getMainLoader","mainLoader","getRedirectPath","redirectPath","TopLoader","start","setStart","stop","setStop","finish","setFinish","stopTimeout","finishTimeout","setTimeout","clearTimeout","SvgBotxIcon","ExpressNotifications","expressNotifications","handleClear","SET_TOP_LOADER","SET_MAIN_LOADER","SET_REDIRECT_PATH","setTopLoader","setMainLoader","setRedirectPath","MetaPage","history","createBrowserHistory","ScanQR","onScanSuccess","onScanFailure","config","fps","qrbox","disableFlip","Html5QrcodeScanner","render","ScanQRPage","decodedText","setDecodedText","decodedResult","setDecodedResult","error","setError","handleOnScanSuccess","console","log","err","warn","OpenFile","inputValue","setInputValue","e","handleClick","parse","sendClientEvent","OpenWebPage","link","setLink","defaultValue","href","RequestGeolocation","useLayoutEffect","latitude","longitude","FeatureSmartapp","platform","useQuery","push","BotxIcon","Switch","Route","path","alert","Notifier","status","Main","load","setLoad","isMainLoader","notifier","setNotifier","onReceive","SMARTAPP_RPC","NOTIFICATION","reducers","_ref3","handleActions","_ref4","_ref5","_ref6","rootReducer","combineReducers","router","connectRouter","loadFeaturesSaga","put","sendBotEvent","sendFeatureBotEventSaga","uploadFileSaga","_response$payload","record","uploadFilesSaga","records","requestGeolocationSaga","_response$payload2","sendExpressEventSaga","sendMessageExpressEventSaga","sendMessage","sendExpressReadyEventSaga","_response$payload3","ready","_bridge$log","rootSaga","all","takeEvery","ReactDOM","React","StrictMode","Provider","store","sagaMiddleware","createSagaMiddleware","routerMiddleware","createRouterMiddleware","createStore","composeWithDevTools","applyMiddleware","run","toPromise","catch","configureStore","ConnectedRouter","getElementById"],"mappings":"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","file":"static/js/main.57ccdd76.chunk.js","sourcesContent":["import React from 'react'\nimport './MainLoader.scss'\n\nexport default function MainLoader() {\n  return (\n    <div className='main-loader'>\n      <div className='main-loader__spinner'>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  )\n}\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getFeaturesMenu = createSelector(\n  [(state: AppState) => state.bot.features],\n  features => features,\n)\n\nexport const getFeatureBotResponse = createSelector(\n  [(state: AppState) => state.bot.response],\n  response => response,\n)\n","import { RouterState } from 'connected-react-router'\n\nexport enum EventType {\n  SMARTAPP_RPC = 'smartapp_rpc',\n  NOTIFICATION = 'notification',\n  OPEN_SMARTAPP_META = 'open_smart_app_meta',\n}\n\nexport enum BotFeatureMethod {\n  ECHO = 'echo',\n  UPDATE_APP_COUNTER = 'update_app_counter',\n  SEND_NOTIFICATION = 'send_notification',\n  ECHO_FILE = 'echo_file',\n  ECHO_FILES = 'echo_files',\n  SEARCH_USERS = 'search_users',\n}\n\nexport enum ExpressFeatureMethod {\n  ADD_CONTACT = 'add_contact',\n  CREATE_PERSONAL_CHAT = 'create_personal_chat',\n  SEND_MESSAGE = 'send_message',\n  GET_CONTACT = 'get_contact',\n  OPEN_SMARTAPP = 'open_smart_app',\n  OPEN_CLIENT_SETTINGS = 'open_client_settings',\n  GET_CHATS = 'get_chats',\n  SEARCH_CORPORATE_PHONEBOOK = 'search_corporate_phonebook',\n  OPEN_GROUP_CHAT = 'open_group_chat',\n  SEND_BOT_COMMAND = 'send_bot_command',\n}\n\nexport enum ExpressFeatureName {\n  ADD_CONTACT = 'Add Contact',\n  CREATE_PERSONAL_CHAT = 'Create Personal Chat',\n  SEND_MESSAGE = 'Send Message to Group Chat or User',\n  GET_CONTACT = 'Get Contact',\n  OPEN_SMARTAPP = 'Open SmartApp',\n  OPEN_CLIENT_SETTINGS = 'Open Client Settings',\n  GET_CHATS = 'Get Chats',\n  SEARCH_CORPORATE_PHONEBOOK = 'Search Corporate Phonebook',\n  OPEN_GROUP_CHAT = 'Open Group Chat',\n  SEND_BOT_COMMAND = 'Send Bot Command',\n}\n\nexport enum ClientEventMethod {\n  READY = 'ready',\n  UPLOAD_FILE = 'upload_file',\n  UPLOAD_FILES = 'upload_files',\n}\n\nexport interface BotEvent {\n  method: BotFeatureMethod | 'menu'\n  params: any\n  files?: File[]\n  timeout?: number\n}\n\nexport interface ExpressEvent {\n  method: ExpressFeatureMethod\n  params: any\n}\n\nexport interface SendMessageActionPayload {\n  userHuid: string | null\n  groupChatId: string | null\n  messageBody: string\n  messageMeta?: {}\n}\n\nexport enum InputId {\n  TEXT = 'text',\n  COUNT = 'count',\n  DELAY = 'delay',\n  FILE = 'file',\n  FILES = 'files',\n  HUIDS = 'huids',\n  PHONE = 'phone',\n  NAME = 'name',\n  HUID = 'huid',\n  SMARTAPP_ID = 'appId',\n  MESSAGE = 'message',\n  GROUP_CHAT_ID = 'groupChatId',\n  USER_HUID = 'userHuid',\n  FILTER = 'filter',\n  BODY = 'body',\n  DATA = 'data',\n}\n\nexport enum InputLabel {\n  TEXT = 'Text',\n  COUNT = 'Count',\n  DELAY = 'Delay',\n  FILE = 'File',\n  FILES = 'Files',\n  HUIDS = 'Huids',\n  PHONE = 'Phone',\n  NAME = 'Name',\n  HUID = 'Huid',\n  SMARTAPP_ID = 'Smartapp ID',\n  MESSAGE = 'Message',\n  GROUP_CHAT_ID = 'Group chat id',\n  USER_HUID = 'User huid',\n  FILTER = 'Filter',\n  BODY = 'Body',\n  DATA = 'Data',\n}\n\nexport enum InputType {\n  INPUT_TEXT = 'INPUT_TEXT',\n  INPUT_NUMBER = 'INPUT_NUMBER',\n  FILE_PICKER = 'FILE_PICKER',\n  ARRAY_UUID = 'ARRAY_UUID',\n  UUID = 'UUID',\n}\n\nexport interface Input {\n  id: InputId | string\n  label: InputLabel\n  type: InputType\n}\n\nexport interface BotFeature {\n  method: BotFeatureMethod\n  name: string\n  uiElements: Input[]\n}\n\nexport type ExpressFeature =\n  | BotFeature\n  | {\n      method: ExpressFeatureMethod\n      name: ExpressFeatureName\n      uiElements: Input[]\n    }\n\nexport type BotFeatures = BotFeature[] | null\n\nexport interface BotMethodResponse {\n  type: EventType.SMARTAPP_RPC | string\n  files: File[]\n  payload: {\n    result: string\n    status: 'ok' | 'error'\n  }\n}\n\nexport type BotFeaturesResponse = BotMethodResponse & {\n  payload: {\n    result: BotFeature[]\n  }\n}\n\nexport interface ExpressMethodResponse {\n  ref?: string\n  payload: any\n}\n\nexport interface ExpressNotification {\n  ref: null\n  type: 'notification'\n  data: object\n}\n\nexport interface File {\n  type?: string\n  file?: string\n  fileMimeType?: string\n  fileName?: string\n  filePreview?: string\n  filePreviewHeight?: number\n  filePreviewWidth?: number\n  fileSize: number\n  fileHash?: string\n  fileEncryptionAlgo?: string\n  chunkSize?: number\n  fileId?: any\n  key?: object\n}\n\nexport interface Geolocation {\n  latitude: string | null\n  longitude: string | null\n  timestamp: string | null\n}\n\nexport interface UIState {\n  topLoader: boolean\n  mainLoader: boolean\n  redirectPath: string\n}\n\nexport interface BotState {\n  features: BotFeatures\n  response: BotMethodResponse | null\n  notifications: BotMethodResponse[] | null\n}\n\nexport interface ClientState {\n  attachments: File[] | null\n  response: ExpressMethodResponse | null\n  meta: ExpressMethodResponse | null\n  notifications: ExpressNotification[] | null\n  geolocation: Geolocation | null\n}\n\nexport interface AppState {\n  ui: UIState\n  bot: BotState\n  client: ClientState\n  router: RouterState\n}\n","import { ExpressFeature, ExpressFeatureMethod, ExpressFeatureName, InputId, InputLabel, InputType } from './types'\n\nexport const EXPRESS_NOTIFICATION_FEATURE = {\n  method: 'notification',\n  name: 'Express Notification',\n}\n\nexport const OPEN_SMART_APP_META_FEATURE = {\n  name: 'Open Smart App Meta',\n  method: 'open_smart_app',\n  field: 'openSmartAppMeta',\n}\n\nexport const OPEN_FILE_FEATURE = {\n  name: 'Open File',\n  method: 'open_file',\n}\n\nexport const REQUEST_GEOLOCATION = {\n  name: 'Request Geolocation',\n  method: 'request_geolocation',\n}\nexport const SCAN_QR_FEATURE = {\n  name: 'Scan QR',\n  method: 'scan_qr',\n}\n\nexport const OPEN_WEB_PAGE_FEATURE = {\n  name: 'Open Web Page',\n  method: 'open-web-page',\n}\n\nexport const MENU_EVENT: any = {\n  method: 'menu',\n  params: {\n    text: 'menu',\n  },\n}\n\nexport const INPUT_TYPE: Record<InputType, string> = {\n  INPUT_TEXT: 'text',\n  INPUT_NUMBER: 'number',\n  FILE_PICKER: 'file',\n  ARRAY_UUID: 'text',\n  UUID: 'text',\n}\n\nexport const EXPRESS_FEATURES: ExpressFeature[] = [\n  {\n    method: ExpressFeatureMethod.ADD_CONTACT,\n    name: ExpressFeatureName.ADD_CONTACT,\n    uiElements: [\n      {\n        id: InputId.PHONE,\n        label: InputLabel.PHONE,\n        type: InputType.INPUT_TEXT,\n      },\n      {\n        id: InputId.NAME,\n        label: InputLabel.NAME,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.CREATE_PERSONAL_CHAT,\n    name: ExpressFeatureName.CREATE_PERSONAL_CHAT,\n    uiElements: [\n      {\n        id: InputId.HUID,\n        label: InputLabel.HUID,\n        type: InputType.UUID,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.GET_CONTACT,\n    name: ExpressFeatureName.GET_CONTACT,\n    uiElements: [\n      {\n        id: InputId.PHONE,\n        label: InputLabel.PHONE,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_SMARTAPP,\n    name: ExpressFeatureName.OPEN_SMARTAPP,\n    uiElements: [\n      {\n        id: InputId.SMARTAPP_ID,\n        label: InputLabel.SMARTAPP_ID,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.SEND_MESSAGE,\n    name: ExpressFeatureName.SEND_MESSAGE,\n    uiElements: [\n      {\n        id: InputId.MESSAGE,\n        label: InputLabel.MESSAGE,\n        type: InputType.INPUT_TEXT,\n      },\n      {\n        id: InputId.GROUP_CHAT_ID,\n        label: InputLabel.GROUP_CHAT_ID,\n        type: InputType.UUID,\n      },\n      {\n        id: InputId.USER_HUID,\n        label: InputLabel.USER_HUID,\n        type: InputType.UUID,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_CLIENT_SETTINGS,\n    name: ExpressFeatureName.OPEN_CLIENT_SETTINGS,\n    uiElements: [],\n  },\n  {\n    method: ExpressFeatureMethod.GET_CHATS,\n    name: ExpressFeatureName.GET_CHATS,\n    uiElements: [\n      {\n        id: InputId.FILTER,\n        label: InputLabel.FILTER,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.SEARCH_CORPORATE_PHONEBOOK,\n    name: ExpressFeatureName.SEARCH_CORPORATE_PHONEBOOK,\n    uiElements: [\n      {\n        id: InputId.FILTER,\n        label: InputLabel.FILTER,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_GROUP_CHAT,\n    name: ExpressFeatureName.OPEN_GROUP_CHAT,\n    uiElements: [\n      {\n        id: InputId.GROUP_CHAT_ID,\n        label: InputLabel.GROUP_CHAT_ID,\n        type: InputType.UUID,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.SEND_BOT_COMMAND,\n    name: ExpressFeatureName.SEND_BOT_COMMAND,\n    uiElements: [\n      {\n        id: InputId.USER_HUID,\n        label: InputLabel.USER_HUID,\n        type: InputType.UUID,\n      },\n      {\n        id: InputId.BODY,\n        label: InputLabel.BODY,\n        type: InputType.INPUT_TEXT,\n      },\n      {\n        id: InputId.DATA,\n        label: InputLabel.DATA,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n]\n","import { Input } from '../types'\nimport parseISO from 'date-fns/parseISO'\nimport ru from 'date-fns/locale/ru'\nimport format from 'date-fns/format'\n\nexport interface FormValues {\n  [key: string]: string | undefined\n}\n\nexport const getFormInitialValues: (uiElements: Input[]) => FormValues = uiElements => {\n  return uiElements?.reduce((acc: FormValues, item) => {\n    acc[item.id] = undefined\n    return acc\n  }, {})\n}\n\nexport const dateFormat = (timestamp: string) => {\n  if (timestamp) {\n    let toISODate = parseISO(timestamp)\n    return format(toISODate, 'EEEE d LLLL y - H:mm', {\n      locale: ru,\n    })\n  }\n}\n","import { createAction } from 'redux-actions'\nimport { BotEvent, BotFeatures, BotMethodResponse, ExpressMethodResponse } from '../../types'\n\nexport const LOAD_FEATURES = 'LOAD_FEATURES'\nexport const LOAD_FEATURES_SUCCESS = 'LOAD_FEATURES_SUCCESS'\nexport const RESET_RESPONSE = 'RESET_RESPONSE'\nexport const SEND_FEATURE_BOT_EVENT = 'SEND_FEATURE_BOT_EVENT'\nexport const SEND_FEATURE_BOT_EVENT_SUCCESS = 'SEND_FEATURE_BOT_EVENT_SUCCESS'\n\nexport const loadFeatures = createAction(LOAD_FEATURES, () => {\n})\nexport const loadFeaturesSuccess = createAction(LOAD_FEATURES_SUCCESS, (features: BotFeatures) => features)\nexport const resetFeatures = createAction(RESET_RESPONSE, () => {\n})\nexport const sendFeatureBotEvent = createAction(SEND_FEATURE_BOT_EVENT, (botEvent: BotEvent) => botEvent)\nexport const sendFeatureBotEventSuccess = createAction(\n  SEND_FEATURE_BOT_EVENT_SUCCESS,\n  (response: BotMethodResponse | ExpressMethodResponse | null) => response,\n)\n\nexport type loadFeaturesSuccessActionType = ReturnType<typeof loadFeaturesSuccess>\nexport type sendFeatureBotEventSuccessActionType = ReturnType<typeof sendFeatureBotEventSuccess>\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPlus(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M13 11V4h-2v7H4v2h7v7h2v-7h7v-2h-7z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.97a40cd5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgClearInput(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M13 11V3h-2v8H3v2h8v8h2v-8h8v-2h-8z\",\n    transform: \"rotate(45 12 12)\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgClearInput);\nexport default __webpack_public_path__ + \"static/media/clear-input.6a69fb5e.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgFile(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 22 26\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    transform: \"translate(-1)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#595959\",\n    d: \"M5 0C3.73 0 2.44 1.225 2.5 2.407V22.63c-.06 1.784 1.23 3.007 2.5 2.89h15c1.71.117 3-1.106 3-2.89V6.26L16 0H5zm0 24.556c-.298-.117-1.298-.59-1.5-1.445V2.41C3.702 2.148 4.702 1.2 5 .963h10.5v3.852c.01 1.467.903 2.315 2 1.926H22v15.89c-.262.864-.76 1.81-2 1.928H5z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18.5,\n    height: 9.148,\n    x: 1,\n    y: 12.519,\n    fill: \"#5C5C5C\",\n    rx: 2\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    fill: \"#FFF\",\n    fontSize: 5.5,\n    fontWeight: 600\n  }, /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 4.302,\n    y: 19\n  }, \"\\n        FILE\\n      \")))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFile);\nexport default __webpack_public_path__ + \"static/media/file.1a445bcf.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCopy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M10.667.667h-8c-.734 0-1.334.6-1.334 1.333v9.333h1.334V2h8V.667zm2 2.666H5.333C4.6 3.333 4 3.933 4 4.667V14c0 .733.6 1.333 1.333 1.333h7.334c.733 0 1.333-.6 1.333-1.333V4.667c0-.734-.6-1.334-1.333-1.334zm0 10.667H5.333V4.667h7.334V14z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.55b37fcd.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useRef } from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport { ReactComponent as CopyIcon } from '../../assets/copy.svg'\nimport JSONEditor from 'jsoneditor'\nimport '../../../node_modules/jsoneditor/dist/jsoneditor.min.css'\nimport './JsonViewer.scss'\n\nexport default function JsonViewer(props) {\n  const container = useRef(null)\n\n  const copyToClipboardJson = obj => {\n    const container = document.createElement('textarea')\n\n    container.innerHTML = JSON.stringify(obj, null, '  ')\n    document.body.appendChild(container)\n\n    container.select()\n    document.execCommand('copy')\n    document.body.removeChild(container)\n  }\n\n  useEffect(() => {\n    const editor = new JSONEditor(container.current, { mode: 'view', enableTransform: true })\n\n    if (props.json) editor.set(props.json)\n\n    const button = document.createElement('button')\n    button.className = 'copy-to-clipboard'\n    button.innerHTML = ReactDOMServer.renderToStaticMarkup(<CopyIcon height='22' width='22' />)\n    button.addEventListener('click', () => copyToClipboardJson(props.json))\n    button.setAttribute('title', 'Copy To Clipboard')\n\n    const menu = document.querySelector('.jsoneditor-menu')\n    const search = document.querySelector('.jsoneditor-menu .jsoneditor-search')\n\n    menu.insertBefore(button, search)\n\n    return () => editor.destroy()\n  }, [props.json])\n\n  return <div className='json-viewer' ref={container} />\n}\n","import { createAction } from 'redux-actions'\nimport {\n  ExpressEvent,\n  ExpressMethodResponse,\n  ExpressNotification,\n  File,\n  Geolocation,\n  SendMessageActionPayload,\n} from '../../types'\n\nexport const UPLOAD_FILE = 'UPLOAD_FILE'\nexport const UPLOAD_FILE_SUCCESS = 'UPLOAD_FILE_SUCCESS'\nexport const UPLOAD_FILES = 'UPLOAD_FILES'\nexport const UPLOAD_FILES_SUCCESS = 'UPLOAD_FILES_SUCCESS'\nexport const REMOVE_FILE = 'REMOVE_FILE'\nexport const REMOVE_FILE_SUCCESS = 'REMOVE_FILE_SUCCESS'\nexport const RESET_ATTACHMENTS = 'RESET_ATTACHMENTS'\nexport const SEND_EXPRESS_EVENT = 'SEND_EXPRESS_EVENT'\nexport const SEND_MESSAGE_EXPRESS_EVENT = 'SEND_MESSAGE_EXPRESS_EVENT'\nexport const SEND_EXPRESS_EVENT_SUCCESS = 'SEND_EXPRESS_EVENT_SUCCESS'\nexport const SET_EXPRESS_NOTIFICATION_SUCCESS = 'SET_NOTIFICATION_SUCCESS'\nexport const RESET_EXPRESS_NOTIFICATION_SUCCESS = 'RESET_EXPRESS_NOTIFICATION_SUCCESS'\nexport const RESET_EXPRESS_RESPONSE = 'RESET_EXPRESS_RESPONSE'\nexport const SEND_EXPRESS_READY_EVENT = 'SEND_EXPRESS_READY_EVENT'\nexport const SET_META = 'SET_META'\n\nexport const REQUEST_GEOLOCATION = 'REQUEST_GEOLOCATION'\nexport const SET_GEOLOCATION = 'SET_GEOLOCATION'\n\nexport const uploadFile = createAction(UPLOAD_FILE, (type: string = '') => ({ type }))\nexport const uploadFileSuccess = createAction(UPLOAD_FILE_SUCCESS, (file: File) => file)\nexport const uploadFiles = createAction(UPLOAD_FILES, (type: string = '') => ({ type }))\nexport const uploadFilesSuccess = createAction(UPLOAD_FILES_SUCCESS, (files: File[]) => files)\nexport const removeFile = createAction(REMOVE_FILE, (id: number) => id)\nexport const removeFileSuccess = createAction(REMOVE_FILE_SUCCESS, (id: number) => id)\nexport const resetAttachments = createAction(RESET_ATTACHMENTS, () => {})\nexport const sendExpressEvent = createAction(SEND_EXPRESS_EVENT, (expressEvent: ExpressEvent) => expressEvent)\nexport const sendMessageExpressEvent = createAction(\n  SEND_MESSAGE_EXPRESS_EVENT,\n  (payload: SendMessageActionPayload) => payload\n)\nexport const sendExpressEventSuccess = createAction(\n  SEND_EXPRESS_EVENT_SUCCESS,\n  (response: ExpressMethodResponse | null) => response\n)\nexport const setExpressNotificationSuccess = createAction(\n  SET_EXPRESS_NOTIFICATION_SUCCESS,\n  (notification: ExpressNotification | null) => notification\n)\nexport const resetExpressNotificationSuccess = createAction(RESET_EXPRESS_NOTIFICATION_SUCCESS, () => {})\nexport const setMeta = createAction(SET_META, (meta: ExpressMethodResponse | null) => meta)\nexport const setGeolocation = createAction(SET_GEOLOCATION, (geolocation: Geolocation) => geolocation)\nexport const requestGeolocation = createAction(REQUEST_GEOLOCATION)\nexport const resetExpressResponse = createAction(RESET_EXPRESS_RESPONSE, () => {})\nexport const sendReadyEvent = createAction(SEND_EXPRESS_READY_EVENT, () => {})\n\nexport type uploadFileActionType = ReturnType<typeof uploadFile>\nexport type uploadFileSuccessActionType = ReturnType<typeof uploadFileSuccess>\nexport type uploadFilesActionType = ReturnType<typeof uploadFiles>\nexport type uploadFilesSuccessActionType = ReturnType<typeof uploadFilesSuccess>\nexport type removeFileActionType = ReturnType<typeof removeFile>\nexport type removeFileSuccessActionType = ReturnType<typeof removeFileSuccess>\nexport type sendExpressEventActionType = ReturnType<typeof sendExpressEvent>\nexport type sendMessageExpressEventActionType = ReturnType<typeof sendMessageExpressEvent>\nexport type sendExpressEventSuccessActionType = ReturnType<typeof sendExpressEventSuccess>\nexport type setExpressNotificationSuccessActionType = ReturnType<typeof setExpressNotificationSuccess>\nexport type setMetaActionType = ReturnType<typeof setMeta>\nexport type setGeolocationActionType = ReturnType<typeof setGeolocation>\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getAttachments = createSelector([(state: AppState) => state.client.attachments], features => features)\n\nexport const getExpressResponse = createSelector([(state: AppState) => state.client.response], response => response)\n\nexport const getMeta = createSelector([(state: AppState) => state.client.meta], meta => meta)\n\nexport const getGeolocation = createSelector(\n  [(state: AppState) => state.client.geolocation],\n  geolocation => geolocation\n)\n\nexport const getExpressNotifications = createSelector(\n  [(state: AppState) => state.client.notifications],\n  notificaions => notificaions\n)\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.828 11l5.586-5.586L12 4l-8 8 8 8 1.414-1.414L7.828 13H20v-2z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.fa74ab51.svg\";\nexport { ForwardRef as ReactComponent };","import { Link } from 'react-router-dom'\nimport { ReactComponent as ArrowLeft } from '../../../src/assets/arrow-left.svg'\nimport './FeaturePageHeader.scss'\n\nexport default function FeaturePageHeader({ name }) {\n  return (\n    <div className='feature-page__header'>\n      <Link className='btn--arrow-left' to='/'>\n        <ArrowLeft className='icon--arrow-left' height={24} width={24} />\n      </Link>\n      <div className='feature-page__info'>\n        <span className='feature-page__title'>{name} method</span>\n      </div>\n    </div>\n  )\n}\n","import {\n  BotFeature,\n  BotFeatureMethod,\n  ExpressFeature,\n  ExpressFeatureMethod,\n  Input,\n  InputId,\n  InputLabel,\n  InputType,\n} from '../../types'\nimport './FeaturePage.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { INPUT_TYPE } from '../../constants'\nimport { useFormik } from 'formik'\nimport { FormValues, getFormInitialValues } from '../../helpers'\nimport { getFeatureBotResponse } from '../../redux/selectors/bot'\nimport { resetFeatures, sendFeatureBotEvent, sendFeatureBotEventSuccess } from '../../redux/actions/bot'\nimport { useEffect, useMemo, useState } from 'react'\nimport { ReactComponent as PlusIcon } from '../../assets/plus.svg'\nimport { ReactComponent as RemoveIcon } from '../../assets/clear-input.svg'\nimport { ReactComponent as FileIcon } from '../../assets/file.svg'\nimport JsonViewer from '../json-editor/JsonViewer'\nimport classnames from 'classnames'\nimport {\n  removeFileSuccess,\n  resetAttachments,\n  resetExpressResponse,\n  sendExpressEvent,\n  sendExpressEventSuccess,\n  sendMessageExpressEvent,\n  uploadFile,\n  uploadFiles,\n} from '../../redux/actions/client'\nimport { getAttachments, getExpressResponse } from '../../redux/selectors/client'\nimport { ReactMarkdown } from 'react-markdown/lib/react-markdown'\nimport FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport {\n  Bridge as bridge,\n  getChats,\n  openGroupChat,\n  openClientSettings,\n  searchCorporatePhonebook,\n  sendBotCommand,\n} from '@unlimited/smartapp-sdk'\n\nexport default function FeaturePage({ name, method, uiElements = [] }: BotFeature | ExpressFeature) {\n  const dispatch = useDispatch()\n  const botResponse = useSelector(getFeatureBotResponse)\n  const expressResponse = useSelector(getExpressResponse)\n  const attachments = useSelector(getAttachments)\n\n  const [inputs, setInputs] = useState<Input[]>([])\n  const [inputError, setInputError] = useState('')\n  const [isJSONViewer, setIsJSONViewer] = useState(false)\n\n  const isAllowNewInputs = method === BotFeatureMethod.SEARCH_USERS\n  const isFilesMethod = [BotFeatureMethod.ECHO_FILE, BotFeatureMethod.ECHO_FILES].includes(method as BotFeatureMethod)\n  const isUsersMethod = BotFeatureMethod.SEARCH_USERS === method\n  const isExpressMethod = Object.values(ExpressFeatureMethod).includes(method as ExpressFeatureMethod)\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(window.navigator.userAgent)\n\n  const handleClickPlus = () => {\n    const last = inputs[inputs.length - 1]\n    const { id } = last\n    const next: Input = {\n      ...last,\n      id: id.includes(InputId.HUIDS) ? `${id}${inputs.length}` : id,\n    }\n\n    setInputs(inputs => [...inputs, next])\n  }\n\n  const handleFilesSubmit = () => {\n    if (attachments) {\n      const botFeatureMethod = method as BotFeatureMethod\n\n      dispatch(\n        sendFeatureBotEvent({\n          method: botFeatureMethod,\n          params: {},\n          files: attachments,\n        })\n      )\n    }\n  }\n\n  const handleFormSubmitForExpressMethod = async (formValues: FormValues) => {\n    switch (method) {\n      case ExpressFeatureMethod.SEND_MESSAGE:\n        if (!filterFormValues(formValues).length) return\n\n        const { userHuid, groupChatId, message } = formValues\n        const action = () =>\n          dispatch(\n            sendMessageExpressEvent({\n              userHuid,\n              groupChatId,\n              messageBody: message,\n              messageMeta: {},\n            })\n          )\n\n        if (!isMobile) {\n          bridge?.disableRenameParams()\n          action()\n          bridge?.enableRenameParams()\n        } else {\n          action()\n        }\n        break\n      case ExpressFeatureMethod.OPEN_CLIENT_SETTINGS:\n        openClientSettings()\n        break\n      case ExpressFeatureMethod.GET_CHATS:\n        const chats = await getChats({ filter: formValues?.filter || null })\n        dispatch(sendExpressEventSuccess(chats))\n        break\n      case ExpressFeatureMethod.OPEN_GROUP_CHAT: {\n        if (!filterFormValues(formValues).length) return\n\n        const action = () => openGroupChat({ groupChatId: formValues?.groupChatId })\n\n        if (!isMobile) {\n          bridge?.disableRenameParams()\n          action()\n          bridge?.enableRenameParams()\n        } else {\n          action()\n        }\n        break\n      }\n      case ExpressFeatureMethod.SEARCH_CORPORATE_PHONEBOOK: {\n        const phonebook = await searchCorporatePhonebook({ filter: formValues?.filter || null })\n        dispatch(sendExpressEventSuccess(phonebook))\n        break\n      }\n\n      case ExpressFeatureMethod.SEND_BOT_COMMAND: {\n        const action = async () =>\n          sendBotCommand({\n            userHuid: formValues?.userHuid,\n            data: formValues?.data\n              ? {\n                  command: formValues?.data,\n                }\n              : null,\n            body: formValues?.body,\n          })\n        let result\n\n        if (!isMobile) {\n          bridge?.disableRenameParams()\n          result = await action()\n          bridge?.enableRenameParams()\n        } else {\n          result = await action()\n        }\n        dispatch(sendExpressEventSuccess(result))\n        break\n      }\n      default:\n        if (!filterFormValues(formValues).length) return\n        const event = {\n          method: method as ExpressFeatureMethod,\n          params: formValues,\n        }\n        const sendExpressEventAction = () => dispatch(sendExpressEvent(event))\n        if (!isMobile) {\n          bridge?.disableRenameParams()\n          sendExpressEventAction()\n          bridge?.enableRenameParams()\n        } else {\n          sendExpressEventAction()\n        }\n    }\n  }\n\n  const filterFormValues = useMemo(\n    () => (formValues: FormValues) => Object.values(formValues).filter(value => value),\n    []\n  )\n\n  const handleFormSubmitForBotMethod = (formValues: FormValues) => {\n    const values = filterFormValues(formValues)\n    if (!values.length) return\n\n    const event = {\n      method: method as BotFeatureMethod,\n      params: isUsersMethod ? { huids: values } : formValues,\n    }\n\n    dispatch(sendFeatureBotEvent(event))\n  }\n\n  const handleFormSubmit = (formValues: FormValues) => {\n    if (isExpressMethod) {\n      handleFormSubmitForExpressMethod(formValues)\n    } else {\n      handleFormSubmitForBotMethod(formValues)\n    }\n  }\n\n  const handleUploadFilesClick = () => {\n    if (method === BotFeatureMethod.ECHO_FILE) {\n      dispatch(uploadFile())\n    } else if (method === BotFeatureMethod.ECHO_FILES) {\n      dispatch(uploadFiles())\n    }\n  }\n\n  const handleRemoveFile = (fileId: number) => {\n    dispatch(removeFileSuccess(fileId))\n    if (attachments?.length === 1) dispatch(sendFeatureBotEventSuccess(null))\n  }\n\n  const toggleIsJSONViewer = () => setIsJSONViewer(!isJSONViewer)\n\n  const formik = useFormik({\n    initialValues: getFormInitialValues(inputs),\n    onSubmit: handleFormSubmit,\n  })\n\n  const getIsSubmitButtonDisabled = () => {\n    if (method === ExpressFeatureMethod.GET_CHATS) return false\n    return isFilesMethod ? !attachments?.length : !Object.values(formik.values).filter(value => value).length\n  }\n  useEffect(() => {\n    const inputs: Input[] = uiElements.map((input, index) => ({\n      ...input,\n      id: input.id.includes(InputId.HUIDS) ? `${input.id}${index}` : input.id,\n    }))\n    setInputs(inputs)\n    return () => {\n      dispatch(resetFeatures())\n      dispatch(resetAttachments())\n      dispatch(resetExpressResponse())\n    }\n  }, [uiElements, dispatch])\n\n  return (\n    <>\n      <div className=\"feature-page\">\n        <FeaturePageHeader name={name} />\n        {isFilesMethod ? (\n          <div className=\"feature-page__form\">\n            <span className=\"feature-page__title\">\n              {method === BotFeatureMethod.ECHO_FILE ? InputLabel.FILE : InputLabel.FILES}\n            </span>\n            <button className=\"btn--attach\" onClick={handleUploadFilesClick}>\n              {method === BotFeatureMethod.ECHO_FILE ? 'Attach file' : 'Attach files'}\n            </button>\n            {!!attachments?.length && (\n              <div className=\"attachments\">\n                {attachments.map(attachment => (\n                  <span className=\"attachments__item\" key={attachment.fileId}>\n                    <span>{attachment.fileName}</span>\n                    <RemoveIcon\n                      width={20}\n                      height={20}\n                      className=\"btn--remove-attachment\"\n                      onClick={() => handleRemoveFile(attachment.fileId)}\n                    />\n                  </span>\n                ))}\n              </div>\n            )}\n            <div className=\"form-buttons\">\n              <button\n                className={classnames({\n                  'btn--submit': true,\n                  'btn--submit-disabled': getIsSubmitButtonDisabled(),\n                })}\n                onClick={handleFilesSubmit}\n                disabled={getIsSubmitButtonDisabled()}\n                type=\"button\"\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        ) : (\n          !!inputs?.length && (\n            <form className=\"feature-page__form\" onSubmit={formik.handleSubmit}>\n              {inputs.map(({ id, type, label }, index) => {\n                const inputType = INPUT_TYPE[type]\n\n                const getIsInputError = () => {\n                  const isUuid = (uuid: string) => /[0-9a-fA-F-]{36}/.test(uuid)\n                  const isPhone = (phone: string) =>\n                    /(^8|7|\\+7)((\\d{10})|(\\s\\(\\d{3}\\)\\s\\d{3}\\s\\d{2}\\s\\d{2}))/.test(phone)\n                  const isNotEmpty = formik.values[id]\n\n                  if (isUsersMethod || type === InputType.UUID) {\n                    return isNotEmpty && !isUuid(formik.values[id])\n                  } else if (id === InputId.PHONE) {\n                    return isNotEmpty && !isPhone(formik.values[id])\n                  }\n                }\n                const isShowLabel = isUsersMethod ? index === 0 : true\n\n                return (\n                  <div key={id}>\n                    {isShowLabel && <span className=\"feature-page__title\">{label}</span>}\n                    <input\n                      className={classnames({\n                        input: true,\n                        'input--error': getIsInputError(),\n                      })}\n                      onChange={formik.handleChange}\n                      value={formik.values[id] || ''}\n                      type={inputType}\n                      multiple={id === InputId.FILES}\n                      id={id}\n                      min={0}\n                    />\n                    {inputType === INPUT_TYPE.INPUT_TEXT && formik.values[id] && (\n                      <RemoveIcon\n                        className=\"btn--clear-input\"\n                        onClick={() => {\n                          formik.setFieldValue(id, '')\n                          inputError && setInputError('')\n                        }}\n                        height={20}\n                        width={20}\n                      />\n                    )}\n                  </div>\n                )\n              })}\n              <div className=\"form-buttons\">\n                <button\n                  className={classnames({\n                    'btn--submit': true,\n                    'btn--submit-disabled': getIsSubmitButtonDisabled(),\n                  })}\n                  disabled={getIsSubmitButtonDisabled()}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n                {isAllowNewInputs && (\n                  <PlusIcon\n                    title=\"Add new input\"\n                    className=\"btn--plus\"\n                    onClick={handleClickPlus}\n                    height={24}\n                    width={24}\n                  />\n                )}\n              </div>\n            </form>\n          )\n        )}\n      </div>\n      {botResponse && (\n        <>\n          <div className=\"response-markdown\">\n            <ReactMarkdown>\n              {method === BotFeatureMethod.ECHO\n                ? 'text: ' + (botResponse?.payload?.result as any).text?.replaceAll?.('\\n', '\\n\\r') ||\n                  botResponse?.payload?.result?.replaceAll?.('\\n', '\\n\\r') +\n                    '\\n\\r' +\n                    ((botResponse?.payload?.result as any).textLength &&\n                      'textLength: ' + (botResponse?.payload?.result as any).textLength)\n                : botResponse?.payload?.result?.replaceAll?.('\\n', '\\n\\r')}\n            </ReactMarkdown>\n          </div>\n          {method === BotFeatureMethod.ECHO_FILES && (\n            <div className=\"response-files\">\n              Files:\n              {botResponse?.files?.map(() => (\n                <FileIcon className=\"response-files__file\" height={20} width={20} />\n              ))}\n            </div>\n          )}\n\n          {botResponse && (\n            <div>\n              <div className=\"response-markdown-form\">\n                <input\n                  checked={isJSONViewer}\n                  className=\"form-toggler__input\"\n                  id=\"form-toggler\"\n                  type=\"checkbox\"\n                  onChange={toggleIsJSONViewer}\n                />\n                <span className=\"form-toggler\" onClick={toggleIsJSONViewer}>\n                  Show JSON Viewer\n                </span>\n              </div>\n              {isJSONViewer && (\n                <div className=\"response-json\">\n                  <JsonViewer height={24} json={botResponse} />\n                </div>\n              )}\n            </div>\n          )}\n        </>\n      )}\n      {expressResponse && <div className=\"response-express\">{JSON.stringify(expressResponse?.payload, null, 2)}</div>}\n    </>\n  )\n}\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getTopLoader = createSelector(\n  [(state: AppState) => state.ui.topLoader],\n  topLoader => topLoader\n)\n\nexport const getMainLoader = createSelector(\n  [(state: AppState) => state.ui.mainLoader],\n  mainLoader => mainLoader\n)\n\nexport const getRedirectPath = createSelector(\n  [(state: AppState) => state.ui.redirectPath],\n  redirectPath => redirectPath\n)\n","import React, { useEffect, useState, useRef } from 'react'\nimport classnames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport './TopLoader.scss'\nimport { getTopLoader } from '../../redux/selectors/ui'\n\nexport default function TopLoader() {\n  const topLoader = useSelector(getTopLoader)\n\n  const [start, setStart] = useState(false)\n  const [stop, setStop] = useState(false)\n  const [finish, setFinish] = useState(false)\n\n  const stopTimeout = useRef<NodeJS.Timeout | null>(null)\n  const finishTimeout = useRef<NodeJS.Timeout | null>(null)\n\n  useEffect(() => {\n    if (topLoader && !start) {\n      setStart(true)\n    }\n\n    if (!topLoader && start) {\n      setStart(false)\n      setStop(true)\n\n      stopTimeout.current = setTimeout(() => {\n        setFinish(true)\n\n        finishTimeout.current = setTimeout(() => {\n          setStop(false)\n          setFinish(false)\n        }, 100)\n      }, 200)\n    }\n  }, [topLoader, start])\n\n  useEffect(() => {\n    return () => {\n      if (stopTimeout.current) clearTimeout(stopTimeout.current)\n      if (finishTimeout.current) clearTimeout(finishTimeout.current)\n    }\n  }, [])\n\n  return (\n    <div className={classnames({ 'top-loader': true, 'top-loader--enabled': start && !finish })}>\n      <div\n        className={classnames({\n          'top-loader__bar': true,\n          'top-loader__bar--start': start,\n          'top-loader__bar--stop': stop,\n          'top-loader__bar--finish': finish,\n        })}\n      />\n    </div>\n  )\n}\n","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBotxIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 12 12\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.379 7.017v2.775h-.55A.816.816 0 0 1 0 8.989V7.427c0-.443.371-.803.829-.803h.566c-.01.13-.016.261-.016.393zm9.792-.393c.458 0 .829.36.829.803V8.99a.816.816 0 0 1-.829.803h-.55V7.017c0-.132-.006-.263-.016-.393h.566zM10.047 9.873v-2.82c0-.132-.006-.263-.018-.393C9.857 4.651 8.377 3.043 6.5 2.8h-.997c-1.88.244-3.36 1.853-3.532 3.863-.01.129-.017.26-.017.392v4.754h8.094V9.873zm-5.998-.66c-.608 0-1.101-.522-1.101-1.167 0-.644.493-1.166 1.1-1.166.609 0 1.102.522 1.102 1.166 0 .645-.493 1.167-1.101 1.167zm2.96-1.167c0-.644.493-1.166 1.1-1.166.609 0 1.102.522 1.102 1.166 0 .645-.493 1.167-1.101 1.167s-1.101-.522-1.101-1.167z\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBotxIcon);\nexport default __webpack_public_path__ + \"static/media/botx-icon.cf9274ad.svg\";\nexport { ForwardRef as ReactComponent };","import FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport { EXPRESS_NOTIFICATION_FEATURE } from '../../constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getExpressNotifications } from '../../redux/selectors/client'\nimport './ExpressNotifications.scss'\nimport { resetExpressNotificationSuccess } from '../../redux/actions/client'\n\nexport default function ExpressNotifications() {\n  const dispatch = useDispatch()\n  const expressNotifications = useSelector(getExpressNotifications)\n  const handleClear = () => {\n    dispatch(resetExpressNotificationSuccess())\n  }\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={EXPRESS_NOTIFICATION_FEATURE.name} />\n        <div className='feature-page__notifications'>\n          {!!expressNotifications.length ? (\n            <>\n              <div\n                className='notifications__clear-button'\n                onClick={handleClear}\n                title='Clear notifications'\n              >\n                Clear\n              </div>\n              {expressNotifications.map((item, i) => (\n                <div className='notifications__item' key={i}>\n                  {JSON.stringify(item?.data, null, 2)}\n                </div>\n              ))}\n            </>\n          ) : (\n            <div className='feature-page__notifications-placeholder'>\n              New notifications will appear here...\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  )\n}\n","import { createAction } from 'redux-actions'\n\nexport const SET_TOP_LOADER = 'SET_TOP_LOADER'\nexport const SET_MAIN_LOADER = 'SET_MAIN_LOADER'\nexport const SET_REDIRECT_PATH = 'SET_REDIRECT_PATH'\n\nexport const setTopLoader = createAction(SET_TOP_LOADER, (topLoader: boolean) => topLoader)\nexport const setMainLoader = createAction(SET_MAIN_LOADER, (mainLoader: boolean) => mainLoader)\nexport const setRedirectPath = createAction(SET_REDIRECT_PATH, (redirectPath: string) => redirectPath)\n\nexport type setTopLoaderActionType = ReturnType<typeof setTopLoader>\nexport type setMainLoaderActionType = ReturnType<typeof setMainLoader>\nexport type setRedirectPathActionType = ReturnType<typeof setRedirectPath>\n","import FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport { OPEN_SMART_APP_META_FEATURE } from '../../constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\nimport { setRedirectPath } from '../../redux/actions/ui'\nimport { getMeta } from '../../redux/selectors/client'\nimport { setMeta } from '../../redux/actions/client'\n\nexport default function MetaPage() {\n  const dispatch = useDispatch()\n  const meta = useSelector(getMeta)\n\n  useEffect(() => {\n    return () => {\n      dispatch(setRedirectPath(''))\n      dispatch(setMeta(null))\n    }\n  }, [dispatch])\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={OPEN_SMART_APP_META_FEATURE.name} />\n        {meta && (\n          <div className='response-express'>\n            {JSON.stringify(meta.payload, null, 2)}\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n","import { createBrowserHistory } from 'history'\n\n// Create history singleton\nexport const history = createBrowserHistory()\n","import { useEffect, useRef } from 'react'\nimport { Html5QrcodeScanner } from 'html5-qrcode'\nimport './ScanQR.scss'\n\nexport default function ScanQR({\n  onScanSuccess,\n  onScanFailure,\n}: {\n  onScanSuccess: (text: string, result: any) => void\n  onScanFailure: (error: string) => void\n}) {\n  const config = useRef<any>({\n    fps: 10,\n    qrbox: 250,\n    disableFlip: true,\n  })\n\n  useEffect(() => {\n    const html5QrcodeScanner = new Html5QrcodeScanner('reader', config.current, false)\n    html5QrcodeScanner.render(onScanSuccess, onScanFailure)\n\n    return () => {}\n    // eslint-disable-next-line\n  }, [])\n\n  return <div id=\"reader\" />\n}\n","import FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport { SCAN_QR_FEATURE } from '../../constants'\nimport ScanQR from '../scan-qr/ScanQR'\nimport { useState } from 'react'\n\nexport function ScanQRPage() {\n  const [decodedText, setDecodedText] = useState(null)\n  const [decodedResult, setDecodedResult] = useState(null)\n  const [error, setError] = useState(null)\n\n  const handleOnScanSuccess = (text: string, result: any) => {\n    setDecodedText(text)\n    setDecodedResult(result)\n    setError(null)\n    console.log(`Code matched: ${text}`, result)\n  }\n\n  const handleOnScanFailure = err => {\n    setError(err)\n    console.warn(`Code scan error: ${err}`)\n  }\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={SCAN_QR_FEATURE.name} />\n      <ScanQR onScanSuccess={handleOnScanSuccess} onScanFailure={handleOnScanFailure} />\n      {decodedText && (\n        <>\n          <p>Decoded text:</p>\n          <div>{decodedText}</div>\n        </>\n      )}\n      {decodedResult && (\n        <>\n          <p>Decoded result:</p>\n          <div>{JSON.stringify(decodedResult)}</div>\n        </>\n      )}\n      {error && (\n        <>\n          <p>Error:</p>\n          <div>{error}</div>\n        </>\n      )}\n    </div>\n  )\n}\n","import FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport { OPEN_FILE_FEATURE } from '../../constants'\nimport classnames from \"classnames\"\nimport { useState } from \"react\"\nimport { Bridge as bridge } from \"@unlimited/smartapp-sdk\"\n\nexport default function OpenFile() {\n  const [inputValue, setInputValue] = useState('')\n  const handleClick = () => {\n    if (!inputValue) return\n    console.error({inputValue: JSON.parse(inputValue)})\n\n    bridge?.sendClientEvent({\n      method: OPEN_FILE_FEATURE.method,\n      params: JSON.parse(inputValue),\n    })\n  }\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={OPEN_FILE_FEATURE.name} />\n      <input\n        className={classnames({\n          input: true,\n        })}\n        onChange={e => setInputValue(e.target.value)}\n        value={inputValue}\n        type={'text'}\n      />\n      <div className='form-buttons'>\n        <button\n          className={classnames({\n            'btn--submit': true,\n            'btn--submit-disabled': !inputValue,\n          })}\n          disabled={!inputValue}\n          type=\"submit\"\n          onClick={handleClick}\n        >\n          Submit\n        </button>\n      </div>\n    </div>\n  )\n}\n","import FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport { OPEN_WEB_PAGE_FEATURE } from '../../constants'\nimport { useState } from 'react'\nimport './OpenWebPage.scss'\n\nexport default function OpenWebPage() {\n  const [link, setLink] = useState('https://www.tutorialrepublic.com/')\n\n\n  const handleChange = (event: any) => {\n    const { value } = event.target\n    if (value) setLink(value)\n  }\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={OPEN_WEB_PAGE_FEATURE.name} />\n        <div className='open-web-page'>\n          <input\n            className='open-web-page__input'\n            type='url'\n            defaultValue={link}\n            onChange={handleChange}\n          />\n          <a className='open-web-page__link' href={link}>\n            {link}\n          </a>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useLayoutEffect } from 'react'\nimport './RequestGeolocation.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getGeolocation } from '../../redux/selectors/client'\nimport FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport { REQUEST_GEOLOCATION } from '../../constants'\nimport { requestGeolocation, setGeolocation } from '../../redux/actions/client'\nimport { dateFormat } from '../../helpers'\n\nfunction RequestGeolocation() {\n  const dispatch = useDispatch()\n  const geolocation = useSelector(getGeolocation)\n  useLayoutEffect(() => {\n    dispatch(setGeolocation(null))\n  }, [dispatch])\n\n  const handleSubmit = () => {\n    dispatch(requestGeolocation())\n  }\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={REQUEST_GEOLOCATION.name} />\n      <div className=\"request-geolocation\">\n        <p className=\"request-geolocation__title\">Координаты</p>\n        <div className=\"request-geolocation__info\">\n          <div className=\"request-geolocation__info--latitude-longitude\">{geolocation?.latitude}</div>\n          <div className=\"request-geolocation__info--latitude-longitude\">{geolocation?.longitude}</div>\n          <button onClick={handleSubmit} className=\"request-geolocation__info--button\">\n            Определить\n          </button>\n        </div>\n        <div className=\"request-geolocation__timestamp\">{dateFormat(geolocation?.timestamp)}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default RequestGeolocation\n","import './FeatureSmartapp.scss'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFeaturesMenu } from '../../redux/selectors/bot'\nimport { Link, Route, Switch } from 'react-router-dom'\nimport FeaturePage from '../feature-page/FeaturePage'\nimport { loadFeatures } from '../../redux/actions/bot'\nimport TopLoader from '../top-loader/TopLoader'\nimport { ReactComponent as BotxIcon } from '../../assets/botx-icon.svg'\nimport {\n  EXPRESS_FEATURES,\n  EXPRESS_NOTIFICATION_FEATURE,\n  OPEN_FILE_FEATURE,\n  OPEN_SMART_APP_META_FEATURE,\n  OPEN_WEB_PAGE_FEATURE,\n  REQUEST_GEOLOCATION,\n  SCAN_QR_FEATURE,\n} from '../../constants'\nimport ExpressNotifications from '../express-notifications/ExpressNotifications'\nimport MetaPage from '../meta-page/MetaPage'\nimport { getRedirectPath } from '../../redux/selectors/ui'\nimport { history } from '../../redux/router'\nimport { ScanQRPage } from '../scan-qr-page/ScanQRPage'\nimport OpenFile from '../open-file/OpenFile'\nimport { ExpressFeatureMethod } from '../../types'\nimport { openClientSettings, useQuery } from '@unlimited/smartapp-sdk'\nimport OpenWebPage from '../open-web-page/OpenWebPage'\nimport RequestGeolocation from '../request-geolocation/RequestGeolocation'\n\nexport default function FeatureSmartapp() {\n  const dispatch = useDispatch()\n  const features = useSelector(getFeaturesMenu)\n  const redirectPath = useSelector(getRedirectPath)\n  const { platform } = useQuery()\n\n  useEffect(() => {\n    if (!features) dispatch(loadFeatures())\n  }, [dispatch, features])\n\n  useEffect(() => {\n    if (redirectPath) history.push(redirectPath)\n  }, [dispatch, redirectPath])\n\n  return (\n    <div className=\"feature-smartapp\">\n      <div className=\"header\">\n        <span className=\"header__content\">\n          <BotxIcon className=\"header__icon\" height={20} width={20} />\n          <span className=\"header__text\">Feature Smartapp</span>\n        </span>\n      </div>\n      <TopLoader />\n      <section className=\"feature-smartapp__menu\">\n        <Switch>\n          {features?.map(item => (\n            <Route key={`${item.method}-route`} path={`/${item.method}`}>\n              <FeaturePage {...item} />\n            </Route>\n          ))}\n          {EXPRESS_FEATURES.map(item => (\n            <Route key={`${item.method}-route`} path={`/${item.method}`}>\n              <FeaturePage {...item} />\n            </Route>\n          ))}\n          <Route key={`${OPEN_SMART_APP_META_FEATURE.method}-route`} path={`/${OPEN_SMART_APP_META_FEATURE.method}`}>\n            <MetaPage />\n          </Route>\n          <Route key={`${EXPRESS_NOTIFICATION_FEATURE.method}-route`} path={`/${EXPRESS_NOTIFICATION_FEATURE.method}`}>\n            <ExpressNotifications />\n          </Route>\n          <Route key={`${SCAN_QR_FEATURE.method}-route`} path={`/${SCAN_QR_FEATURE.method}`}>\n            <ScanQRPage />\n          </Route>\n          <Route key={`${OPEN_FILE_FEATURE.method}-route`} path={`/${OPEN_FILE_FEATURE.method}`}>\n            <OpenFile />\n          </Route>\n          <Route key={`${OPEN_WEB_PAGE_FEATURE.method}-route`} path={`/${OPEN_WEB_PAGE_FEATURE.method}`}>\n            <OpenWebPage />\n          </Route>\n          <Route key={`${REQUEST_GEOLOCATION.method}-route`} path={`/${REQUEST_GEOLOCATION.method}`}>\n            <RequestGeolocation />\n          </Route>\n          <Route path={'/'}>\n            {features?.map(item => (\n              <Link className=\"menu-item\" key={`${item.method}-link`} to={`/${item.method}`}>\n                {item.name}\n              </Link>\n            ))}\n            {EXPRESS_FEATURES.map(item => {\n              if (item.method === ExpressFeatureMethod.OPEN_CLIENT_SETTINGS) {\n                return (\n                  <div\n                    className=\"menu-item\"\n                    onClick={() => {\n                      if (platform !== 'web') {\n                        openClientSettings()\n                      } else {\n                        alert('Feature is unavailable on web client')\n                      }\n                    }}\n                  >\n                    {item.name}\n                  </div>\n                )\n              } else {\n                return (\n                  <Link className=\"menu-item\" key={`${item.method}-link`} to={`/${item.method}`}>\n                    {item.name}\n                  </Link>\n                )\n              }\n            })}\n            <Link\n              className=\"menu-item\"\n              key={`${EXPRESS_NOTIFICATION_FEATURE.method}-link`}\n              to={`/${EXPRESS_NOTIFICATION_FEATURE.method}`}\n            >\n              {EXPRESS_NOTIFICATION_FEATURE.name}\n            </Link>\n            <Link className=\"menu-item\" key={`${SCAN_QR_FEATURE.method}-link`} to={`/${SCAN_QR_FEATURE.method}`}>\n              {SCAN_QR_FEATURE.name}\n            </Link>\n            <Link\n              className=\"menu-item\"\n              key={`${OPEN_WEB_PAGE_FEATURE.method}-link`}\n              to={`/${OPEN_WEB_PAGE_FEATURE.method}`}\n            >\n              {OPEN_WEB_PAGE_FEATURE.name}\n            </Link>\n            <Link\n              className=\"menu-item\"\n              key={`${REQUEST_GEOLOCATION.method}-link`}\n              to={`/${REQUEST_GEOLOCATION.method}`}\n            >\n              {REQUEST_GEOLOCATION.name}\n            </Link>\n          </Route>\n        </Switch>\n      </section>\n    </div>\n  )\n}\n","import { BotMethodResponse } from '../../types'\nimport './Notifier.scss'\n\nexport default function Notifier({ result, status }: BotMethodResponse['payload']) {\n  return (\n    <div className={'notifier'}>\n      <span className={'notifier__text'}>{result}</span>\n      <span className={'notifier__text'}>Status: {status}</span>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport MainLoader from './main-loader/MainLoader'\nimport FeatureSmartapp from './feature-smartapp/FeatureSmartapp'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BotMethodResponse, EventType, ExpressNotification } from '../types'\nimport { sendReadyEvent, setExpressNotificationSuccess } from '../redux/actions/client'\nimport Notifier from './notifier/Notifier'\nimport { getMainLoader } from '../redux/selectors/ui'\n\nexport default function Main() {\n  const dispatch = useDispatch()\n  const [load, setLoad] = useState(true)\n  const isMainLoader = useSelector(getMainLoader)\n  const [notifier, setNotifier] = useState<BotMethodResponse['payload'] | null>(null)\n\n  useEffect(() => {\n    if (load) {\n      setLoad(false)\n      dispatch(sendReadyEvent())\n    }\n\n    bridge?.onReceive(({ type, payload }) => {\n      if (typeof payload !== 'object') return\n\n      switch (type) {\n        case EventType.SMARTAPP_RPC: {\n          setNotifier(payload as BotMethodResponse['payload'])\n          setTimeout(() => setNotifier(null), 3000)\n          break\n        }\n        case EventType.NOTIFICATION: {\n          dispatch(setExpressNotificationSuccess(payload as ExpressNotification))\n          break\n        }\n        default: {\n          console.error({type, payload})\n        }\n      }\n    })\n  }, [dispatch, load])\n\n  return (\n    <>\n      {isMainLoader && <MainLoader />}\n      <FeatureSmartapp />\n      {notifier && <Notifier {...notifier} />}\n    </>\n  )\n}\n","import { handleActions } from 'redux-actions'\nimport { UIState } from '../../types'\nimport {\n  SET_MAIN_LOADER,\n  SET_REDIRECT_PATH,\n  SET_TOP_LOADER,\n  setMainLoaderActionType, setRedirectPathActionType,\n  setTopLoaderActionType,\n} from '../actions/ui'\n\nconst initialState: UIState = {\n  topLoader: false,\n  mainLoader: false,\n  redirectPath: '',\n}\n\nconst reducers = {\n  [SET_TOP_LOADER]: (\n    state: UIState, { payload: topLoader }: setTopLoaderActionType\n  ): UIState => ({\n    ...state, topLoader\n  }),\n  [SET_MAIN_LOADER]: (\n    state: UIState, { payload: mainLoader }: setMainLoaderActionType\n  ): UIState => ({\n    ...state, mainLoader\n  }),\n  [SET_REDIRECT_PATH]: (\n    state: UIState, { payload: redirectPath }: setRedirectPathActionType\n  ): UIState => ({\n    ...state, redirectPath\n  }),\n}\n\nexport const ui = handleActions<UIState, any>(reducers, initialState)\n","import { handleActions } from 'redux-actions'\nimport { BotState } from '../../types'\nimport {\n  LOAD_FEATURES_SUCCESS,\n  loadFeaturesSuccessActionType,\n  RESET_RESPONSE,\n  SEND_FEATURE_BOT_EVENT_SUCCESS,\n} from '../actions/bot'\n\nconst initialState: BotState = {\n  features: null,\n  response: null,\n  notifications: null,\n}\n\nconst reducers = {\n  [LOAD_FEATURES_SUCCESS]: (\n    state: BotState, { payload: features }: loadFeaturesSuccessActionType,\n  ): BotState => ({\n    ...state,\n    features,\n  }),\n  [SEND_FEATURE_BOT_EVENT_SUCCESS]: (\n    state: BotState,\n    { payload: response }: any\n  ): BotState => ({\n    ...state,\n    response,\n  }),\n  [RESET_RESPONSE]: (state: BotState): BotState => ({\n    ...state,\n    response: null,\n  }),\n}\n\nexport const bot = handleActions(reducers, initialState)\n","import { handleActions } from 'redux-actions'\nimport { ClientState } from '../../types'\n\nimport {\n  REMOVE_FILE_SUCCESS,\n  removeFileSuccessActionType,\n  RESET_ATTACHMENTS,\n  RESET_EXPRESS_NOTIFICATION_SUCCESS,\n  RESET_EXPRESS_RESPONSE,\n  SEND_EXPRESS_EVENT_SUCCESS,\n  sendExpressEventSuccessActionType,\n  SET_EXPRESS_NOTIFICATION_SUCCESS,\n  SET_GEOLOCATION,\n  SET_META,\n  setExpressNotificationSuccessActionType,\n  setGeolocationActionType,\n  setMetaActionType,\n  UPLOAD_FILE_SUCCESS,\n  UPLOAD_FILES_SUCCESS,\n  uploadFilesSuccessActionType,\n  uploadFileSuccessActionType,\n} from '../actions/client'\n\nconst initialState: ClientState = {\n  attachments: null,\n  response: null,\n  meta: null,\n  notifications: [],\n  geolocation: null,\n}\n\nconst reducers = {\n  [UPLOAD_FILE_SUCCESS]: (state: ClientState, { payload: file }: uploadFileSuccessActionType): ClientState => ({\n    ...state,\n    attachments: [file],\n  }),\n  [UPLOAD_FILES_SUCCESS]: (state: ClientState, { payload: files }: uploadFilesSuccessActionType): ClientState => ({\n    ...state,\n    attachments: [...files],\n  }),\n  [REMOVE_FILE_SUCCESS]: (state: ClientState, { payload: id }: removeFileSuccessActionType): ClientState => ({\n    ...state,\n    attachments: state.attachments.filter(attachment => attachment.fileId !== id),\n  }),\n  [RESET_ATTACHMENTS]: (state: ClientState): ClientState => ({\n    ...state,\n    attachments: null,\n  }),\n  [SET_EXPRESS_NOTIFICATION_SUCCESS]: (\n    state: ClientState,\n    { payload }: setExpressNotificationSuccessActionType\n  ): ClientState => ({\n    ...state,\n    notifications: [payload, ...state.notifications],\n  }),\n  [RESET_EXPRESS_NOTIFICATION_SUCCESS]: (state: ClientState): ClientState => ({\n    ...state,\n    notifications: [],\n  }),\n  [SEND_EXPRESS_EVENT_SUCCESS]: (state: ClientState, response: sendExpressEventSuccessActionType): ClientState => ({\n    ...state,\n    response,\n  }),\n  [RESET_EXPRESS_RESPONSE]: (state: ClientState): ClientState => ({\n    ...state,\n    response: null,\n  }),\n  [SET_META]: (state: ClientState, { payload }: setMetaActionType): ClientState => ({\n    ...state,\n    meta: payload,\n  }),\n  [SET_GEOLOCATION]: (state: ClientState, { payload }: setGeolocationActionType): ClientState => ({\n    ...state,\n    geolocation: payload,\n  }),\n}\n\nexport const client = handleActions<ClientState, any>(reducers, initialState)\n","import { connectRouter } from 'connected-react-router'\nimport { combineReducers } from 'redux'\nimport { history } from '../router'\nimport { ui } from './ui'\nimport { AppState } from '../../types'\nimport { bot } from './bot'\nimport { client } from './client'\n\nexport const rootReducer = combineReducers<AppState>({\n  ui,\n  bot,\n  client,\n  router: connectRouter(history),\n})\n","import { put } from 'redux-saga/effects'\nimport { setMainLoader } from '../actions/ui'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport { BotFeaturesResponse } from '../../types'\nimport { MENU_EVENT } from '../../constants'\nimport { loadFeaturesSuccess } from '../actions/bot'\n\nexport function* loadFeaturesSaga() {\n  try {\n    yield put(setMainLoader(true))\n\n    const response: BotFeaturesResponse = yield bridge.sendBotEvent(MENU_EVENT)\n\n    if (response) yield put(loadFeaturesSuccess(response.payload.result))\n  } catch (e: any) {\n    console.error('loadFeaturesSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n","import { put } from 'redux-saga/effects'\nimport { setMainLoader } from '../actions/ui'\nimport { BotMethodResponse } from '../../types'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport { sendFeatureBotEventSuccess } from '../actions/bot'\n\nexport function* sendFeatureBotEventSaga(action) {\n  try {\n    yield put(setMainLoader(true))\n\n    const response: BotMethodResponse = yield bridge?.sendBotEvent(action.payload)\n\n    yield put(sendFeatureBotEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendFeatureBotEventSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n","import { Bridge as bridge, ready, requestGeolocation, sendMessage } from '@unlimited/smartapp-sdk'\nimport { ClientEventMethod, ExpressMethodResponse, File } from '../../types'\nimport { put } from 'redux-saga/effects'\nimport {\n  sendExpressEventActionType,\n  sendExpressEventSuccess,\n  sendMessageExpressEventActionType,\n  setGeolocation,\n  setMeta,\n  uploadFileActionType,\n  uploadFilesActionType,\n  uploadFilesSuccess,\n  uploadFileSuccess,\n} from '../actions/client'\nimport { setRedirectPath, setTopLoader } from '../actions/ui'\nimport { OPEN_SMART_APP_META_FEATURE } from '../../constants'\n\nexport function* uploadFileSaga({ payload: { type } }: uploadFileActionType) {\n  try {\n    const response = yield bridge?.sendClientEvent({\n      method: ClientEventMethod.UPLOAD_FILE,\n      params: { type },\n    })\n\n    if (!response.payload?.record) return\n\n    const file: File = {\n      ...response.payload.record,\n    }\n\n    yield put(uploadFileSuccess(file))\n  } catch (e) {\n    console.error(`uploadFileSaga error: ${e}`)\n  }\n}\n\nexport function* uploadFilesSaga({ payload: { type } }: uploadFilesActionType) {\n  try {\n    const response = yield bridge?.sendClientEvent({\n      method: ClientEventMethod.UPLOAD_FILES,\n      params: { type },\n    })\n\n    if (!response.payload.records.length) return\n\n    const files: File[] = response.payload.records\n\n    yield put(uploadFilesSuccess(files))\n  } catch (e) {\n    console.error(`uploadFilesSaga error: ${e}`)\n  }\n}\n\nexport function* requestGeolocationSaga() {\n  try {\n    yield put(setTopLoader(true))\n    const response = yield requestGeolocation()\n\n    const result = response?.payload?.result\n    if (result) {\n      yield put(setGeolocation(result))\n    }\n  } catch (e) {\n    console.error(`uploadFileSaga error: ${e}`)\n  } finally {\n    yield put(setTopLoader(false))\n  }\n}\n\nexport function* sendExpressEventSaga(action: sendExpressEventActionType) {\n  try {\n    yield put(setTopLoader(true))\n\n    const response: ExpressMethodResponse = yield bridge?.sendClientEvent(action.payload)\n\n    yield put(sendExpressEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendExpressEventSaga error', e)\n  } finally {\n    yield put(setTopLoader(false))\n  }\n}\n\nexport function* sendMessageExpressEventSaga(action: sendMessageExpressEventActionType) {\n  try {\n    yield put(setTopLoader(true))\n\n    const response: ExpressMethodResponse = yield sendMessage(action.payload)\n\n    yield put(sendExpressEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendMessageExpressEventSaga error', e)\n  } finally {\n    yield put(setTopLoader(false))\n  }\n}\n\nexport function* sendExpressReadyEventSaga() {\n  try {\n    const response = yield ready(300)\n    const meta = response?.payload?.[OPEN_SMART_APP_META_FEATURE.field]\n\n    if (meta) {\n      bridge?.log?.({ response })\n      yield put(setRedirectPath(`/${OPEN_SMART_APP_META_FEATURE.method}`))\n      yield put(setMeta(response))\n    } else {\n      setRedirectPath('/')\n    }\n  } catch (e) {\n    console.error('sendExpressReadyEventSaga', e)\n  }\n}\n","import { all, takeEvery } from 'redux-saga/effects'\nimport { loadFeaturesSaga } from './ui'\nimport { sendFeatureBotEventSaga } from './bot'\nimport { LOAD_FEATURES, SEND_FEATURE_BOT_EVENT } from '../actions/bot'\nimport {\n  requestGeolocationSaga,\n  sendExpressEventSaga,\n  sendExpressReadyEventSaga,\n  sendMessageExpressEventSaga,\n  uploadFileSaga,\n  uploadFilesSaga,\n} from './client'\nimport {\n  REQUEST_GEOLOCATION,\n  SEND_EXPRESS_EVENT,\n  SEND_EXPRESS_READY_EVENT,\n  SEND_MESSAGE_EXPRESS_EVENT,\n  UPLOAD_FILE,\n  UPLOAD_FILES,\n} from '../actions/client'\n\nfunction* rootSaga() {\n  yield all([\n    takeEvery(LOAD_FEATURES, loadFeaturesSaga),\n    takeEvery(SEND_FEATURE_BOT_EVENT, sendFeatureBotEventSaga),\n    takeEvery(SEND_EXPRESS_EVENT, sendExpressEventSaga),\n    takeEvery(SEND_MESSAGE_EXPRESS_EVENT, sendMessageExpressEventSaga),\n    takeEvery(SEND_EXPRESS_READY_EVENT, sendExpressReadyEventSaga),\n    takeEvery(UPLOAD_FILE, uploadFileSaga),\n    takeEvery(UPLOAD_FILES, uploadFilesSaga),\n    takeEvery(REQUEST_GEOLOCATION, requestGeolocationSaga),\n  ])\n}\n\nexport default rootSaga\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport Main from './components/Main'\nimport { configureStore } from './redux/configureStore'\nimport { history } from './redux/router'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      {/* @ts-ignore */}\n      <ConnectedRouter history={history}>\n        <Main />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","import { applyMiddleware, createStore, Store } from 'redux'\nimport { routerMiddleware as createRouterMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { rootReducer } from './reducers'\nimport rootSaga from './sagas'\nimport { history } from './router'\nimport { AppState } from '../types'\n\ntype ApplicationStore = Store<AppState>\n\nexport function configureStore(): ApplicationStore {\n  const sagaMiddleware = createSagaMiddleware()\n  const routerMiddleware = createRouterMiddleware(history)\n\n  const store: ApplicationStore = createStore(\n    rootReducer,\n    undefined,\n    composeWithDevTools(applyMiddleware(sagaMiddleware, routerMiddleware))\n  )\n\n  sagaMiddleware\n    .run(rootSaga)\n    .toPromise()\n    .catch((e: Error) => console.error('Saga error', e))\n\n  return store\n}\n"],"sourceRoot":""}