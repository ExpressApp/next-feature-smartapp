{"version":3,"sources":["components/main-loader/MainLoader.tsx","types/index.ts","redux/selectors/bot.ts","assets/plus.svg","constants.ts","helpers/index.ts","redux/actions/bot.ts","assets/clear-input.svg","assets/file.svg","assets/copy.svg","components/json-editor/JsonViewer.tsx","assets/arrow-left.svg","redux/actions/client.ts","redux/selectors/client.ts","components/feature-page-header/FeaturePageHeader.tsx","components/feature-page/FeaturePage.tsx","assets/botx-icon.svg","redux/selectors/ui.ts","components/top-loader/TopLoader.tsx","components/express-notifications/ExpressNotifications.tsx","redux/actions/ui.ts","components/meta-page/MetaPage.tsx","redux/router.ts","components/scan-qr/ScanQR.tsx","components/scan-qr-page/ScanQRPage.tsx","components/open-file/OpenFile.tsx","components/open-web-page/OpenWebPage.tsx","components/feature-smartapp/FeatureSmartapp.tsx","components/notifier/Notifier.tsx","components/Main.tsx","redux/reducers/ui.ts","redux/reducers/bot.ts","redux/reducers/client.ts","redux/reducers/index.ts","redux/sagas/ui.ts","redux/sagas/bot.ts","redux/sagas/client.ts","redux/sagas/index.ts","index.tsx","redux/configureStore.ts"],"names":["MainLoader","className","EventType","BotFeatureMethod","ExpressFeatureMethod","ExpressFeatureName","ClientEventMethod","InputId","InputLabel","InputType","getFeaturesMenu","createSelector","state","bot","features","getFeatureBotResponse","response","_path","EXPRESS_NOTIFICATION_FEATURE","OPEN_SMART_APP_META_FEATURE","OPEN_FILE_FEATURE","SCAN_QR_FEATURE","OPEN_WEB_PAGE_FEATURE","MENU_EVENT","method","params","text","INPUT_TYPE","INPUT_TEXT","INPUT_NUMBER","FILE_PICKER","ARRAY_UUID","UUID","EXPRESS_FEATURES","ADD_CONTACT","name","uiElements","id","PHONE","label","type","NAME","CREATE_PERSONAL_CHAT","HUID","GET_CONTACT","OPEN_SMARTAPP","SMARTAPP_ID","SEND_MESSAGE","MESSAGE","GROUP_CHAT_ID","USER_HUID","OPEN_CLIENT_SETTINGS","GET_CHATS","FILTER","SEARCH_CORPORATE_PHONEBOOK","OPEN_GROUP_CHAT","getFormInitialValues","reduce","acc","item","undefined","LOAD_FEATURES","LOAD_FEATURES_SUCCESS","RESET_RESPONSE","SEND_FEATURE_BOT_EVENT","SEND_FEATURE_BOT_EVENT_SUCCESS","loadFeatures","createAction","loadFeaturesSuccess","resetFeatures","sendFeatureBotEvent","botEvent","sendFeatureBotEventSuccess","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPlus","_ref","svgRef","title","titleId","props","xmlns","viewBox","fill","ref","fillRule","d","ForwardRef","SvgClearInput","transform","_g","SvgFile","width","height","x","y","rx","fontSize","fontWeight","SvgCopy","JsonViewer","container","useRef","useEffect","editor","JSONEditor","current","mode","enableTransform","json","set","button","document","createElement","innerHTML","ReactDOMServer","renderToStaticMarkup","addEventListener","obj","JSON","stringify","body","appendChild","select","execCommand","removeChild","copyToClipboardJson","setAttribute","menu","querySelector","search","insertBefore","destroy","UPLOAD_FILE","UPLOAD_FILE_SUCCESS","UPLOAD_FILES","UPLOAD_FILES_SUCCESS","REMOVE_FILE_SUCCESS","RESET_ATTACHMENTS","SEND_EXPRESS_EVENT","SEND_MESSAGE_EXPRESS_EVENT","SEND_EXPRESS_EVENT_SUCCESS","SET_EXPRESS_NOTIFICATION_SUCCESS","RESET_EXPRESS_NOTIFICATION_SUCCESS","RESET_EXPRESS_RESPONSE","SEND_EXPRESS_READY_EVENT","SET_META","uploadFile","uploadFileSuccess","file","uploadFiles","uploadFilesSuccess","files","removeFileSuccess","resetAttachments","sendExpressEvent","expressEvent","sendMessageExpressEvent","payload","sendExpressEventSuccess","setExpressNotificationSuccess","notification","resetExpressNotificationSuccess","setMeta","meta","resetExpressResponse","sendReadyEvent","getAttachments","client","attachments","getExpressResponse","getMeta","getExpressNotifications","notifications","notificaions","SvgArrowLeft","FeaturePageHeader","to","FeaturePage","dispatch","useDispatch","botResponse","useSelector","expressResponse","useState","inputs","setInputs","inputError","setInputError","isJSONViewer","setIsJSONViewer","isAllowNewInputs","SEARCH_USERS","isFilesMethod","ECHO_FILE","ECHO_FILES","includes","isUsersMethod","isExpressMethod","values","isMobile","test","window","navigator","userAgent","handleFormSubmitForExpressMethod","formValues","filterFormValues","userHuid","groupChatId","message","action","messageBody","messageMeta","bridge","disableRenameParams","enableRenameParams","openClientSettings","getChats","filter","chats","openGroupChat","searchCorporatePhonebook","phonebook","event","sendExpressEventAction","useMemo","value","toggleIsJSONViewer","formik","useFormik","initialValues","onSubmit","huids","handleFormSubmitForBotMethod","getIsSubmitButtonDisabled","map","input","index","HUIDS","FILE","FILES","onClick","attachment","fileName","fileId","classnames","disabled","handleSubmit","inputType","isShowLabel","phone","uuid","isNotEmpty","getIsInputError","onChange","handleChange","multiple","min","setFieldValue","last","next","ECHO","result","replaceAll","checked","getTopLoader","ui","topLoader","getMainLoader","mainLoader","getRedirectPath","redirectPath","TopLoader","start","setStart","stop","setStop","finish","setFinish","stopTimeout","finishTimeout","setTimeout","clearTimeout","SvgBotxIcon","ExpressNotifications","expressNotifications","data","SET_TOP_LOADER","SET_MAIN_LOADER","SET_REDIRECT_PATH","setTopLoader","setMainLoader","setRedirectPath","MetaPage","history","createBrowserHistory","ScanQR","onScanSuccess","onScanFailure","config","fps","qrbox","disableFlip","Html5QrcodeScanner","render","ScanQRPage","decodedText","setDecodedText","decodedResult","setDecodedResult","error","setError","console","log","err","warn","OpenFile","inputValue","setInputValue","e","parse","sendClientEvent","OpenWebPage","link","setLink","defaultValue","href","FeatureSmartapp","platform","useQuery","push","path","alert","Notifier","status","Main","load","setLoad","isMainLoader","notifier","setNotifier","onReceive","SMARTAPP_RPC","NOTIFICATION","reducers","handleActions","rootReducer","combineReducers","router","connectRouter","loadFeaturesSaga","put","sendBotEvent","sendFeatureBotEventSaga","uploadFileSaga","uploadFilesSaga","sendExpressEventSaga","sendMessageExpressEventSaga","sendExpressReadyEventSaga","record","records","sendMessage","ready","rootSaga","all","takeEvery","ReactDOM","StrictMode","store","sagaMiddleware","createSagaMiddleware","routerMiddleware","createRouterMiddleware","createStore","composeWithDevTools","applyMiddleware","run","toPromise","catch","configureStore","getElementById"],"mappings":"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","file":"static/js/main.ed366920.chunk.js","sourcesContent":["import React from 'react'\nimport './MainLoader.scss'\n\nexport default function MainLoader() {\n  return (\n    <div className='main-loader'>\n      <div className='main-loader__spinner'>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  )\n}\n","import { RouterState } from 'connected-react-router'\n\nexport enum EventType {\n  SMARTAPP_RPC = 'smartapp_rpc',\n  NOTIFICATION = 'notification',\n  OPEN_SMARTAPP_META = 'open_smart_app_meta',\n}\n\nexport enum BotFeatureMethod {\n  ECHO = 'echo',\n  UPDATE_APP_COUNTER = 'update_app_counter',\n  SEND_NOTIFICATION = 'send_notification',\n  ECHO_FILE = 'echo_file',\n  ECHO_FILES = 'echo_files',\n  SEARCH_USERS = 'search_users',\n}\n\nexport enum ExpressFeatureMethod {\n  ADD_CONTACT = 'add_contact',\n  CREATE_PERSONAL_CHAT = 'create_personal_chat',\n  SEND_MESSAGE = 'send_message',\n  GET_CONTACT = 'get_contact',\n  OPEN_SMARTAPP = 'open_smart_app',\n  OPEN_CLIENT_SETTINGS = 'open_client_settings',\n  GET_CHATS = 'get_chats',\n  SEARCH_CORPORATE_PHONEBOOK = 'search_corporate_phonebook',\n  OPEN_GROUP_CHAT = 'open_group_chat',\n}\n\nexport enum ExpressFeatureName {\n  ADD_CONTACT = 'Add Contact',\n  CREATE_PERSONAL_CHAT = 'Create Personal Chat',\n  SEND_MESSAGE = 'Send Message to Group Chat or User',\n  GET_CONTACT = 'Get Contact',\n  OPEN_SMARTAPP = 'Open SmartApp',\n  OPEN_CLIENT_SETTINGS = 'Open Client Settings',\n  GET_CHATS = 'Get Chats',\n  SEARCH_CORPORATE_PHONEBOOK = 'Search Corporate Phonebook',\n  OPEN_GROUP_CHAT = 'Open Group Chat',\n}\n\nexport enum ClientEventMethod {\n  READY = 'ready',\n  UPLOAD_FILE = 'upload_file',\n  UPLOAD_FILES = 'upload_files',\n}\n\nexport interface BotEvent {\n  method: BotFeatureMethod | 'menu'\n  params: any\n  files?: File[]\n  timeout?: number\n}\n\nexport interface ExpressEvent {\n  method: ExpressFeatureMethod\n  params: any\n}\n\nexport interface SendMessageActionPayload {\n  userHuid: string | null,\n  groupChatId: string | null,\n  messageBody: string,\n  messageMeta?: {}\n}\n\nexport enum InputId {\n  TEXT = 'text',\n  COUNT = 'count',\n  DELAY = 'delay',\n  FILE = 'file',\n  FILES = 'files',\n  HUIDS = 'huids',\n  PHONE = 'phone',\n  NAME = 'name',\n  HUID = 'huid',\n  SMARTAPP_ID = 'appId',\n  MESSAGE = 'message',\n  GROUP_CHAT_ID = 'groupChatId',\n  USER_HUID = 'userHuid',\n  FILTER = 'filter',\n}\n\nexport enum InputLabel {\n  TEXT = 'Text',\n  COUNT = 'Count',\n  DELAY = 'Delay',\n  FILE = 'File',\n  FILES = 'Files',\n  HUIDS = 'Huids',\n  PHONE = 'Phone',\n  NAME = 'Name',\n  HUID = 'Huid',\n  SMARTAPP_ID = 'Smartapp ID',\n  MESSAGE = 'Message',\n  GROUP_CHAT_ID = 'Group chat id',\n  USER_HUID = 'User huid',\n  FILTER = 'Filter',\n}\n\nexport enum InputType {\n  INPUT_TEXT = 'INPUT_TEXT',\n  INPUT_NUMBER = 'INPUT_NUMBER',\n  FILE_PICKER = 'FILE_PICKER',\n  ARRAY_UUID = 'ARRAY_UUID',\n  UUID = 'UUID',\n}\n\nexport interface Input {\n  id: InputId | string\n  label: InputLabel\n  type: InputType\n}\n\nexport interface BotFeature {\n  method: BotFeatureMethod\n  name: string\n  uiElements: Input[]\n}\n\nexport type ExpressFeature = BotFeature | {\n  method: ExpressFeatureMethod\n  name: ExpressFeatureName\n  uiElements: Input[]\n}\n\nexport type BotFeatures = BotFeature[] | null\n\nexport interface BotMethodResponse {\n  type: EventType.SMARTAPP_RPC | string,\n  files: File[]\n  payload: {\n    result: string,\n    status: 'ok' | 'error'\n  }\n}\n\nexport type BotFeaturesResponse = BotMethodResponse & {\n  payload: {\n    result: BotFeature[]\n  }\n}\n\nexport interface ExpressMethodResponse {\n  ref?: string\n  payload: any\n}\n\nexport interface ExpressNotification {\n  ref: null\n  type: 'notification'\n  data: object\n}\n\nexport interface File {\n  type?: string\n  file?: string\n  fileMimeType?: string\n  fileName?: string\n  filePreview?: string\n  filePreviewHeight?: number\n  filePreviewWidth?: number\n  fileSize: number\n  fileHash?: string\n  fileEncryptionAlgo?: string\n  chunkSize?: number\n  fileId?: any\n  key?: object\n}\n\nexport interface UIState {\n  topLoader: boolean\n  mainLoader: boolean\n  redirectPath: string\n}\n\nexport interface BotState {\n  features: BotFeatures\n  response:  BotMethodResponse | null\n  notifications: BotMethodResponse[] | null\n}\n\nexport interface ClientState {\n  attachments: File[] | null\n  response: ExpressMethodResponse | null\n  meta: ExpressMethodResponse | null\n  notifications: ExpressNotification[] | null\n}\n\nexport interface AppState {\n  ui: UIState\n  bot: BotState\n  client: ClientState\n  router: RouterState\n}\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getFeaturesMenu = createSelector(\n  [(state: AppState) => state.bot.features],\n  features => features,\n)\n\nexport const getFeatureBotResponse = createSelector(\n  [(state: AppState) => state.bot.response],\n  response => response,\n)\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPlus(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M13 11V4h-2v7H4v2h7v7h2v-7h7v-2h-7z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.97a40cd5.svg\";\nexport { ForwardRef as ReactComponent };","import {\n  ExpressFeature,\n  ExpressFeatureMethod,\n  ExpressFeatureName,\n  InputId,\n  InputLabel,\n  InputType,\n} from './types'\n\nexport const EXPRESS_NOTIFICATION_FEATURE = {\n  method: 'notification',\n  name: 'Express Notification',\n}\n\nexport const OPEN_SMART_APP_META_FEATURE = {\n  name: 'Open Smart App Meta',\n  method: 'open_smart_app',\n  field: 'openSmartAppMeta',\n}\n\nexport const OPEN_FILE_FEATURE = {\n  name: 'Open File',\n  method: 'open_file',\n}\n\nexport const SCAN_QR_FEATURE = {\n  name: 'Scan QR',\n  method: 'scan_qr',\n}\n\nexport const OPEN_WEB_PAGE_FEATURE = {\n  name: 'Open Web Page',\n  method: 'open-web-page',\n}\n\nexport const MENU_EVENT: any = {\n  method: 'menu',\n  params: {\n    text: 'menu',\n  },\n}\n\nexport const INPUT_TYPE: Record<InputType, string> = {\n  INPUT_TEXT: 'text',\n  INPUT_NUMBER: 'number',\n  FILE_PICKER: 'file',\n  ARRAY_UUID: 'text',\n  UUID: 'text'\n}\n\nexport const EXPRESS_FEATURES: ExpressFeature[] = [\n  {\n    method: ExpressFeatureMethod.ADD_CONTACT,\n    name: ExpressFeatureName.ADD_CONTACT,\n    uiElements: [\n      {\n        id: InputId.PHONE,\n        label: InputLabel.PHONE,\n        type: InputType.INPUT_TEXT,\n      },\n      {\n        id: InputId.NAME,\n        label: InputLabel.NAME,\n        type: InputType.INPUT_TEXT,\n      },\n    ],\n  },\n  {\n    method: ExpressFeatureMethod.CREATE_PERSONAL_CHAT,\n    name: ExpressFeatureName.CREATE_PERSONAL_CHAT,\n    uiElements: [{\n      id: InputId.HUID,\n      label: InputLabel.HUID,\n      type: InputType.UUID,\n    }],\n  },\n  {\n    method: ExpressFeatureMethod.GET_CONTACT,\n    name: ExpressFeatureName.GET_CONTACT,\n    uiElements: [{\n      id: InputId.PHONE,\n      label: InputLabel.PHONE,\n      type: InputType.INPUT_TEXT,\n    }],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_SMARTAPP,\n    name: ExpressFeatureName.OPEN_SMARTAPP,\n    uiElements: [{\n      id: InputId.SMARTAPP_ID,\n      label: InputLabel.SMARTAPP_ID,\n      type: InputType.INPUT_TEXT,\n    }],\n  },\n  {\n    method: ExpressFeatureMethod.SEND_MESSAGE,\n    name: ExpressFeatureName.SEND_MESSAGE,\n    uiElements: [{\n      id: InputId.MESSAGE,\n      label: InputLabel.MESSAGE,\n      type: InputType.INPUT_TEXT,\n    }, {\n      id: InputId.GROUP_CHAT_ID,\n      label: InputLabel.GROUP_CHAT_ID,\n      type: InputType.UUID,\n    }, {\n      id: InputId.USER_HUID,\n      label: InputLabel.USER_HUID,\n      type: InputType.UUID,\n    }],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_CLIENT_SETTINGS,\n    name: ExpressFeatureName.OPEN_CLIENT_SETTINGS,\n    uiElements: [],\n  },\n  {\n    method: ExpressFeatureMethod.GET_CHATS,\n    name: ExpressFeatureName.GET_CHATS,\n    uiElements: [{\n      id: InputId.FILTER,\n      label: InputLabel.FILTER,\n      type: InputType.INPUT_TEXT,\n    }],\n  },\n  {\n    method: ExpressFeatureMethod.SEARCH_CORPORATE_PHONEBOOK,\n    name: ExpressFeatureName.SEARCH_CORPORATE_PHONEBOOK,\n    uiElements: [{\n      id: InputId.FILTER,\n      label: InputLabel.FILTER,\n      type: InputType.INPUT_TEXT,\n    }],\n  },\n  {\n    method: ExpressFeatureMethod.OPEN_GROUP_CHAT,\n    name: ExpressFeatureName.OPEN_GROUP_CHAT,\n    uiElements: [{\n      id: InputId.GROUP_CHAT_ID,\n      label: InputLabel.GROUP_CHAT_ID,\n      type: InputType.UUID,\n    }],\n  },\n]\n","import { Input } from '../types'\n\nexport interface FormValues {\n  [key: string]: string | undefined\n}\n\nexport const getFormInitialValues: (uiElements: Input[]) => FormValues = uiElements => {\n  return uiElements?.reduce((acc: FormValues, item) => {\n    acc[item.id] = undefined\n    return acc\n  }, {})\n}\n","import { createAction } from 'redux-actions'\nimport { BotEvent, BotFeatures, BotMethodResponse, ExpressMethodResponse } from '../../types'\n\nexport const LOAD_FEATURES = 'LOAD_FEATURES'\nexport const LOAD_FEATURES_SUCCESS = 'LOAD_FEATURES_SUCCESS'\nexport const RESET_RESPONSE = 'RESET_RESPONSE'\nexport const SEND_FEATURE_BOT_EVENT = 'SEND_FEATURE_BOT_EVENT'\nexport const SEND_FEATURE_BOT_EVENT_SUCCESS = 'SEND_FEATURE_BOT_EVENT_SUCCESS'\n\nexport const loadFeatures = createAction(LOAD_FEATURES, () => {\n})\nexport const loadFeaturesSuccess = createAction(LOAD_FEATURES_SUCCESS, (features: BotFeatures) => features)\nexport const resetFeatures = createAction(RESET_RESPONSE, () => {\n})\nexport const sendFeatureBotEvent = createAction(SEND_FEATURE_BOT_EVENT, (botEvent: BotEvent) => botEvent)\nexport const sendFeatureBotEventSuccess = createAction(\n  SEND_FEATURE_BOT_EVENT_SUCCESS,\n  (response: BotMethodResponse | ExpressMethodResponse | null) => response,\n)\n\nexport type loadFeaturesSuccessActionType = ReturnType<typeof loadFeaturesSuccess>\nexport type sendFeatureBotEventSuccessActionType = ReturnType<typeof sendFeatureBotEventSuccess>\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgClearInput(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M13 11V3h-2v8H3v2h8v8h2v-8h8v-2h-8z\",\n    transform: \"rotate(45 12 12)\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgClearInput);\nexport default __webpack_public_path__ + \"static/media/clear-input.6a69fb5e.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgFile(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 22 26\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    transform: \"translate(-1)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#595959\",\n    d: \"M5 0C3.73 0 2.44 1.225 2.5 2.407V22.63c-.06 1.784 1.23 3.007 2.5 2.89h15c1.71.117 3-1.106 3-2.89V6.26L16 0H5zm0 24.556c-.298-.117-1.298-.59-1.5-1.445V2.41C3.702 2.148 4.702 1.2 5 .963h10.5v3.852c.01 1.467.903 2.315 2 1.926H22v15.89c-.262.864-.76 1.81-2 1.928H5z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18.5,\n    height: 9.148,\n    x: 1,\n    y: 12.519,\n    fill: \"#5C5C5C\",\n    rx: 2\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    fill: \"#FFF\",\n    fontSize: 5.5,\n    fontWeight: 600\n  }, /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 4.302,\n    y: 19\n  }, \"\\n        FILE\\n      \")))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFile);\nexport default __webpack_public_path__ + \"static/media/file.1a445bcf.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgCopy(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M10.667.667h-8c-.734 0-1.334.6-1.334 1.333v9.333h1.334V2h8V.667zm2 2.666H5.333C4.6 3.333 4 3.933 4 4.667V14c0 .733.6 1.333 1.333 1.333h7.334c.733 0 1.333-.6 1.333-1.333V4.667c0-.734-.6-1.334-1.333-1.334zm0 10.667H5.333V4.667h7.334V14z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.55b37fcd.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useRef } from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport { ReactComponent as CopyIcon } from '../../assets/copy.svg'\nimport JSONEditor from 'jsoneditor'\nimport '../../../node_modules/jsoneditor/dist/jsoneditor.min.css'\nimport './JsonViewer.scss'\n\nexport default function JsonViewer(props) {\n  const container = useRef(null)\n\n  const copyToClipboardJson = obj => {\n    const container = document.createElement('textarea')\n\n    container.innerHTML = JSON.stringify(obj, null, '  ')\n    document.body.appendChild(container)\n\n    container.select()\n    document.execCommand('copy')\n    document.body.removeChild(container)\n  }\n\n  useEffect(() => {\n    const editor = new JSONEditor(container.current, { mode: 'view', enableTransform: true })\n\n    if (props.json) editor.set(props.json)\n\n    const button = document.createElement('button')\n    button.className = 'copy-to-clipboard'\n    button.innerHTML = ReactDOMServer.renderToStaticMarkup(<CopyIcon height='22' width='22' />)\n    button.addEventListener('click', () => copyToClipboardJson(props.json))\n    button.setAttribute('title', 'Copy To Clipboard')\n\n    const menu = document.querySelector('.jsoneditor-menu')\n    const search = document.querySelector('.jsoneditor-menu .jsoneditor-search')\n\n    menu.insertBefore(button, search)\n\n    return () => editor.destroy()\n  }, [props.json])\n\n  return <div className='json-viewer' ref={container} />\n}\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.828 11l5.586-5.586L12 4l-8 8 8 8 1.414-1.414L7.828 13H20v-2z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.fa74ab51.svg\";\nexport { ForwardRef as ReactComponent };","import { createAction } from 'redux-actions'\nimport { ExpressEvent, ExpressMethodResponse, ExpressNotification, File, SendMessageActionPayload } from '../../types'\n\nexport const UPLOAD_FILE = 'UPLOAD_FILE'\nexport const UPLOAD_FILE_SUCCESS = 'UPLOAD_FILE_SUCCESS'\nexport const UPLOAD_FILES = 'UPLOAD_FILES'\nexport const UPLOAD_FILES_SUCCESS = 'UPLOAD_FILES_SUCCESS'\nexport const REMOVE_FILE = 'REMOVE_FILE'\nexport const REMOVE_FILE_SUCCESS = 'REMOVE_FILE_SUCCESS'\nexport const RESET_ATTACHMENTS = 'RESET_ATTACHMENTS'\nexport const SEND_EXPRESS_EVENT = 'SEND_EXPRESS_EVENT'\nexport const SEND_MESSAGE_EXPRESS_EVENT = 'SEND_MESSAGE_EXPRESS_EVENT'\nexport const SEND_EXPRESS_EVENT_SUCCESS = 'SEND_EXPRESS_EVENT_SUCCESS'\nexport const SET_EXPRESS_NOTIFICATION_SUCCESS = 'SET_NOTIFICATION_SUCCESS'\nexport const RESET_EXPRESS_NOTIFICATION_SUCCESS = 'RESET_EXPRESS_NOTIFICATION_SUCCESS'\nexport const RESET_EXPRESS_RESPONSE = 'RESET_EXPRESS_RESPONSE'\nexport const SEND_EXPRESS_READY_EVENT = 'SEND_EXPRESS_READY_EVENT'\nexport const SET_META = 'SET_META'\n\nexport const uploadFile = createAction(UPLOAD_FILE, (type: string = '') => ({ type }))\nexport const uploadFileSuccess = createAction(UPLOAD_FILE_SUCCESS, (file: File) => (file))\nexport const uploadFiles = createAction(UPLOAD_FILES, (type: string = '') => ({ type }))\nexport const uploadFilesSuccess = createAction(UPLOAD_FILES_SUCCESS, (files: File[]) => (files))\nexport const removeFile = createAction(REMOVE_FILE, (id: number) => id)\nexport const removeFileSuccess = createAction(REMOVE_FILE_SUCCESS, (id: number) => id)\nexport const resetAttachments = createAction(RESET_ATTACHMENTS, () => {})\nexport const sendExpressEvent = createAction(SEND_EXPRESS_EVENT, (expressEvent: ExpressEvent) => expressEvent)\nexport const sendMessageExpressEvent = createAction(\n  SEND_MESSAGE_EXPRESS_EVENT, (payload: SendMessageActionPayload) => payload\n)\nexport const sendExpressEventSuccess = createAction(\n  SEND_EXPRESS_EVENT_SUCCESS,\n  (response: ExpressMethodResponse | null) => response,\n)\nexport const setExpressNotificationSuccess = createAction(\n  SET_EXPRESS_NOTIFICATION_SUCCESS,\n  (notification: ExpressNotification | null) => notification,\n)\nexport const resetExpressNotificationSuccess = createAction(\n  RESET_EXPRESS_NOTIFICATION_SUCCESS,\n  () => {\n  },\n)\nexport const setMeta = createAction(\n  SET_META,\n  (meta: ExpressMethodResponse | null) => meta,\n)\nexport const resetExpressResponse = createAction(RESET_EXPRESS_RESPONSE, () => {})\nexport const sendReadyEvent = createAction(SEND_EXPRESS_READY_EVENT, () => {})\n\nexport type uploadFileActionType = ReturnType<typeof uploadFile>\nexport type uploadFileSuccessActionType = ReturnType<typeof uploadFileSuccess>\nexport type uploadFilesActionType = ReturnType<typeof uploadFiles>\nexport type uploadFilesSuccessActionType = ReturnType<typeof uploadFilesSuccess>\nexport type removeFileActionType = ReturnType<typeof removeFile>\nexport type removeFileSuccessActionType = ReturnType<typeof removeFileSuccess>\nexport type sendExpressEventActionType = ReturnType<typeof sendExpressEvent>\nexport type sendMessageExpressEventActionType = ReturnType<typeof sendMessageExpressEvent>\nexport type sendExpressEventSuccessActionType = ReturnType<typeof sendExpressEventSuccess>\nexport type setExpressNotificationSuccessActionType = ReturnType<typeof setExpressNotificationSuccess>\nexport type setMetaActionType = ReturnType<typeof setMeta>\n","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getAttachments = createSelector(\n  [(state: AppState) => state.client.attachments],\n  features => features,\n)\n\nexport const getExpressResponse = createSelector(\n  [(state: AppState) => state.client.response],\n  response => response,\n)\n\nexport const getMeta = createSelector(\n  [(state: AppState) => state.client.meta],\n  meta => meta,\n)\n\nexport const getExpressNotifications = createSelector(\n  [(state: AppState) => state.client.notifications],\n  notificaions => notificaions,\n)\n","import { Link } from 'react-router-dom'\nimport { ReactComponent as ArrowLeft } from '../../../src/assets/arrow-left.svg'\nimport './FeaturePageHeader.scss'\n\nexport default function FeaturePageHeader({ name }) {\n  return (\n    <div className='feature-page__header'>\n      <Link className='btn--arrow-left' to='/'>\n        <ArrowLeft className='icon--arrow-left' height={24} width={24} />\n      </Link>\n      <div className='feature-page__info'>\n        <span className='feature-page__title'>{name} method</span>\n      </div>\n    </div>\n  )\n}\n","import {\n  BotFeature,\n  BotFeatureMethod,\n  ExpressFeature,\n  ExpressFeatureMethod,\n  Input,\n  InputId,\n  InputLabel,\n  InputType,\n} from '../../types'\nimport './FeaturePage.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { INPUT_TYPE } from '../../constants'\nimport { useFormik } from 'formik'\nimport { FormValues, getFormInitialValues } from '../../helpers'\nimport { getFeatureBotResponse } from '../../redux/selectors/bot'\nimport { resetFeatures, sendFeatureBotEvent, sendFeatureBotEventSuccess } from '../../redux/actions/bot'\nimport { useEffect, useMemo, useState } from 'react'\nimport { ReactComponent as PlusIcon } from '../../assets/plus.svg'\nimport { ReactComponent as RemoveIcon } from '../../assets/clear-input.svg'\nimport { ReactComponent as FileIcon } from '../../assets/file.svg'\nimport JsonViewer from '../json-editor/JsonViewer'\nimport classnames from 'classnames'\nimport {\n  removeFileSuccess,\n  resetAttachments,\n  resetExpressResponse,\n  sendExpressEvent,\n  sendExpressEventSuccess,\n  sendMessageExpressEvent,\n  uploadFile,\n  uploadFiles,\n} from '../../redux/actions/client'\nimport { getAttachments, getExpressResponse } from '../../redux/selectors/client'\nimport { ReactMarkdown } from 'react-markdown/lib/react-markdown'\nimport FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport {\n  Bridge as bridge,\n  getChats,\n  openGroupChat,\n  openClientSettings,\n  searchCorporatePhonebook,\n} from '@unlimited/smartapp-sdk'\n\nexport default function FeaturePage({ name, method, uiElements = [] }: BotFeature | ExpressFeature) {\n  const dispatch = useDispatch()\n  const botResponse = useSelector(getFeatureBotResponse)\n  const expressResponse = useSelector(getExpressResponse)\n  const attachments = useSelector(getAttachments)\n\n  const [inputs, setInputs] = useState<Input[]>([])\n  const [inputError, setInputError] = useState('')\n  const [isJSONViewer, setIsJSONViewer] = useState(false)\n\n  const isAllowNewInputs = method === BotFeatureMethod.SEARCH_USERS\n  const isFilesMethod = [BotFeatureMethod.ECHO_FILE, BotFeatureMethod.ECHO_FILES].includes(method as BotFeatureMethod)\n  const isUsersMethod = BotFeatureMethod.SEARCH_USERS === method\n  const isExpressMethod = Object.values(ExpressFeatureMethod).includes(method as ExpressFeatureMethod)\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(window.navigator.userAgent)\n\n  const handleClickPlus = () => {\n    const last = inputs[inputs.length - 1]\n    const { id } = last\n    const next: Input = {\n      ...last,\n      id: id.includes(InputId.HUIDS) ? `${id}${inputs.length}` : id,\n    }\n\n    setInputs(inputs => [...inputs, next])\n  }\n\n  const handleFilesSubmit = () => {\n    if (attachments) {\n      const botFeatureMethod = method as BotFeatureMethod\n\n      dispatch(\n        sendFeatureBotEvent({\n          method: botFeatureMethod,\n          params: {},\n          files: attachments,\n        })\n      )\n    }\n  }\n\n  const handleFormSubmitForExpressMethod = async (formValues: FormValues) => {\n    switch (method) {\n      case ExpressFeatureMethod.SEND_MESSAGE:\n        if (!filterFormValues(formValues).length) return\n\n        const { userHuid, groupChatId, message } = formValues\n        const action = () =>\n          dispatch(\n            sendMessageExpressEvent({\n              userHuid,\n              groupChatId,\n              messageBody: message,\n              messageMeta: {},\n            })\n          )\n\n        if (!isMobile) {\n          bridge?.disableRenameParams()\n          action()\n          bridge?.enableRenameParams()\n        } else {\n          action()\n        }\n        break\n      case ExpressFeatureMethod.OPEN_CLIENT_SETTINGS:\n        openClientSettings()\n        break\n      case ExpressFeatureMethod.GET_CHATS:\n        const chats = await getChats({ filter: formValues?.filter || null })\n        dispatch(sendExpressEventSuccess(chats))\n        break\n      case ExpressFeatureMethod.OPEN_GROUP_CHAT: {\n        if (!filterFormValues(formValues).length) return\n\n        const action = () =>\n          openGroupChat({ groupChatId: formValues?.groupChatId })\n\n        if (!isMobile) {\n          bridge?.disableRenameParams()\n          action()\n          bridge?.enableRenameParams()\n        } else {\n          action()\n        }\n        break\n      }\n      case ExpressFeatureMethod.SEARCH_CORPORATE_PHONEBOOK:\n        const phonebook = await searchCorporatePhonebook({ filter: formValues?.filter || null })\n        dispatch(sendExpressEventSuccess(phonebook))\n        break\n      default:\n        if (!filterFormValues(formValues).length) return\n\n        const event = {\n          method: method as ExpressFeatureMethod,\n          params: formValues,\n        }\n        const sendExpressEventAction = () => dispatch(sendExpressEvent(event))\n        if (!isMobile) {\n          bridge?.disableRenameParams()\n          sendExpressEventAction()\n          bridge?.enableRenameParams()\n        } else {\n          sendExpressEventAction()\n        }\n    }\n  }\n\n  const filterFormValues = useMemo(\n    () => (formValues: FormValues) => Object.values(formValues).filter(value => value),\n    []\n  )\n\n  const handleFormSubmitForBotMethod = (formValues: FormValues) => {\n    const values = filterFormValues(formValues)\n    if (!values.length) return\n\n    const event = {\n      method: method as BotFeatureMethod,\n      params: isUsersMethod ? { huids: values } : formValues,\n    }\n\n    dispatch(sendFeatureBotEvent(event))\n  }\n\n  const handleFormSubmit = (formValues: FormValues) => {\n    if (isExpressMethod) {\n      handleFormSubmitForExpressMethod(formValues)\n    } else {\n      handleFormSubmitForBotMethod(formValues)\n    }\n  }\n\n  const handleUploadFilesClick = () => {\n    if (method === BotFeatureMethod.ECHO_FILE) {\n      dispatch(uploadFile())\n    } else if (method === BotFeatureMethod.ECHO_FILES) {\n      dispatch(uploadFiles())\n    }\n  }\n\n  const handleRemoveFile = (fileId: number) => {\n    dispatch(removeFileSuccess(fileId))\n    if (attachments?.length === 1) dispatch(sendFeatureBotEventSuccess(null))\n  }\n\n  const toggleIsJSONViewer = () => setIsJSONViewer(!isJSONViewer)\n\n  const formik = useFormik({\n    initialValues: getFormInitialValues(inputs),\n    onSubmit: handleFormSubmit,\n  })\n\n  const getIsSubmitButtonDisabled = () => {\n    if (method === ExpressFeatureMethod.GET_CHATS) return false\n    return isFilesMethod ? !attachments?.length : !Object.values(formik.values).filter(value => value).length\n  }\n  useEffect(() => {\n    const inputs: Input[] = uiElements.map((input, index) => ({\n      ...input,\n      id: input.id.includes(InputId.HUIDS) ? `${input.id}${index}` : input.id,\n    }))\n    setInputs(inputs)\n    return () => {\n      dispatch(resetFeatures())\n      dispatch(resetAttachments())\n      dispatch(resetExpressResponse())\n    }\n  }, [uiElements, dispatch])\n\n  return (\n    <>\n      <div className=\"feature-page\">\n        <FeaturePageHeader name={name} />\n        {isFilesMethod ? (\n          <div className=\"feature-page__form\">\n            <span className=\"feature-page__title\">\n              {method === BotFeatureMethod.ECHO_FILE ? InputLabel.FILE : InputLabel.FILES}\n            </span>\n            <button className=\"btn--attach\" onClick={handleUploadFilesClick}>\n              {method === BotFeatureMethod.ECHO_FILE ? 'Attach file' : 'Attach files'}\n            </button>\n            {!!attachments?.length && (\n              <div className=\"attachments\">\n                {attachments.map(attachment => (\n                  <span className=\"attachments__item\" key={attachment.fileId}>\n                    <span>{attachment.fileName}</span>\n                    <RemoveIcon\n                      width={20}\n                      height={20}\n                      className=\"btn--remove-attachment\"\n                      onClick={() => handleRemoveFile(attachment.fileId)}\n                    />\n                  </span>\n                ))}\n              </div>\n            )}\n            <div className=\"form-buttons\">\n              <button\n                className={classnames({\n                  'btn--submit': true,\n                  'btn--submit-disabled': getIsSubmitButtonDisabled(),\n                })}\n                onClick={handleFilesSubmit}\n                disabled={getIsSubmitButtonDisabled()}\n                type=\"button\"\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        ) : (\n          !!inputs?.length && (\n            <form className=\"feature-page__form\" onSubmit={formik.handleSubmit}>\n              {inputs.map(({ id, type, label }, index) => {\n                const inputType = INPUT_TYPE[type]\n\n                const getIsInputError = () => {\n                  const isUuid = (uuid: string) => /[0-9a-fA-F-]{36}/.test(uuid)\n                  const isPhone = (phone: string) =>\n                    /(^8|7|\\+7)((\\d{10})|(\\s\\(\\d{3}\\)\\s\\d{3}\\s\\d{2}\\s\\d{2}))/.test(phone)\n                  const isNotEmpty = formik.values[id]\n\n                  if (isUsersMethod || type === InputType.UUID) {\n                    return isNotEmpty && !isUuid(formik.values[id])\n                  } else if (id === InputId.PHONE) {\n                    return isNotEmpty && !isPhone(formik.values[id])\n                  }\n                }\n                const isShowLabel = isUsersMethod ? index === 0 : true\n\n                return (\n                  <div key={id}>\n                    {isShowLabel && <span className=\"feature-page__title\">{label}</span>}\n                    <input\n                      className={classnames({\n                        input: true,\n                        'input--error': getIsInputError(),\n                      })}\n                      onChange={formik.handleChange}\n                      value={formik.values[id] || ''}\n                      type={inputType}\n                      multiple={id === InputId.FILES}\n                      id={id}\n                      min={0}\n                    />\n                    {inputType === INPUT_TYPE.INPUT_TEXT && formik.values[id] && (\n                      <RemoveIcon\n                        className=\"btn--clear-input\"\n                        onClick={() => {\n                          formik.setFieldValue(id, '')\n                          inputError && setInputError('')\n                        }}\n                        height={20}\n                        width={20}\n                      />\n                    )}\n                  </div>\n                )\n              })}\n              <div className=\"form-buttons\">\n                <button\n                  className={classnames({\n                    'btn--submit': true,\n                    'btn--submit-disabled': getIsSubmitButtonDisabled(),\n                  })}\n                  disabled={getIsSubmitButtonDisabled()}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n                {isAllowNewInputs && (\n                  <PlusIcon\n                    title=\"Add new input\"\n                    className=\"btn--plus\"\n                    onClick={handleClickPlus}\n                    height={24}\n                    width={24}\n                  />\n                )}\n              </div>\n            </form>\n          )\n        )}\n      </div>\n      {botResponse && (\n        <>\n          <div className=\"response-markdown\">\n            <ReactMarkdown>\n              {method === BotFeatureMethod.ECHO ?\n                ('text: ' + ((botResponse?.payload?.result) as any).text?.replaceAll?.('\\n', '\\n\\r')) ||\n                (botResponse?.payload?.result?.replaceAll?.('\\n', '\\n\\r')) + '\\n\\r' +\n                (((botResponse?.payload?.result) as any).textLength &&\n                'textLength: ' + ((botResponse?.payload?.result) as any).textLength) :\n                (botResponse?.payload?.result?.replaceAll?.('\\n', '\\n\\r'))\n              }\n            </ReactMarkdown>\n          </div>\n          {method === BotFeatureMethod.ECHO_FILES && (\n            <div className=\"response-files\">\n              Files:\n              {botResponse?.files?.map(() => (\n                <FileIcon className=\"response-files__file\" height={20} width={20} />\n              ))}\n            </div>\n          )}\n          {botResponse && (\n            <div>\n              <div className=\"response-markdown-form\">\n                <input\n                  checked={isJSONViewer}\n                  className=\"form-toggler__input\"\n                  id=\"form-toggler\"\n                  type=\"checkbox\"\n                  onChange={toggleIsJSONViewer}\n                />\n                <span className=\"form-toggler\" onClick={toggleIsJSONViewer}>\n                  Show JSON Viewer\n                </span>\n              </div>\n              {isJSONViewer && (\n                <div className=\"response-json\">\n                  <JsonViewer height={24} json={botResponse} />\n                </div>\n              )}\n            </div>\n          )}\n        </>\n      )}\n      {expressResponse && <div className=\"response-express\">{JSON.stringify(expressResponse?.payload, null, 2)}</div>}\n    </>\n  )\n}\n","var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgBotxIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 12 12\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.379 7.017v2.775h-.55A.816.816 0 0 1 0 8.989V7.427c0-.443.371-.803.829-.803h.566c-.01.13-.016.261-.016.393zm9.792-.393c.458 0 .829.36.829.803V8.99a.816.816 0 0 1-.829.803h-.55V7.017c0-.132-.006-.263-.016-.393h.566zM10.047 9.873v-2.82c0-.132-.006-.263-.018-.393C9.857 4.651 8.377 3.043 6.5 2.8h-.997c-1.88.244-3.36 1.853-3.532 3.863-.01.129-.017.26-.017.392v4.754h8.094V9.873zm-5.998-.66c-.608 0-1.101-.522-1.101-1.167 0-.644.493-1.166 1.1-1.166.609 0 1.102.522 1.102 1.166 0 .645-.493 1.167-1.101 1.167zm2.96-1.167c0-.644.493-1.166 1.1-1.166.609 0 1.102.522 1.102 1.166 0 .645-.493 1.167-1.101 1.167s-1.101-.522-1.101-1.167z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBotxIcon);\nexport default __webpack_public_path__ + \"static/media/botx-icon.cf9274ad.svg\";\nexport { ForwardRef as ReactComponent };","import { createSelector } from 'reselect'\nimport { AppState } from '../../types'\n\nexport const getTopLoader = createSelector(\n  [(state: AppState) => state.ui.topLoader],\n  topLoader => topLoader\n)\n\nexport const getMainLoader = createSelector(\n  [(state: AppState) => state.ui.mainLoader],\n  mainLoader => mainLoader\n)\n\nexport const getRedirectPath = createSelector(\n  [(state: AppState) => state.ui.redirectPath],\n  redirectPath => redirectPath\n)\n","import React, { useEffect, useState, useRef } from 'react'\nimport classnames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport './TopLoader.scss'\nimport { getTopLoader } from '../../redux/selectors/ui'\n\nexport default function TopLoader() {\n  const topLoader = useSelector(getTopLoader)\n\n  const [start, setStart] = useState(false)\n  const [stop, setStop] = useState(false)\n  const [finish, setFinish] = useState(false)\n\n  const stopTimeout = useRef<NodeJS.Timeout | null>(null)\n  const finishTimeout = useRef<NodeJS.Timeout | null>(null)\n\n  useEffect(() => {\n    if (topLoader && !start) {\n      setStart(true)\n    }\n\n    if (!topLoader && start) {\n      setStart(false)\n      setStop(true)\n\n      stopTimeout.current = setTimeout(() => {\n        setFinish(true)\n\n        finishTimeout.current = setTimeout(() => {\n          setStop(false)\n          setFinish(false)\n        }, 100)\n      }, 200)\n    }\n  }, [topLoader, start])\n\n  useEffect(() => {\n    return () => {\n      if (stopTimeout.current) clearTimeout(stopTimeout.current)\n      if (finishTimeout.current) clearTimeout(finishTimeout.current)\n    }\n  }, [])\n\n  return (\n    <div className={classnames({ 'top-loader': true, 'top-loader--enabled': start && !finish })}>\n      <div\n        className={classnames({\n          'top-loader__bar': true,\n          'top-loader__bar--start': start,\n          'top-loader__bar--stop': stop,\n          'top-loader__bar--finish': finish,\n        })}\n      />\n    </div>\n  )\n}\n","import FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport { EXPRESS_NOTIFICATION_FEATURE } from '../../constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getExpressNotifications } from '../../redux/selectors/client'\nimport './ExpressNotifications.scss'\nimport { resetExpressNotificationSuccess } from '../../redux/actions/client'\n\nexport default function ExpressNotifications() {\n  const dispatch = useDispatch()\n  const expressNotifications = useSelector(getExpressNotifications)\n  const handleClear = () => {\n    dispatch(resetExpressNotificationSuccess())\n  }\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={EXPRESS_NOTIFICATION_FEATURE.name} />\n        <div className='feature-page__notifications'>\n          {!!expressNotifications.length ? (\n            <>\n              <div\n                className='notifications__clear-button'\n                onClick={handleClear}\n                title='Clear notifications'\n              >\n                Clear\n              </div>\n              {expressNotifications.map((item, i) => (\n                <div className='notifications__item' key={i}>\n                  {JSON.stringify(item?.data, null, 2)}\n                </div>\n              ))}\n            </>\n          ) : (\n            <div className='feature-page__notifications-placeholder'>\n              New notifications will appear here...\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  )\n}\n","import { createAction } from 'redux-actions'\n\nexport const SET_TOP_LOADER = 'SET_TOP_LOADER'\nexport const SET_MAIN_LOADER = 'SET_MAIN_LOADER'\nexport const SET_REDIRECT_PATH = 'SET_REDIRECT_PATH'\n\nexport const setTopLoader = createAction(SET_TOP_LOADER, (topLoader: boolean) => topLoader)\nexport const setMainLoader = createAction(SET_MAIN_LOADER, (mainLoader: boolean) => mainLoader)\nexport const setRedirectPath = createAction(SET_REDIRECT_PATH, (redirectPath: string) => redirectPath)\n\nexport type setTopLoaderActionType = ReturnType<typeof setTopLoader>\nexport type setMainLoaderActionType = ReturnType<typeof setMainLoader>\nexport type setRedirectPathActionType = ReturnType<typeof setRedirectPath>\n","import FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport { OPEN_SMART_APP_META_FEATURE } from '../../constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\nimport { setRedirectPath } from '../../redux/actions/ui'\nimport { getMeta } from '../../redux/selectors/client'\nimport { setMeta } from '../../redux/actions/client'\n\nexport default function MetaPage() {\n  const dispatch = useDispatch()\n  const meta = useSelector(getMeta)\n\n  useEffect(() => {\n    return () => {\n      dispatch(setRedirectPath(''))\n      dispatch(setMeta(null))\n    }\n  }, [dispatch])\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={OPEN_SMART_APP_META_FEATURE.name} />\n        {meta && (\n          <div className='response-express'>\n            {JSON.stringify(meta.payload, null, 2)}\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n","import { createBrowserHistory } from 'history'\n\n// Create history singleton\nexport const history = createBrowserHistory()\n","import { useEffect, useRef } from 'react'\nimport { Html5QrcodeScanner } from 'html5-qrcode'\nimport './ScanQR.scss'\n\nexport default function ScanQR({\n  onScanSuccess,\n  onScanFailure,\n}: {\n  onScanSuccess: (text: string, result: any) => void\n  onScanFailure: (error: string) => void\n}) {\n  const config = useRef<any>({\n    fps: 10,\n    qrbox: 250,\n    disableFlip: true,\n  })\n\n  useEffect(() => {\n    const html5QrcodeScanner = new Html5QrcodeScanner('reader', config.current, false)\n    html5QrcodeScanner.render(onScanSuccess, onScanFailure)\n\n    return () => {}\n    // eslint-disable-next-line\n  }, [])\n\n  return <div id=\"reader\" />\n}\n","import FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport { SCAN_QR_FEATURE } from '../../constants'\nimport ScanQR from '../scan-qr/ScanQR'\nimport { useState } from 'react'\n\nexport function ScanQRPage() {\n  const [decodedText, setDecodedText] = useState(null)\n  const [decodedResult, setDecodedResult] = useState(null)\n  const [error, setError] = useState(null)\n\n  const handleOnScanSuccess = (text: string, result: any) => {\n    setDecodedText(text)\n    setDecodedResult(result)\n    setError(null)\n    console.log(`Code matched: ${text}`, result)\n  }\n\n  const handleOnScanFailure = err => {\n    setError(err)\n    console.warn(`Code scan error: ${err}`)\n  }\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={SCAN_QR_FEATURE.name} />\n      <ScanQR onScanSuccess={handleOnScanSuccess} onScanFailure={handleOnScanFailure} />\n      {decodedText && (\n        <>\n          <p>Decoded text:</p>\n          <div>{decodedText}</div>\n        </>\n      )}\n      {decodedResult && (\n        <>\n          <p>Decoded result:</p>\n          <div>{JSON.stringify(decodedResult)}</div>\n        </>\n      )}\n      {error && (\n        <>\n          <p>Error:</p>\n          <div>{error}</div>\n        </>\n      )}\n    </div>\n  )\n}\n","import FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport { OPEN_FILE_FEATURE } from '../../constants'\nimport classnames from \"classnames\"\nimport { useState } from \"react\"\nimport { Bridge as bridge } from \"@unlimited/smartapp-sdk\"\n\nexport default function OpenFile() {\n  const [inputValue, setInputValue] = useState('')\n  const handleClick = () => {\n    if (!inputValue) return\n    console.error({inputValue: JSON.parse(inputValue)})\n\n    bridge?.sendClientEvent({\n      method: OPEN_FILE_FEATURE.method,\n      params: JSON.parse(inputValue),\n    })\n  }\n\n  return (\n    <div className=\"feature-page\">\n      <FeaturePageHeader name={OPEN_FILE_FEATURE.name} />\n      <input\n        className={classnames({\n          input: true,\n        })}\n        onChange={e => setInputValue(e.target.value)}\n        value={inputValue}\n        type={'text'}\n      />\n      <div className='form-buttons'>\n        <button\n          className={classnames({\n            'btn--submit': true,\n            'btn--submit-disabled': !inputValue,\n          })}\n          disabled={!inputValue}\n          type=\"submit\"\n          onClick={handleClick}\n        >\n          Submit\n        </button>\n      </div>\n    </div>\n  )\n}\n","import FeaturePageHeader from '../feature-page-header/FeaturePageHeader'\nimport { OPEN_WEB_PAGE_FEATURE } from '../../constants'\nimport { useState } from 'react'\nimport './OpenWebPage.scss'\n\nexport default function OpenWebPage() {\n  const [link, setLink] = useState('https://www.tutorialrepublic.com/')\n\n\n  const handleChange = (event: any) => {\n    const { value } = event.target\n    if (value) setLink(value)\n  }\n\n  return (\n    <>\n      <div className='feature-page'>\n        <FeaturePageHeader name={OPEN_WEB_PAGE_FEATURE.name} />\n        <div className='open-web-page'>\n          <input\n            className='open-web-page__input'\n            type='url'\n            defaultValue={link}\n            onChange={handleChange}\n          />\n          <a className='open-web-page__link' href={link}>\n            {link}\n          </a>\n        </div>\n      </div>\n    </>\n  )\n}\n","import './FeatureSmartapp.scss'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFeaturesMenu } from '../../redux/selectors/bot'\nimport { Link, Route, Switch } from 'react-router-dom'\nimport FeaturePage from '../feature-page/FeaturePage'\nimport { loadFeatures } from '../../redux/actions/bot'\nimport TopLoader from '../top-loader/TopLoader'\nimport { ReactComponent as BotxIcon } from '../../assets/botx-icon.svg'\nimport {\n  EXPRESS_FEATURES,\n  EXPRESS_NOTIFICATION_FEATURE,\n  OPEN_FILE_FEATURE,\n  OPEN_SMART_APP_META_FEATURE, OPEN_WEB_PAGE_FEATURE,\n  SCAN_QR_FEATURE,\n} from '../../constants'\nimport ExpressNotifications from '../express-notifications/ExpressNotifications'\nimport MetaPage from '../meta-page/MetaPage'\nimport { getRedirectPath } from '../../redux/selectors/ui'\nimport { history } from '../../redux/router'\nimport { ScanQRPage } from '../scan-qr-page/ScanQRPage'\nimport OpenFile from '../open-file/OpenFile'\nimport { ExpressFeatureMethod } from '../../types'\nimport { openClientSettings, useQuery } from '@unlimited/smartapp-sdk'\nimport OpenWebPage from '../open-web-page/OpenWebPage'\n\nexport default function FeatureSmartapp() {\n  const dispatch = useDispatch()\n  const features = useSelector(getFeaturesMenu)\n  const redirectPath = useSelector(getRedirectPath)\n  const { platform } = useQuery()\n\n  useEffect(() => {\n    if (!features) dispatch(loadFeatures())\n  }, [dispatch, features])\n\n  useEffect(() => {\n    if (redirectPath) history.push(redirectPath)\n  }, [dispatch, redirectPath])\n\n  return (\n    <div className=\"feature-smartapp\">\n      <div className=\"header\">\n        <span className=\"header__content\">\n          <BotxIcon className=\"header__icon\" height={20} width={20} />\n          <span className=\"header__text\">Feature Smartapp</span>\n        </span>\n      </div>\n      <TopLoader />\n      <section className=\"feature-smartapp__menu\">\n        <Switch>\n          {features?.map(item => (\n            <Route key={`${item.method}-route`} path={`/${item.method}`}>\n              <FeaturePage {...item} />\n            </Route>\n          ))}\n          {EXPRESS_FEATURES.map(item => (\n            <Route key={`${item.method}-route`} path={`/${item.method}`}>\n              <FeaturePage {...item} />\n            </Route>\n          ))}\n          <Route key={`${OPEN_SMART_APP_META_FEATURE.method}-route`} path={`/${OPEN_SMART_APP_META_FEATURE.method}`}>\n            <MetaPage />\n          </Route>\n          <Route key={`${EXPRESS_NOTIFICATION_FEATURE.method}-route`} path={`/${EXPRESS_NOTIFICATION_FEATURE.method}`}>\n            <ExpressNotifications />\n          </Route>\n          <Route key={`${SCAN_QR_FEATURE.method}-route`} path={`/${SCAN_QR_FEATURE.method}`}>\n            <ScanQRPage />\n          </Route>\n          <Route key={`${OPEN_FILE_FEATURE.method}-route`} path={`/${OPEN_FILE_FEATURE.method}`}>\n            <OpenFile />\n          </Route>\n          <Route key={`${OPEN_WEB_PAGE_FEATURE.method}-route`} path={`/${OPEN_WEB_PAGE_FEATURE.method}`}>\n            <OpenWebPage />\n          </Route>\n          <Route path={'/'}>\n            {features?.map(item => (\n              <Link className=\"menu-item\" key={`${item.method}-link`} to={`/${item.method}`}>\n                {item.name}\n              </Link>\n            ))}\n            {EXPRESS_FEATURES.map(item => {\n              if (item.method === ExpressFeatureMethod.OPEN_CLIENT_SETTINGS) {\n                return (\n                  <div className=\"menu-item\" onClick={() => {\n                    if (platform !== 'web') {\n                      openClientSettings()\n                    } else {\n                      alert('Feature is unavailable on web client')\n                    }\n                  }}>\n                    {item.name}\n                  </div>\n                )\n              } else {\n                return (\n                  <Link className=\"menu-item\" key={`${item.method}-link`} to={`/${item.method}`}>\n                    {item.name}\n                  </Link>)}\n              }\n            )}\n            <Link\n                className=\"menu-item\"\n                key={`${EXPRESS_NOTIFICATION_FEATURE.method}-link`}\n                to={`/${EXPRESS_NOTIFICATION_FEATURE.method}`}\n              >\n                {EXPRESS_NOTIFICATION_FEATURE.name}\n            </Link>\n            <Link\n              className=\"menu-item\"\n              key={`${SCAN_QR_FEATURE.method}-link`}\n              to={`/${SCAN_QR_FEATURE.method}`}\n            >\n                {SCAN_QR_FEATURE.name}\n            </Link>\n            <Link\n              className=\"menu-item\"\n              key={`${OPEN_WEB_PAGE_FEATURE.method}-link`}\n              to={`/${OPEN_WEB_PAGE_FEATURE.method}`}\n            >\n              {OPEN_WEB_PAGE_FEATURE.name}\n            </Link>\n          </Route>\n        </Switch>\n      </section>\n    </div>\n  )\n}\n","import { BotMethodResponse } from '../../types'\nimport './Notifier.scss'\n\nexport default function Notifier({ result, status }: BotMethodResponse['payload']) {\n  return (\n    <div className={'notifier'}>\n      <span className={'notifier__text'}>{result}</span>\n      <span className={'notifier__text'}>Status: {status}</span>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport MainLoader from './main-loader/MainLoader'\nimport FeatureSmartapp from './feature-smartapp/FeatureSmartapp'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BotMethodResponse, EventType, ExpressNotification } from '../types'\nimport { sendReadyEvent, setExpressNotificationSuccess } from '../redux/actions/client'\nimport Notifier from './notifier/Notifier'\nimport { getMainLoader } from '../redux/selectors/ui'\n\nexport default function Main() {\n  const dispatch = useDispatch()\n  const [load, setLoad] = useState(true)\n  const isMainLoader = useSelector(getMainLoader)\n  const [notifier, setNotifier] = useState<BotMethodResponse['payload'] | null>(null)\n\n  useEffect(() => {\n    if (load) {\n      setLoad(false)\n      dispatch(sendReadyEvent())\n    }\n\n    bridge?.onReceive(({ type, payload }) => {\n      if (typeof payload !== 'object') return\n\n      switch (type) {\n        case EventType.SMARTAPP_RPC: {\n          setNotifier(payload as BotMethodResponse['payload'])\n          setTimeout(() => setNotifier(null), 3000)\n          break\n        }\n        case EventType.NOTIFICATION: {\n          dispatch(setExpressNotificationSuccess(payload as ExpressNotification))\n          break\n        }\n      }\n    })\n  }, [dispatch, load])\n\n  return (\n    <>\n      {isMainLoader && <MainLoader />}\n      <FeatureSmartapp />\n      {notifier && <Notifier {...notifier} />}\n    </>\n  )\n}\n","import { handleActions } from 'redux-actions'\nimport { UIState } from '../../types'\nimport {\n  SET_MAIN_LOADER,\n  SET_REDIRECT_PATH,\n  SET_TOP_LOADER,\n  setMainLoaderActionType, setRedirectPathActionType,\n  setTopLoaderActionType,\n} from '../actions/ui'\n\nconst initialState: UIState = {\n  topLoader: false,\n  mainLoader: false,\n  redirectPath: '',\n}\n\nconst reducers = {\n  [SET_TOP_LOADER]: (\n    state: UIState, { payload: topLoader }: setTopLoaderActionType\n  ): UIState => ({\n    ...state, topLoader\n  }),\n  [SET_MAIN_LOADER]: (\n    state: UIState, { payload: mainLoader }: setMainLoaderActionType\n  ): UIState => ({\n    ...state, mainLoader\n  }),\n  [SET_REDIRECT_PATH]: (\n    state: UIState, { payload: redirectPath }: setRedirectPathActionType\n  ): UIState => ({\n    ...state, redirectPath\n  }),\n}\n\nexport const ui = handleActions<UIState, any>(reducers, initialState)\n","import { handleActions } from 'redux-actions'\nimport { BotState } from '../../types'\nimport {\n  LOAD_FEATURES_SUCCESS,\n  loadFeaturesSuccessActionType,\n  RESET_RESPONSE,\n  SEND_FEATURE_BOT_EVENT_SUCCESS,\n} from '../actions/bot'\n\nconst initialState: BotState = {\n  features: null,\n  response: null,\n  notifications: null,\n}\n\nconst reducers = {\n  [LOAD_FEATURES_SUCCESS]: (\n    state: BotState, { payload: features }: loadFeaturesSuccessActionType,\n  ): BotState => ({\n    ...state,\n    features,\n  }),\n  [SEND_FEATURE_BOT_EVENT_SUCCESS]: (\n    state: BotState,\n    { payload: response }: any\n  ): BotState => ({\n    ...state,\n    response,\n  }),\n  [RESET_RESPONSE]: (state: BotState): BotState => ({\n    ...state,\n    response: null,\n  }),\n}\n\nexport const bot = handleActions(reducers, initialState)\n","import { handleActions } from 'redux-actions'\nimport { ClientState } from '../../types'\n\nimport {\n  REMOVE_FILE_SUCCESS,\n  removeFileSuccessActionType,\n  RESET_ATTACHMENTS, RESET_EXPRESS_NOTIFICATION_SUCCESS, RESET_EXPRESS_RESPONSE,\n  SEND_EXPRESS_EVENT_SUCCESS,\n  sendExpressEventSuccessActionType,\n  SET_EXPRESS_NOTIFICATION_SUCCESS, SET_META, setExpressNotificationSuccessActionType, setMetaActionType,\n  UPLOAD_FILE_SUCCESS,\n  UPLOAD_FILES_SUCCESS,\n  uploadFilesSuccessActionType,\n  uploadFileSuccessActionType,\n} from '../actions/client'\n\nconst initialState: ClientState = {\n  attachments: null,\n  response: null,\n  meta: null,\n  notifications: [],\n}\n\nconst reducers = {\n  [UPLOAD_FILE_SUCCESS]: (\n    state: ClientState, { payload: file }: uploadFileSuccessActionType,\n  ): ClientState => ({\n    ...state,\n    attachments: [file],\n  }),\n  [UPLOAD_FILES_SUCCESS]: (\n    state: ClientState,\n    { payload: files }: uploadFilesSuccessActionType,\n  ): ClientState => ({\n    ...state,\n    attachments: [...files],\n  }),\n  [REMOVE_FILE_SUCCESS]: (\n    state: ClientState, { payload: id }: removeFileSuccessActionType,\n  ): ClientState => ({\n    ...state,\n    attachments: state.attachments.filter(attachment => attachment.fileId !== id),\n  }),\n  [RESET_ATTACHMENTS]: (\n    state: ClientState,\n  ): ClientState => ({\n    ...state,\n    attachments: null,\n  }),\n  [SET_EXPRESS_NOTIFICATION_SUCCESS]: (\n    state: ClientState, { payload }: setExpressNotificationSuccessActionType,\n  ): ClientState => ({\n    ...state,\n    notifications: [payload, ...state.notifications],\n  }),\n  [RESET_EXPRESS_NOTIFICATION_SUCCESS]: (\n    state: ClientState\n  ): ClientState => ({\n    ...state,\n    notifications: [],\n  }),\n  [SEND_EXPRESS_EVENT_SUCCESS]: (\n    state: ClientState, response: sendExpressEventSuccessActionType\n  ): ClientState => ({\n    ...state,\n    response\n  }),\n  [RESET_EXPRESS_RESPONSE]: (state: ClientState): ClientState => ({\n    ...state,\n    response: null,\n  }),\n  [SET_META]: (\n    state: ClientState, { payload }: setMetaActionType\n  ): ClientState => ({\n    ...state,\n    meta: payload,\n  }),\n}\n\nexport const client = handleActions<ClientState, any>(reducers, initialState)\n","import { connectRouter } from 'connected-react-router'\nimport { combineReducers } from 'redux'\nimport { history } from '../router'\nimport { ui } from './ui'\nimport { AppState } from '../../types'\nimport { bot } from './bot'\nimport { client } from './client'\n\nexport const rootReducer = combineReducers<AppState>({\n  ui,\n  bot,\n  client,\n  router: connectRouter(history),\n})\n","import { put } from 'redux-saga/effects'\nimport { setMainLoader } from '../actions/ui'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport { BotFeaturesResponse } from '../../types'\nimport { MENU_EVENT } from '../../constants'\nimport { loadFeaturesSuccess } from '../actions/bot'\n\nexport function* loadFeaturesSaga() {\n  try {\n    yield put(setMainLoader(true))\n\n    const response: BotFeaturesResponse = yield bridge.sendBotEvent(MENU_EVENT)\n\n    if (response) yield put(loadFeaturesSuccess(response.payload.result))\n  } catch (e: any) {\n    console.error('loadFeaturesSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n","import { put } from 'redux-saga/effects'\nimport { setMainLoader } from '../actions/ui'\nimport { BotMethodResponse } from '../../types'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk'\nimport { sendFeatureBotEventSuccess } from '../actions/bot'\n\nexport function* sendFeatureBotEventSaga(action) {\n  try {\n    yield put(setMainLoader(true))\n\n    const response: BotMethodResponse = yield bridge?.sendBotEvent(action.payload)\n\n    yield put(sendFeatureBotEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendFeatureBotEventSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n","import { Bridge as bridge, ready, sendMessage } from '@unlimited/smartapp-sdk'\nimport { ClientEventMethod, ExpressMethodResponse, File } from '../../types'\nimport { put } from 'redux-saga/effects'\nimport {\n  sendExpressEventActionType,\n  sendExpressEventSuccess,\n  sendMessageExpressEventActionType,\n  setMeta,\n  uploadFileActionType,\n  uploadFilesActionType,\n  uploadFilesSuccess,\n  uploadFileSuccess,\n} from '../actions/client'\nimport { setRedirectPath, setTopLoader } from '../actions/ui'\nimport { OPEN_SMART_APP_META_FEATURE } from '../../constants'\n\nexport function* uploadFileSaga({ payload: { type } }: uploadFileActionType) {\n  try {\n    const response = yield bridge?.sendClientEvent({\n      method: ClientEventMethod.UPLOAD_FILE,\n      params: { type },\n    })\n\n    if (!response.payload?.record) return\n\n    const file: File = {\n      ...response.payload.record,\n    }\n\n    yield put(uploadFileSuccess(file))\n  } catch (e) {\n    console.error(`uploadFileSaga error: ${e}`)\n  }\n}\n\nexport function* uploadFilesSaga({ payload: { type } }: uploadFilesActionType) {\n  try {\n    const response = yield bridge?.sendClientEvent({\n      method: ClientEventMethod.UPLOAD_FILES,\n      params: { type },\n    })\n\n    if (!response.payload.records.length) return\n\n    const files: File[] = response.payload.records\n\n    yield put(uploadFilesSuccess(files))\n  } catch (e) {\n    console.error(`uploadFilesSaga error: ${e}`)\n  }\n}\n\nexport function* sendExpressEventSaga(action: sendExpressEventActionType) {\n  try {\n    yield put(setTopLoader(true))\n\n    const response: ExpressMethodResponse = yield bridge?.sendClientEvent(action.payload)\n\n    yield put(sendExpressEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendExpressEventSaga error', e)\n  } finally {\n    yield put(setTopLoader(false))\n  }\n}\n\nexport function* sendMessageExpressEventSaga(action: sendMessageExpressEventActionType) {\n  try {\n    yield put(setTopLoader(true))\n\n    const response: ExpressMethodResponse = yield sendMessage(action.payload)\n\n    yield put(sendExpressEventSuccess(response))\n  } catch (e: any) {\n    console.error('sendMessageExpressEventSaga error', e)\n  } finally {\n    yield put(setTopLoader(false))\n  }\n}\n\nexport function* sendExpressReadyEventSaga() {\n  try {\n    const response = yield ready(300)\n\n    if (response?.payload?.[OPEN_SMART_APP_META_FEATURE.field]) {\n      yield put(setRedirectPath(`/${OPEN_SMART_APP_META_FEATURE.method}`))\n      yield put(setMeta(response))\n    } else {\n      setRedirectPath('/')\n    }\n  } catch (e) {\n    console.error('sendExpressReadyEventSaga', e)\n  }\n}\n","import { all, takeEvery } from 'redux-saga/effects'\nimport { loadFeaturesSaga } from './ui'\nimport { sendFeatureBotEventSaga } from './bot'\nimport { LOAD_FEATURES, SEND_FEATURE_BOT_EVENT } from '../actions/bot'\nimport {\n  sendExpressEventSaga,\n  sendExpressReadyEventSaga,\n  sendMessageExpressEventSaga,\n  uploadFileSaga,\n  uploadFilesSaga,\n} from './client'\nimport {\n  SEND_EXPRESS_EVENT,\n  SEND_EXPRESS_READY_EVENT,\n  SEND_MESSAGE_EXPRESS_EVENT,\n  UPLOAD_FILE,\n  UPLOAD_FILES,\n} from '../actions/client'\n\nfunction* rootSaga() {\n  yield all([\n    takeEvery(LOAD_FEATURES, loadFeaturesSaga),\n    takeEvery(SEND_FEATURE_BOT_EVENT, sendFeatureBotEventSaga),\n    takeEvery(SEND_EXPRESS_EVENT, sendExpressEventSaga),\n    takeEvery(SEND_MESSAGE_EXPRESS_EVENT, sendMessageExpressEventSaga),\n    takeEvery(SEND_EXPRESS_READY_EVENT, sendExpressReadyEventSaga),\n    takeEvery(UPLOAD_FILE, uploadFileSaga),\n    takeEvery(UPLOAD_FILES, uploadFilesSaga),\n  ])\n}\n\nexport default rootSaga\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport Main from './components/Main'\nimport { configureStore } from './redux/configureStore'\nimport { history } from './redux/router'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      {/* @ts-ignore */}\n      <ConnectedRouter history={history}>\n        <Main />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","import { applyMiddleware, createStore, Store } from 'redux'\nimport { routerMiddleware as createRouterMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { rootReducer } from './reducers'\nimport rootSaga from './sagas'\nimport { history } from './router'\nimport { AppState } from '../types'\n\ntype ApplicationStore = Store<AppState>\n\nexport function configureStore(): ApplicationStore {\n  const sagaMiddleware = createSagaMiddleware()\n  const routerMiddleware = createRouterMiddleware(history)\n\n  const store: ApplicationStore = createStore(\n    rootReducer,\n    undefined,\n    composeWithDevTools(applyMiddleware(sagaMiddleware, routerMiddleware))\n  )\n\n  sagaMiddleware\n    .run(rootSaga)\n    .toPromise()\n    .catch((e: Error) => console.error('Saga error', e))\n\n  return store\n}\n"],"sourceRoot":""}